//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <MobileTimer/MTAgentDiagnosticDelegate-Protocol.h>
#import <MobileTimer/MTAgentNotificationListener-Protocol.h>
#import <MobileTimer/MTScheduledListDelegate-Protocol.h>
#import <MobileTimer/MTTimerObserver-Protocol.h>

@class MTScheduledList;
@protocol MTNotificationCenter, MTPersistence, MTSchedulingDelegate, MTTaskScheduler, MTTimerSchedulerDelegate, MTTimerStorage, NAScheduler;

@interface MTTimerScheduler : NSObject <MTTimerObserver, MTScheduledListDelegate, MTAgentDiagnosticDelegate, MTAgentNotificationListener>
{
    id <MTTimerSchedulerDelegate> _delegate;
    id <MTTimerStorage> _storage;
    id <MTNotificationCenter> _notificationCenter;
    MTScheduledList *_scheduledTimers;
    id <NAScheduler> _serializer;
    id /* CDUnknownBlockType */ _currentDateProvider;
    id <MTSchedulingDelegate> _schedulingDelegate;
    id <MTTaskScheduler> _taskScheduler;
    id <MTPersistence> _defaults;
}

+ (id)_intervalToCheckForTimersToFireBeforeDate:(id)arg1;
@property(retain, nonatomic) id <MTPersistence> defaults; // @synthesize defaults=_defaults;
@property(readonly, nonatomic) id <MTTaskScheduler> taskScheduler; // @synthesize taskScheduler=_taskScheduler;
@property(readonly, nonatomic) id <MTSchedulingDelegate> schedulingDelegate; // @synthesize schedulingDelegate=_schedulingDelegate;
@property(readonly, copy, nonatomic) id /* CDUnknownBlockType */ currentDateProvider; // @synthesize currentDateProvider=_currentDateProvider;
@property(retain, nonatomic) id <NAScheduler> serializer; // @synthesize serializer=_serializer;
@property(readonly, nonatomic) MTScheduledList *scheduledTimers; // @synthesize scheduledTimers=_scheduledTimers;
@property(retain, nonatomic) id <MTNotificationCenter> notificationCenter; // @synthesize notificationCenter=_notificationCenter;
@property(retain, nonatomic) id <MTTimerStorage> storage; // @synthesize storage=_storage;
@property(nonatomic) __weak id <MTTimerSchedulerDelegate> delegate; // @synthesize delegate=_delegate;
// - (void).cxx_destruct;
- (id)sourceIdentifier;
- (void)nextTimerDidChange:(id)arg1;
- (void)source:(id)arg1 didDismissTimer:(id)arg2;
- (void)source:(id)arg1 didFireTimer:(id)arg2;
- (void)source:(id)arg1 didRemoveTimers:(id)arg2;
- (void)source:(id)arg1 didUpdateTimers:(id)arg2;
- (void)source:(id)arg1 didAddTimers:(id)arg2;
- (void)handleNotification:(id)arg1 ofType:(long long)arg2 completion:(id /* CDUnknownBlockType */)arg3;
- (BOOL)handlesNotification:(id)arg1 ofType:(long long)arg2;
- (id)gatherDiagnostics;
- (void)printDiagnostics;
- (void)_queue_setLastTimerTriggerDate:(id)arg1;
- (id)_queue_lastTimerTriggerDate;
- (id)_queue_nextScheduledTimer;
- (void)_queue_fireTriggeredTimersWithCompletionBlock:(id /* CDUnknownBlockType */)arg1;
- (void)_fireScheduledTimer:(id)arg1 firedDate:(id)arg2 completionBlock:(id /* CDUnknownBlockType */)arg3;
- (void)_queue_triggerDidFireForTimerWithCompletionBlock:(id /* CDUnknownBlockType */)arg1;
- (void)_queue_unregisterTimer;
- (void)_queue_updatePersistentTimerForNextTimerWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)scheduledListDidChange:(id)arg1 withCompletion:(id /* CDUnknownBlockType */)arg2;
- (void)_queue_unscheduleTimers:(id)arg1;
- (void)_queue_scheduleTimers:(id)arg1 withCompletion:(id /* CDUnknownBlockType */)arg2;
- (id)_queue_nextTimer;
- (void)unscheduleTimers:(id)arg1;
- (void)scheduleTimers:(id)arg1;
- (void)_queue_rescheduleTimersWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)rescheduleTimersWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)rescheduleTimers;
- (id)nextTriggerDate;
- (id)nextTimer;
- (id)initWithStorage:(id)arg1 notificationCenter:(id)arg2 scheduler:(id)arg3 defaults:(id)arg4 schedulingDelegate:(id)arg5 taskScheduler:(id)arg6 currentDateProvider:(id /* CDUnknownBlockType */)arg7;
- (id)initWithStorage:(id)arg1 notificationCenter:(id)arg2 scheduler:(id)arg3 defaults:(id)arg4;
- (id)initWithStorage:(id)arg1 notificationCenter:(id)arg2;

@end

