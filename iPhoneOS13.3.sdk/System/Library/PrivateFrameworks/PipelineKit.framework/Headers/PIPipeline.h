//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSMapTable, NSMutableArray, NSMutableDictionary, NSMutableSet, NSSet, NSString, PIGroup, PIStatisticsElapsedTime;
@protocol OS_dispatch_group, OS_dispatch_queue;

@interface PIPipeline : NSObject
{
    NSObject<OS_dispatch_queue> *_schedulerQueue;
    NSObject<OS_dispatch_queue> *_asynchronousMethodsQueue;
    PIPipeline *_mainPipeline;
    NSString *_identifier;
    long long _concurrencyLimit;
    long long _qualityOfService;
    NSUInteger _schedulerType;
    BOOL _suspended;
    NSMutableSet *_groups;
    PIGroup *_mainGroup;
    PIGroup *_limitedGroup;
    PIGroup *_serialGroup;
    NSObject<OS_dispatch_queue> *_userInterfaceQueue;
    NSObject<OS_dispatch_queue> *_userInteractiveQueue;
    NSObject<OS_dispatch_queue> *_userInitiatedQueue;
    NSObject<OS_dispatch_queue> *_defaultQueue;
    NSObject<OS_dispatch_queue> *_utilityQueue;
    NSObject<OS_dispatch_queue> *_backgroundQueue;
    NSObject<OS_dispatch_group> *_operationsGroup;
    NSMutableArray *_operations;
    long long _executingConcurrency;
    NSMutableArray *_executingOperations;
    NSMutableDictionary *_operationsByPriority;
    NSMapTable *_operationsByIdentifier;
    NSMapTable *_operationsByKey;
    NSMapTable *_operationsRates;
    double _timestampStart;
    PIStatisticsElapsedTime *_executionTime;
}

+ (id)pipelineWithConcurrencyLimit:(long long)arg1 qualityOfService:(long long)arg2;
+ (id)pipeline;
+ (id)sharedPipeline;
@property(readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(nonatomic) __weak PIPipeline *mainPipeline; // @synthesize mainPipeline=_mainPipeline;
// - (void).cxx_destruct;
- (id)description;
- (id)_queueForOperation:(id)arg1;
- (id)_nextValidOperation;
- (id)_firstValidOperationInArray:(id)arg1;
- (void)_scheduleOperations;
- (void)_executeOperation:(id)arg1;
- (void)_finishOperation:(id)arg1 result:(id)arg2;
- (void)scheduleOperations;
- (double)wallTime;
- (double)executionTime;
- (void)cancelOperations:(id)arg1 waitUntilFinishedBlock:(id /* CDUnknownBlockType */)arg2;
- (void)cancelAllOperations:(id /* CDUnknownBlockType */)arg1;
- (id)waitUntilFinished:(BOOL)arg1;
- (void)waitUntilFinishedUsingBlock:(id /* CDUnknownBlockType */)arg1;
- (void)updateOperationsWithBlock:(id /* CDUnknownBlockType */)arg1 completionBlock:(id /* CDUnknownBlockType */)arg2;
- (void)reorderOperationsWithComparator:(id /* CDUnknownBlockType */)arg1 completionBlock:(id /* CDUnknownBlockType */)arg2;
- (id)addOperationWithExecutionBlock:(id /* CDUnknownBlockType */)arg1;
- (void)addOperation:(id)arg1;
- (id)operationsWithPriority:(long long)arg1;
- (id)operationWithIdentifier:(id)arg1;
- (id)operationsWithKey:(id)arg1;
@property(readonly) BOOL isExecuting;
@property(readonly) long long executingConcurrency;
@property(readonly) NSUInteger executingOperationsCount;
@property(readonly) NSUInteger operationsCount;
@property(readonly, copy) NSArray *executingOperations;
@property(readonly, copy) NSArray *operations; // @synthesize operations=_operations;
- (void)_removeOperation:(id)arg1;
- (void)_addOperation:(id)arg1;
- (void)_operation:(id)arg1 didChangePriority:(long long)arg2;
- (void)_rebuildOperationsByPriority;
@property(readonly, copy) NSSet *groups;
- (void)removeGroup:(id)arg1;
- (void)addGroup:(id)arg1;
- (id)serialGroup;
- (id)limitedGroup;
- (id)mainGroup;
- (void)_updateInternalGroups;
@property(getter=isSuspended) BOOL suspended; // @synthesize suspended=_suspended;
@property NSUInteger schedulerType; // @synthesize schedulerType=_schedulerType;
@property long long qualityOfService; // @synthesize qualityOfService=_qualityOfService;
@property long long concurrencyLimit; // @synthesize concurrencyLimit=_concurrencyLimit;
- (void)dealloc;
- (id)init;

@end

