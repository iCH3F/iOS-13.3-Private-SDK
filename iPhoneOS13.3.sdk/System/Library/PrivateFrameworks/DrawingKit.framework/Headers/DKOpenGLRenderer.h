//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class MISSING_TYPE, UIColor;
@protocol DKOpenGLRendererDelegate;

__attribute__((visibility("hidden")))
@interface DKOpenGLRenderer : NSObject
{
    BOOL _didNotifyRendererDelegate;
    int mBufferSize;
    unsigned int mWetPaintProg;
    unsigned int mDryPaintProg;
    unsigned int mCompositeProg;
    unsigned int mTextureProg;
    unsigned int mColorProg;
    unsigned int mAttributes;
    unsigned int mVbo;
    _NSRange mVertexRange;
    vector_b8c3c0c5 mContiguousVertexStorage;
    struct vector<VertexGroup, std::__1::allocator<VertexGroup>> mVertexHistory;
    struct vector<std::__1::pair<float __attribute__((ext_vector_type(2))), float __attribute__((ext_vector_type(2)))>, std::__1::allocator<std::__1::pair<float __attribute__((ext_vector_type(2))), float __attribute__((ext_vector_type(2)))>>> mNonCollisionSegments;
    MISSING_TYPE *U_COLOR;
    struct vector<Page, std::__1::allocator<Page>> mPages;
    unsigned int mWetPaintBufferFBO;
    unsigned int mWetPaintBufferT;
    MISSING_TYPE *mWetPaintBufferSize;
    BOOL mSharedContext;
    BOOL mPaperTexIsShared;
    unsigned int mPaperTex;
    MISSING_TYPE *mWinSize;
    MISSING_TYPE *mCanvasSize;
    MISSING_TYPE *mCanvasOffset;
    float mTime;
    float mTimeWetBecameDirty;
    float mParticleLifespan;
    CGRect mDirtyCanvasRegion;
    int mCompositeProgViewportUniformLocation;
    int mCompositeColorUniformLocation;
    int mWetPaintProgTimeUniformLocation;
    int mWetPaintProgSubtractEndPointsOnlyUniformLocation;
    int mWetPaintProgLifespanUniformLocation;
    int mDryPaintProgXCoordOffsetUniformLocation;
    int mColorProgColorUniformLocation;
    int mColorProgModelViewProjectionUniformLocation;
    int mTextureProgModelViewProjectionUniformLocation;
    BOOL _undoEnabled;
    BOOL _ignoreFirstUndoItem;
    BOOL _drawingEnabled;
    BOOL _allowWetComposite;
    id <DKOpenGLRendererDelegate> _delegate;
    UIColor *_inkColor;
    double _lineWidthScale;
    double _backingScale;
    long long _numPages;
    CGSize _contentSize;
    CGRect _bounds;
}

@property(nonatomic) long long numPages; // @synthesize numPages=_numPages;
@property(nonatomic) BOOL allowWetComposite; // @synthesize allowWetComposite=_allowWetComposite;
@property(nonatomic) BOOL drawingEnabled; // @synthesize drawingEnabled=_drawingEnabled;
@property(nonatomic) double backingScale; // @synthesize backingScale=_backingScale;
@property(nonatomic) BOOL ignoreFirstUndoItem; // @synthesize ignoreFirstUndoItem=_ignoreFirstUndoItem;
@property(nonatomic, getter=isUndoEnabled) BOOL undoEnabled; // @synthesize undoEnabled=_undoEnabled;
@property(readonly, nonatomic) CGSize contentSize; // @synthesize contentSize=_contentSize;
@property(nonatomic) CGRect bounds; // @synthesize bounds=_bounds;
@property(nonatomic) double lineWidthScale; // @synthesize lineWidthScale=_lineWidthScale;
@property(retain, nonatomic) UIColor *inkColor; // @synthesize inkColor=_inkColor;
@property(nonatomic) __weak id <DKOpenGLRendererDelegate> delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
// - (void).cxx_destruct;
- (id)snapshot;
- (void)updateVertexControllerWithData:(vector_b8c3c0c5)arg1 range:(_NSRange)arg2 allowWet:(BOOL)arg3;
- (void)updateVertexControllerWithDataRange:(_NSRange)arg1 allowWet:(BOOL)arg2;
- (void)didBeginNewStroke;
- (void)didCompleteStroke;
- (void)clearComposite;
- (void)clearDryPaintBuffer;
- (void)clearWetPaintBuffer;
- (void)clear;
- (void)resetRendererState;
- (BOOL)canvasIsEmpty;
- (void)drawContiguousVertexStorageImmediatelyWithLayeredBlending:(BOOL)arg1;
- (void)redrawEntireDrawingImmediatelyWithLayeredBlending:(BOOL)arg1;
- (void)undo;
- (void)drawComposite;
- (void)draw;
- (void)updateDryForcefully;
- (void)renderToComposite:(BOOL)arg1;
- (void)renderToDryPaintBuffer;
- (void)renderToWetPaintBufferWithRange:(_NSRange)arg1;
- (void)updateDryCycleIncludingComposite:(BOOL)arg1;
- (void)updateWet;
- (CGRect)getVertexBounds;
- (CGRect)regionWithVertices:(vector_b8c3c0c5)arg1 withInflationAmount:(float)arg2;
- (void)update;
- 
- (void)addPoints:(id)arg1 withSegmentLength:(NSUInteger)arg2;
- (void)removeVertexHistoryElement;
- (void)appendVertexHistoryElement;
- (void)initializeFrameBuffers;
- (void)destroyFrameBuffers;
- (void)didResize;
- (BOOL)initGL;
- (void)teardown;
- (void)dealloc;
- (id)init;
- (id)initWithBounds:(CGRect)arg1 scale:(double)arg2;
- (id)initWithBounds:(CGRect)arg1 scale:(double)arg2 bufferSize:(int)arg3 sharedContext:(BOOL)arg4;

@end

