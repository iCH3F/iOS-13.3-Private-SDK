//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//


@class GEOAddress, GEOAddressObject, GEOAssociatedApp, GEOFeatureStyleAttributes, GEOMapItemAdditionalPlaceInfo, GEOMapItemClientAttributes, GEOMapItemContainedPlace, GEOMapItemDetourInfo, GEOMapItemIdentifier, GEOMapItemPhotosAttribution, GEOMapItemPlaceAttribution, GEOMapItemReviewsAttribution, GEOMapRegion, GEOMessageLink, GEOMuninViewState, GEOPDBusinessClaim, GEOPDFlyover, GEOPDPlace, GEOPlace, GEOPlaceResult, GEOPlacecardLayoutConfiguration, GEOPriceDescription, GEORestaurantFeaturesLink, GEOStyleAttributes, NSArray, NSData, NSDate, NSDictionary, NSString, NSTimeZone, NSURL;
@protocol GEOEncyclopedicInfo, GEOMapItem, GEOMapItemTransitInfo, GEOMapItemVenueInfo, GEOTransitAttribution, GEOTransitVehiclePosition;

@protocol GEOMapItem <NSObject>
- (BOOL)_showSuggestAnEditButton;
- (BOOL)_enableRAPLightweightFeedback;
- (NSString *)_walletCategoryIdentifier;
- (NSString *)_walletMapsCategoryIdentifier;
- (NSString *)_walletCategoryLocalizedStringLocale;
- (NSString *)_walletCategoryLocalizedString;
- (GEOStyleAttributes *)_walletCategoryStyling;
- (NSString *)_walletPlaceLocalizedStringLocale;
- (NSString *)_walletPlaceLocalizedString;
- (GEOStyleAttributes *)_walletPlaceStyling;
- (void)iterateGroundViewsWithBlock:(void (^)(double, double, NSString *, NSString *, NSString *))arg1;
- (NSUInteger)_groundViewLocationId;
- (BOOL)_hasGroundViewLocationId;
- (BOOL)_isInLinkedPlaceRelationship;
- (GEOMapItemContainedPlace *)_containedPlace;
- (BOOL)isEqualToMapItem:(id <GEOMapItem>)arg1;
- (NSURL *)_bestHeroBrandIconURLForSize:(CGSize)arg1 allowSmaller:(BOOL)arg2;
- (NSURL *)_bestNavbarBrandIconURLForSize:(CGSize)arg1 allowSmaller:(BOOL)arg2;
- (NSURL *)_bestAvatarBrandIconURLForSize:(CGSize)arg1 allowSmaller:(BOOL)arg2;
- (int)_wifiFingerprintLabelStatusCode;
- (BOOL)_hasWifiFingerprintLabelStatusCode;
- (unsigned int)_wifiFingerprintConfidence;
- (BOOL)_hasWifiFingerprintConfidence;
- (int)_wifiFingerprintLabelType;
- (BOOL)_hasWifiFingerprintLabelType;
@property(nonatomic, readonly) NSData *externalTransitStationCode;
- (NSString *)weatherDisplayName;
- (NSString *)shortAddress;
- (GEOAddressObject *)addressObject;
- (id <GEOMapItem>)_mapItemByStrippingOptionalData;
- (GEOMapItemAdditionalPlaceInfo *)_asPlaceInfo;
- (BOOL)_hasLocalizedCategoryNamesForType:(unsigned int)arg1;
- (NSArray *)_localizedCategoryNamesForType:(unsigned int)arg1;
- (GEOMapRegion *)_arrivalMapRegionForTransportType:(int)arg1;
- (NSString *)_spokenAddressForLocale:(NSString *)arg1;
- (NSArray *)_linkedServices;
- (BOOL)_hasLinkedServices;
- (NSArray *)_businessHours;
- (BOOL)_hasBusinessHours;
- (BOOL)_hasCurrentOperatingHours;
- (BOOL)_hasOperatingHours;
- (int)_placeDisplayStyle;
- (NSArray *)_browseCategories;
- (id <GEOMapItemVenueInfo>)_venueInfo;
- (int)_venueFeatureType;
- (BOOL)_hasVenueFeatureType;
@property(nonatomic, readonly) BOOL hasExpiredComponents;
@property(nonatomic, readonly) GEOMapItemDetourInfo *detourInfo;
- (NSUInteger)_brandMUID;
- (BOOL)_hasBrandMUID;
- (GEOPlacecardLayoutConfiguration *)_placecardLayoutConfiguration;
- (NSArray *)_quickLinks;
- (GEOMessageLink *)_messageLink;
- (BOOL)_isStandaloneBrand;
- (int)_parsecSectionType;
- (GEORestaurantFeaturesLink *)_featureLink;
- (BOOL)_hasFeatureLink;
@property(nonatomic, readonly) long long venueCapacity;
@property(nonatomic, readonly) BOOL hasVenueCapacity;
@property(nonatomic, readonly) NSArray *spatialMappedPlaceCategories;
@property(nonatomic, readonly) NSArray *spatialMappedCategories;
- (GEOPDBusinessClaim *)_businessClaim;
- (BOOL)_hasBusinessClaim;
- (NSArray *)_additionalPlaceInfos;
- (NSString *)_mapsCategoryId;
- (NSUInteger)_customIconID;
- (GEOFeatureStyleAttributes *)_styleAttributes;
- (NSString *)_poiCategory;
- (GEOMapItemReviewsAttribution *)_reviewsAttribution;
- (GEOMapItemPhotosAttribution *)_photosAttribution;
- (GEOMapItemPlaceAttribution *)_attribution;
- (NSString *)_poiPinpointURLString;
- (NSString *)_poiSurveyURLString;
- (NSString *)_vendorID;
- (NSURL *)_providerURL;
- (NSURL *)_webURL;
- (BOOL)_needsAttribution;
- (NSUInteger)_openingHoursOptions;
- (NSString *)_disambiguationName;
- (BOOL)_optsOutOfTelephoneAds;
- (NSString *)_telephone;
- (BOOL)_hasTelephone;
- (id <GEOEncyclopedicInfo>)_encyclopedicInfo;
- (BOOL)_hasEncyclopedicInfo;
- (BOOL)valueForAmenityType:(int)arg1;
- (BOOL)hasAmenityType:(int)arg1;
- (NSArray *)_amenities;
- (BOOL)_hasAnyAmenities;
- (NSArray *)_childItems;
- (unsigned int)_resultSnippetDistanceDisplayThreshold;
- (NSString *)_resultSnippetLocationString;
- (unsigned int)_priceRange;
- (BOOL)_hasPriceRange;
- (float)_normalizedUserRatingScore;
- (unsigned int)_sampleSizeForUserRatingScore;
- (BOOL)_hasUserRatingScore;
- (GEOPriceDescription *)_priceDescription;
- (NSString *)_businessURL;
- (double)_areaInMeters;
- (BOOL)_hasAreaInMeters;
- (int)_placeDisplayType;
- (GEOMapItemIdentifier *)_identifier;
- (NSUInteger)_muid;
- (BOOL)_hasMUID;
- (GEOMuninViewState *)_muninViewState;
- (NSString *)_flyoverAnnouncementMessage;
- (GEOPDFlyover *)_flyover;
- (BOOL)_hasFlyover;
- (id <GEOTransitVehiclePosition>)_transitVehiclePosition;
- (id <GEOTransitAttribution>)_transitAttribution;
- (id <GEOMapItemTransitInfo>)_transitInfo;
- (BOOL)_hasTransit;
- (BOOL)_isTransitDisplayFeature;
- (int)_resultProviderID;
- (BOOL)_hasResultProviderID;
- (NSArray *)_roadAccessPoints;
- (BOOL)_responseStatusIsIncomplete;
- (int)_addressGeocodeAccuracy;
- (BOOL)_hasResolvablePartialInformation;
- (NSData *)_placeDataAsData;
- (int)_placeType;
- (GEOPDPlace *)_placeData;
- (GEOPlaceResult *)_placeResult;
- (GEOPlace *)_place;
- (GEOMapItemClientAttributes *)_clientAttributes;
- (GEOAssociatedApp *)_associatedApp;
- (NSArray *)_photos;
- (NSArray *)_tips;
- (NSArray *)_reviews;
@property(nonatomic, readonly) BOOL isEventAllDay;
@property(nonatomic, readonly) NSDate *eventDate;
@property(nonatomic, readonly) NSString *eventName;
@property(nonatomic, readonly) BOOL contactIsMe;
@property(nonatomic, readonly) NSString *contactSpokenName;
@property(nonatomic, readonly) NSString *contactName;
@property(nonatomic, readonly) int contactAddressType;
@property(nonatomic, readonly) GEOMapRegion *geoFenceMapRegionOrNil;
@property(nonatomic, readonly) GEOMapRegion *displayMapRegionOrNil;
@property(nonatomic, readonly) NSTimeZone *timezone;
@property(nonatomic, readonly) NSArray *areasOfInterest;
@property(nonatomic, readonly) NSDictionary *addressDictionary;
@property(nonatomic, readonly) GEOAddress *geoAddress;
@property(nonatomic, readonly) GEOMapRegion *geoFenceMapRegion;
@property(nonatomic, readonly) float displayMaxZoom;
@property(nonatomic, readonly) BOOL hasDisplayMaxZoom;
@property(nonatomic, readonly) float displayMinZoom;
@property(nonatomic, readonly) BOOL hasDisplayMinZoom;
@property(nonatomic, readonly) GEOMapRegion *displayMapRegion;
@property(nonatomic, readonly) int referenceFrame;
@property(nonatomic, readonly) CDStruct_c3b9c2ee centerCoordinate;
@property(nonatomic, readonly) CDStruct_c3b9c2ee coordinate;
- (BOOL)isValid;
- (BOOL)isDisputed;
@property(nonatomic, readonly) NSData *encodedData;
@property(nonatomic, readonly) NSString *secondarySpokenName;
@property(nonatomic, readonly) NSString *secondaryName;
- (NSString *)spokenNameForLocale:(NSString *)arg1;
@property(nonatomic, readonly) NSString *name;

@optional
- (id <GEOMapItem>)_mapItemBySettingIsTransitDisplayFeature:(BOOL)arg1;
@end

