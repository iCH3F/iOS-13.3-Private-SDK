//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <ChatKit/CKCoreChatController.h>

#import <ChatKit/CKMessageEntryViewDelegate-Protocol.h>
#import <ChatKit/CKMessageEntryViewInputDelegate-Protocol.h>

@class CKFullScreenBalloonViewControllerNotification, CKMessageEntryView, CKMessageEntryViewController, CKRaiseGesture, CKScheduledUpdater, NSExtensionContext, STLockoutViewController;

@interface CKNotificationChatController : CKCoreChatController <UITextInputPayloadDelegate, CKMessageEntryViewDelegate, CKMessageEntryViewInputDelegate>
{
    BOOL _shouldAllowReplyFromLockScreen;
    BOOL _allowedByScreenTime;
    NSExtensionContext *_urlOpenContext;
    CKFullScreenBalloonViewControllerNotification *_notificationFullScreenBalloonController;
    CKMessageEntryViewController *_entryViewController;
    CKScheduledUpdater *_typingUpdater;
    CKRaiseGesture *_raiseGesture;
    STLockoutViewController *_lockoutViewController;
}

@property(retain, nonatomic) STLockoutViewController *lockoutViewController; // @synthesize lockoutViewController=_lockoutViewController;
@property(nonatomic) BOOL allowedByScreenTime; // @synthesize allowedByScreenTime=_allowedByScreenTime;
@property(nonatomic) BOOL shouldAllowReplyFromLockScreen; // @synthesize shouldAllowReplyFromLockScreen=_shouldAllowReplyFromLockScreen;
@property(retain, nonatomic) CKRaiseGesture *raiseGesture; // @synthesize raiseGesture=_raiseGesture;
@property(retain, nonatomic) CKScheduledUpdater *typingUpdater; // @synthesize typingUpdater=_typingUpdater;
@property(retain, nonatomic) CKMessageEntryViewController *entryViewController; // @synthesize entryViewController=_entryViewController;
@property(nonatomic) __weak CKFullScreenBalloonViewControllerNotification *notificationFullScreenBalloonController; // @synthesize notificationFullScreenBalloonController=_notificationFullScreenBalloonController;
@property(nonatomic) __weak NSExtensionContext *urlOpenContext; // @synthesize urlOpenContext=_urlOpenContext;
// - (void).cxx_destruct;
- (void)updateRaiseGesture;
- (void)_dismissFullScreenBubbleViewControllerWithSendAnimation:(BOOL)arg1 completion:(id /* CDUnknownBlockType */)arg2;
- (void)__raiseGestureRecognized:(id)arg1;
- (void)raiseGestureRecognized:(id)arg1;
- (void)updateTyping;
- (BOOL)getContainerWidth:(double )arg1 offset:(double )arg2;
- (BOOL)messageEntryShouldHideCaret:(id)arg1;
- (void)messageEntryViewDidTakeFocus:(id)arg1;
- (void)messageEntryViewHandwritingButtonHit:(id)arg1;
- (void)messageEntryViewBrowserButtonHit:(id)arg1;
- (void)messageEntryViewPhotoButtonHit:(id)arg1;
- (long long)messageEntryViewHighLightInputButton:(id)arg1;
- (Class)lockoutViewControllerClass;
- (void)sendCurrentLocationMessage:(id)arg1;
- (CGSize)messageEntryViewMaxShelfPluginViewSize:(id)arg1;
- (double)messageEntryViewMaxHeight:(id)arg1;
- (void)messageEntryViewRaiseGestureAutoSend:(id)arg1;
- (void)messageEntryViewSendButtonHitWhileDisabled:(id)arg1;
- (void)messageEntryViewSendButtonHit:(id)arg1;
- (void)messageEntryView:(id)arg1 didTapMediaObject:(id)arg2;
- (BOOL)messageEntryView:(id)arg1 shouldInsertMediaObjects:(id)arg2;
- (void)messageEntryViewDidEndEditing:(id)arg1;
- (void)messageEntryViewDidBeginEditing:(id)arg1;
- (BOOL)messageEntryViewShouldBeginEditing:(id)arg1;
- (void)messageEntryViewRecordingDidChange:(id)arg1;
- (void)messageEntryViewDidChange:(id)arg1;
- (void)transcriptCollectionViewControllerChatItemsDidChange:(id)arg1;
- (void)transcriptCollectionViewControllerPlayingAudioDidChange:(id)arg1;
- (id)progressBar;
- (void)_messageReceivedInCurrentTranscript:(id)arg1;
- (void)_allowedByScreenTimeChanged:(id)arg1;
- (BOOL)_deviceIsPasscodeLocked;
- (void)_setupShouldShowReplyFromLockScreen;
- (void)_updateTitleAnimated:(BOOL)arg1;
- (void)_raiseToListenSettingChanged:(id)arg1;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)viewDidAppear:(BOOL)arg1;
- (void)sendComposition:(id)arg1;
- (void)setLocalUserIsComposing:(BOOL)arg1 withPluginBundleID:(id)arg2 typingIndicatorData:(id)arg3;
- (BOOL)becomeFirstResponder;
- (BOOL)canBecomeFirstResponder;
- (BOOL)pluginButtonsEnabled;
- (void)setConversation:(id)arg1;
- (void)_setEntryViewFrame:(CGRect)arg1 animated:(BOOL)arg2;
- (void)_updateEntryViewFrameIfNeeded:(BOOL)arg1;
- (double)_maxEntryViewHeight;
@property(readonly, nonatomic) CKMessageEntryView *entryView;
- (void)setSendingMessage:(BOOL)arg1;
- (id)inputAccessoryView;
- (id)inputAccessoryViewController;
- (BOOL)inputAccessoryViewControllerEnabled;
- (BOOL)shouldShowEntryView;
- (BOOL)_shouldDisplayTextEntry;
- (void)_setConversationDeferredSetup;
- (void)transcriptCollectionViewController:(id)arg1 balloonView:(id)arg2 longPressedForItemWithIndexPath:(id)arg3;
- (void)transcriptCollectionViewController:(id)arg1 balloonView:(id)arg2 tappedForChatItem:(id)arg3;
- (id)_menuTitleForChatItem:(id)arg1;
- (id)_fullScreenBalloonViewControllerWithChatItem:(id)arg1 showActionMenu:(BOOL)arg2;
- (BOOL)_canShowWhileLocked;
- (BOOL)forceWindowedPresentation;
- (BOOL)constrainToPresentingVCBounds;
- (BOOL)preserveModalPresentationStyle;
- (BOOL)wantsWindowedPresentation;
- (void)showFullScreenAcknowledgmentPickerForChatItem:(id)arg1 showActionMenu:(BOOL)arg2;
- (id)launchURLForInputMode:(id)arg1;
- (double)balloonMaxWidth;
- (void)dealloc;
- (id)initWithConversation:(id)arg1;
- (void)handlePayload:(id)arg1 withPayloadId:(id)arg2;
- (void)unregisterForTextInputPayloadHandling;
- (void)registerForTextInputPayloadHandling;
- (void)fullScreenBalloonViewController:(id)arg1 verticallyScrollTranscriptByAmount:(double)arg2 animated:(BOOL)arg3 completion:(id /* CDUnknownBlockType */)arg4;
- (void)fullScreenBalloonViewControllerHandleDismissTap:(id)arg1;
- (void)fullScreenBalloonViewControllerDidDisappear:(id)arg1;
- (void)fullScreenBalloonViewController:(id)arg1 willDisappearWithSendAnimation:(BOOL)arg2;
- (void)fullScreenBalloonViewController:(id)arg1 didAppearAnimated:(BOOL)arg2;
- (void)fullScreenBalloonViewController:(id)arg1 willAppearAnimated:(BOOL)arg2;
- (void)fullScreenBalloonViewController:(id)arg1 sendMessageAcknowledgment:(long long)arg2 forChatItem:(id)arg3;

@end

