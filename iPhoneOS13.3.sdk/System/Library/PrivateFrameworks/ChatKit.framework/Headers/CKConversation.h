//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class CKComposition, CKEntity, IMChat, IMService, NSArray, NSAttributedString, NSDate, NSNumber, NSSet, NSString;

@interface CKConversation : NSObject
{
    NSArray *_recipients;
    NSString *_name;
    IMChat *_chat;
    unsigned int _limitToLoad;
    struct {
        unsigned int ignoringTypingUpdates:1;
    } _conversationFlags;
    BOOL _needsReload;
    BOOL _hasLoadedAllMessages;
    BOOL _isReportedAsSpam;
    BOOL _wasKnownSender;
    BOOL _holdWasKnownSenderUpdates;
    int _wasDetectedAsSMSSpam;
    int _wasDetectedAsiMessageSpam;
    NSArray *_pendingHandles;
    NSString *_selectedLastAddressedHandle;
    NSString *_selectedLastAddressedSIMID;
    NSSet *_pendingRecipients;
    NSAttributedString *_groupName;
    NSString *_previewText;
    NSNumber *_businessConversation;
    NSDate *_dateLastViewed;
}

+ (BOOL)isSMSSpamFilteringEnabled;
+ (BOOL)pinnedConversationsEnabled;
+ (id)conversationForAddresses:(id)arg1 allowRetargeting:(BOOL)arg2 candidateConversation:(id)arg3;
+ (id)newPendingConversation;
+ (double)_iMessage_maxTrimDurationForMediaType:(int)arg1;
+ (NSUInteger)_iMessage_maxTransferFileSizeForWiFi:(BOOL)arg1;
+ (id)_iMessage_localizedErrorForReason:(long long)arg1;
+ (BOOL)_iMessage_canSendComposition:(id)arg1 lastAddressedHandle:(id)arg2 lastAddressedSIMID:(id)arg3 currentService:(id)arg4 forceSMS:(BOOL)arg5 error:(id )arg6;
+ (BOOL)_iMessage_canSendMessageWithMediaObjectTypes:(int )arg1;
+ (BOOL)_iMessage_canSendMessageWithMediaObjectTypes:(int )arg1 errorCode:(long long )arg2;
+ (long long)_iMessage_maxAttachmentCount;
+ (BOOL)_iMessage_canAcceptMediaObjectType:(int)arg1 givenMediaObjects:(id)arg2;
+ (BOOL)_sms_mediaObjectPassesDurationCheck:(id)arg1;
+ (double)_sms_maxTrimDurationForMediaType:(int)arg1;
+ (id)_sms_localizedErrorForReason:(long long)arg1;
+ (BOOL)_sms_canSendComposition:(id)arg1 lastAddressedHandle:(id)arg2 lastAddressedSIMID:(id)arg3 error:(id )arg4;
+ (BOOL)_sms_canAcceptMediaObjectType:(int)arg1 givenMediaObjects:(id)arg2 phoneNumber:(id)arg3 simID:(id)arg4;
+ (BOOL)_sms_canSendMessageWithMediaObjectTypes:(int )arg1 phoneNumber:(id)arg2 simID:(id)arg3;
+ (BOOL)_sms_canSendMessageWithMediaObjectTypes:(int )arg1 phoneNumber:(id)arg2 simID:(id)arg3 errorCode:(long long )arg4;
+ (long long)_sms_maxAttachmentCountForPhoneNumber:(id)arg1 simID:(id)arg2;
+ (BOOL)_sms_mediaObjectPassesRestriction:(id)arg1;
@property(nonatomic) BOOL holdWasKnownSenderUpdates; // @synthesize holdWasKnownSenderUpdates=_holdWasKnownSenderUpdates;
@property(nonatomic) BOOL wasKnownSender; // @synthesize wasKnownSender=_wasKnownSender;
@property(retain, nonatomic) NSDate *dateLastViewed; // @synthesize dateLastViewed=_dateLastViewed;
@property(retain, nonatomic) NSNumber *businessConversation; // @synthesize businessConversation=_businessConversation;
@property(nonatomic) BOOL isReportedAsSpam; // @synthesize isReportedAsSpam=_isReportedAsSpam;
@property(nonatomic) BOOL hasLoadedAllMessages; // @synthesize hasLoadedAllMessages=_hasLoadedAllMessages;
@property(copy, nonatomic) NSString *previewText; // @synthesize previewText=_previewText;
@property(retain, nonatomic) NSArray *recipients; // @synthesize recipients=_recipients;
@property(readonly, nonatomic) NSAttributedString *groupName; // @synthesize groupName=_groupName;
@property(retain, nonatomic) NSSet *pendingRecipients; // @synthesize pendingRecipients=_pendingRecipients;
@property(retain, nonatomic) NSString *selectedLastAddressedSIMID; // @synthesize selectedLastAddressedSIMID=_selectedLastAddressedSIMID;
@property(retain, nonatomic) NSString *selectedLastAddressedHandle; // @synthesize selectedLastAddressedHandle=_selectedLastAddressedHandle;
@property(readonly, nonatomic) BOOL needsReload; // @synthesize needsReload=_needsReload;
@property(nonatomic) unsigned int limitToLoad; // @synthesize limitToLoad=_limitToLoad;
@property(retain, nonatomic) IMChat *chat; // @synthesize chat=_chat;
@property(copy, nonatomic) NSArray *pendingHandles; // @synthesize pendingHandles=_pendingHandles;
// - (void).cxx_destruct;
- (BOOL)isBlockedByCommunicationLimits;
- (void)updateWasKnownSender;
- (BOOL)isKnownSender;
- (id)copyForPendingConversation;
- (id)displayNameForMediaObjects:(id)arg1 subject:(id)arg2;
- (id)_headerTitleForPendingMediaObjects:(id)arg1 subject:(id)arg2 onService:(id)arg3;
- (id)_headerTitleForService:(id)arg1;
- (id)_nameForHandle:(id)arg1;
@property(readonly, nonatomic) NSString *serviceDisplayName;
- (BOOL)outgoingBubbleColor;
@property(readonly, nonatomic) BOOL buttonColor;
@property(nonatomic, getter=isPinned) BOOL pinned;
@property(readonly, nonatomic) BOOL isPreviewTextForAttachment;
- (id)fastPreviewTextIgnoringPluginContent;
@property(nonatomic) NSString *displayName;
@property(readonly, nonatomic) BOOL hasDisplayName;
- (id)nameWithRawAddresses:(BOOL)arg1;
@property(readonly, nonatomic) NSString *name; // @dynamic name;
@property(readonly, nonatomic) NSString *rawAddressedName;
- (void)fetchSuggestedNameIfNecessary;
@property(readonly, nonatomic) NSUInteger disclosureAtomStyle; // @dynamic disclosureAtomStyle;
@property(readonly, nonatomic) BOOL shouldShowCharacterCount;
@property(readonly, copy, nonatomic) NSString *senderIdentifier;
- (void)_clearTypingIndicatorsIfNecessary;
- (void)updateUserActivity;
@property(nonatomic) BOOL localUserIsRecording;
@property(nonatomic) BOOL localUserIsTyping;
@property(copy, nonatomic) NSString *localUserIsComposing;
- (void)setLocalUserIsComposing:(id)arg1 typingIndicatorIcon:(id)arg2;
- (BOOL)_chatSupportsTypingIndicators;
- (void)sendMessage:(id)arg1 newComposition:(BOOL)arg2;
- (void)sendMessage:(id)arg1 onService:(id)arg2 newComposition:(BOOL)arg3;
- (id)messagesFromComposition:(id)arg1;
- (id)messageWithComposition:(id)arg1;
- (void)resortMessagesIfNecessary;
- (double)maxTrimDurationForMediaType:(int)arg1;
- (BOOL)canSendToRecipients:(id)arg1 alertIfUnable:(BOOL)arg2;
- (BOOL)canSendComposition:(id)arg1 error:(id )arg2;
- (BOOL)_allowedByScreenTime;
- (BOOL)canAcceptMediaObjectType:(int)arg1 givenMediaObjects:(id)arg2;
@property(readonly, nonatomic, getter=isPending) BOOL pending;
@property(readonly, copy, nonatomic) NSArray *recipientStrings;
@property(readonly, copy, nonatomic) NSArray *pendingEntities; // @dynamic pendingEntities;
- (void)setPendingComposeRecipients:(id)arg1;
- (long long)compareBySequenceNumberAndDateDescending:(id)arg1;
- (id)shortDescription;
- (id)description;
- (BOOL)isPlaceholder;
- (void)updateLastViewedDate;
- (void)markAllMessagesAsRead;
- (void)enumerateMessagesWithOptions:(NSUInteger)arg1 usingBlock:(id /* CDUnknownBlockType */)arg2;
- (BOOL)hasLoadedFromSpotlight;
- (void)clearConversationLoadFromSpotlight;
- (id)ensureMessageWithGUIDIsLoaded:(id)arg1;
- (void)setLoadedMessageCount:(NSUInteger)arg1;
- (void)setLoadedMessageCount:(NSUInteger)arg1 loadImmediately:(BOOL)arg2;
- (void)loadMoreMessages;
- (void)loadFrequentReplies;
@property(readonly, nonatomic) NSArray *frequentReplies;
- (void)loadMoreMessagesAfterLastMessage;
- (void)loadMoreMessagesBeforeFirstMessage;
- (void)loadAllUnreadMessagesUpToMessageGUID:(id)arg1;
- (void)loadAllMessages;
- (BOOL)_earlyReturnHistoryLoad;
- (void)deleteAllMessagesAndRemoveGroup;
- (void)deleteAllMessages;
- (void)_deleteAllMessagesAndRemoveGroup:(BOOL)arg1;
- (id)date;
@property(readonly, nonatomic) BOOL isToEmailAddress;
@property(readonly, nonatomic) NSUInteger recipientCount;
- (id)uniqueIdentifier;
@property(readonly, nonatomic) int wasDetectedAsSMSSpam; // @synthesize wasDetectedAsSMSSpam=_wasDetectedAsSMSSpam;
@property(readonly, nonatomic) int wasDetectedAsiMessageSpam; // @synthesize wasDetectedAsiMessageSpam=_wasDetectedAsiMessageSpam;
@property(readonly, nonatomic) int wasDetectedAsSpam;
@property(readonly, nonatomic) NSString *deviceIndependentID;
@property(readonly, nonatomic) NSString *groupID; // @dynamic groupID;
- (BOOL)noAvailableServices;
- (BOOL)sendButtonColor;
- (void)_chatPropertiesChanged:(id)arg1;
- (void)_chatItemsDidChange:(id)arg1;
- (void)_handlePreferredServiceChangedNotification:(id)arg1;
- (BOOL)_handleIsForThisConversation:(id)arg1;
@property(readonly, nonatomic) IMService *sendingService;
- (void)refreshServiceForSending;
- (id)orderedContactsWithMaxCount:(NSUInteger)arg1 keysToFetch:(id)arg2;
- (id)orderedContactsForAvatar3DTouchUIWithKeysToFetch:(id)arg1;
- (id)orderedContactsForAvatarView;
- (void)updateDisplayNameIfSMSSpam;
- (void)removeRecipientHandles:(id)arg1;
- (void)addRecipientHandles:(id)arg1;
@property(readonly, nonatomic, getter=shouldSendReadReceipts) BOOL sendReadReceipts;
- (void)setMutedUntilDate:(id)arg1;
- (void)unmute;
- (BOOL)hasReplyEnabled;
- (BOOL)hasVerifiedBusiness;
- (BOOL)isMakoConversation;
- (BOOL)isAppleConversation;
- (BOOL)isBusinessConversation;
@property(readonly, nonatomic, getter=isMuted) BOOL muted;
- (BOOL)canInsertMoreRecipients;
- (long long)maximumRecipientsForSendingService;
@property(readonly, nonatomic) BOOL supportsMutatingGroupMembers;
@property(readonly, nonatomic, getter=hasLeftGroupChat) BOOL leftGroupChat;
@property(readonly, nonatomic, getter=hasLeft) BOOL left;
@property(readonly, nonatomic) BOOL canLeave;
@property(readonly, nonatomic, getter=isGroupConversation) BOOL groupConversation;
@property(nonatomic) BOOL forceMMS; // @dynamic forceMMS;
@property(nonatomic, getter=isIgnoringTypingUpdates) BOOL ignoringTypingUpdates; // @dynamic ignoringTypingUpdates;
- (BOOL)isDowngraded;
@property(retain, nonatomic) CKComposition *unsentComposition; // @dynamic unsentComposition;
- (void)_handleEngroupFinishedUpdating:(id)arg1;
- (void)_handleChatJoinStateDidChange:(id)arg1;
- (void)_handleChatParticipantsDidChange:(id)arg1;
- (void)acceptTransfer:(id)arg1;
@property(readonly, nonatomic) CKEntity *recipient; // @dynamic recipient;
- (BOOL)containsHandleWithUID:(id)arg1;
@property(readonly, nonatomic) NSArray *handles; // @dynamic handles;
@property(readonly, nonatomic) BOOL hasUnreadMessages; // @dynamic hasUnreadMessages;
@property(readonly, nonatomic) NSUInteger unreadCount; // @dynamic unreadCount;
- (void)reloadIfNeeded;
- (void)setNeedsReload;
- (void)resetCaches;
- (void)resetNameCaches;
@property(readonly, nonatomic) NSString *lastAddressedSIMID;
@property(readonly, nonatomic) NSString *lastAddressedHandle;
- (void)didBecomeActive;
- (void)willBecomeInactive;
- (id)initWithChat:(id)arg1;
- (id)init;
- (void)dealloc;
- (BOOL)_iMessage_canSendToRecipients:(id)arg1 alertIfUnable:(BOOL)arg2;
- (BOOL)_iMessage_supportsCharacterCountForAddresses:(id)arg1;
- (BOOL)_sms_canSendToRecipients:(id)arg1 alertIfUnable:(BOOL)arg2;
- (BOOL)_sms_supportsCharacterCountForAddresses:(id)arg1;
- (BOOL)_sms_willSendMMSByDefaultForAddresses:(id)arg1;
- (BOOL)supportsSurf;

@end

