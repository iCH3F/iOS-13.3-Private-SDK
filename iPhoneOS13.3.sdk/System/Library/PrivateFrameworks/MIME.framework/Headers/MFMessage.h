//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <MIME/EFPubliclyDescribable-Protocol.h>

@class ECAngleBracketIDHash, ECSubject, MFMessageStore, MFMimePart, NSArray, NSString, NSURL, NSUUID;

@interface MFMessage : NSObject <EFPubliclyDescribable, NSCopying>
{
    MFMessageStore *_store;
    unsigned int _preferredEncoding;
    NSString *_senderAddressComment;
    unsigned int _dateSentInterval;
    unsigned int _dateReceivedInterval;
    _Atomic NSUInteger _generationNumber;
    NSArray *_to;
    NSArray *_cc;
    NSArray *_bcc;
    NSArray *_sender;
    NSString *_contentType;
    long long _messageIDHeaderHash;
    long long _conversationID;
    ECAngleBracketIDHash *_listIDHash;
    NSString *_summary;
    NSString *_externalID;
    NSUUID *_documentID;
    MFMimePart *_parentPart;
    NSURL *_messageURL;
    NSString *_cachedMessageIDHeader;
    unsigned int _calculatedAttachmentInfo:1;
    unsigned short _numberOfAttachments;
    ECSubject *_subject;
}

+ (void)setMessageClassForStore:(id)arg1;
+ (id)messageWithRFC822Data:(id)arg1 withParentPart:(id)arg2 generateMessageIDHash:(BOOL)arg3;
+ (id)messageWithRFC822Data:(id)arg1 forMailboxUID:(id)arg2;
+ (id)messageWithRFC822Data:(id)arg1 withParentPart:(id)arg2;
+ (id)messageWithRFC822Data:(id)arg1;
+ (Class)dataMessageStoreToUse;
@property(retain, nonatomic) MFMimePart *parentPart; // @synthesize parentPart=_parentPart;
// - (void).cxx_destruct;
- (id)additionalHeadersForForward;
- (id)additionalHeadersForReply;
- (BOOL)isLibraryMessage;
- (BOOL)canBeTriaged;
- (id)bestAlternativeInPart:(id)arg1;
- (id)defaultAlternativeInPart:(id)arg1;
- (long long)generationCompare:(id)arg1;
- (NSUInteger)generationNumber;
- (void)setGenerationNumber:(NSUInteger)arg1;
- (void)setNumberOfAttachments:(NSUInteger)arg1;
- (void)setNumberOfAttachments:(NSUInteger)arg1 isSigned:(BOOL)arg2 isEncrypted:(BOOL)arg3;
- (void)calculateAttachmentInfoFromBody:(id)arg1;
- (void)deleteBodyData;
- (id)dataPathForMimePart:(id)arg1;
- (BOOL)fetchDataForMimePart:(id)arg1 inRange:(_NSRange)arg2 withConsumer:(id)arg3 isComplete:(BOOL )arg4 downloadIfNecessary:(BOOL)arg5;
- (id)dataForMimePart:(id)arg1 inRange:(_NSRange)arg2 isComplete:(BOOL )arg3 downloadIfNecessary:(BOOL)arg4 didDownload:(BOOL )arg5;
- (id)dataForMimePart:(id)arg1 inRange:(_NSRange)arg2 isComplete:(BOOL )arg3;
- (id)dataForMimePart:(id)arg1;
- (id)headerDataDownloadIfNecessary:(BOOL)arg1;
- (id)headerData;
- (id)bodyDataIsComplete:(BOOL )arg1 isPartial:(BOOL )arg2 downloadIfNecessary:(BOOL)arg3;
- (id)bodyDataIsComplete:(BOOL )arg1 isPartial:(BOOL )arg2;
- (id)bodyDataIsComplete:(BOOL )arg1;
- (id)bodyData;
- (id)persistentID;
- (id)attachmentStorageLocation;
- (id)path;
- (unsigned int)uid;
- (id)remoteID;
- (void)setMessagePropertiesFromMessage:(id)arg1;
- (void)setSubject:(id)arg1 to:(id)arg2 cc:(id)arg3 bcc:(id)arg4 sender:(id)arg5 dateReceived:(double)arg6 dateSent:(double)arg7 summary:(id)arg8 withOptions:(unsigned int)arg9;
- (void)setSubject:(id)arg1 to:(id)arg2 cc:(id)arg3 bcc:(id)arg4 sender:(id)arg5 dateReceived:(double)arg6 dateSent:(double)arg7 summary:(id)arg8;
- (void)setMessageInfo:(id)arg1 to:(id)arg2 cc:(id)arg3 bcc:(id)arg4 sender:(id)arg5 dateReceivedTimeIntervalSince1970:(double)arg6 dateSentTimeIntervalSince1970:(double)arg7 messageIDHash:(long long)arg8 conversationID:(long long)arg9 summary:(id)arg10;
- (id)uniqueArray:(id)arg1 withStore:(id)arg2;
- (id)summary;
@property(retain, nonatomic) NSUUID *documentID; // @synthesize documentID=_documentID;
@property(retain, nonatomic) NSString *externalID;
- (void)setListIDHash:(id)arg1;
- (id)listIDHash;
- (void)setConversationID:(long long)arg1;
- (void)setMessageIDHash:(long long)arg1;
- (long long)conversationID;
- (void)setBcc:(id)arg1;
- (id)bccIfCached;
- (id)bcc;
- (void)setCc:(id)arg1;
- (id)ccIfCached;
- (id)cc;
- (void)setTo:(id)arg1;
- (id)toIfCached;
- (id)to;
- (id)senderAddressComment;
- (void)setSender:(id)arg1;
- (id)firstSender;
- (id)sendersIfCached;
- (id)senders;
- (void)setContentType:(id)arg1;
- (id)contentType;
- (void)setDateSentTimeIntervalSince1970:(double)arg1;
- (double)dateSentAsTimeIntervalSince1970;
- (BOOL)needsDateReceived;
- (double)dateReceivedAsTimeIntervalSince1970;
- (void)setDateReceivedTimeIntervalSince1970:(double)arg1;
- (id)dateSent;
- (id)dateReceived;
@property(copy, nonatomic) ECSubject *subject; // @synthesize subject=_subject;
- (void)loadCachedHeaderValuesFromHeaders:(id)arg1;
- (void)_setDateSentFromHeaders:(id)arg1;
- (void)_setDateReceivedFromHeaders:(id)arg1;
- (id)_copyDateFromDateHeaderInHeaders:(id)arg1;
- (id)_copyDateFromReceivedHeadersInHeaders:(id)arg1;
- (BOOL)_doesDateAppearToBeSane:(id)arg1;
- (void)setPreferredEncoding:(unsigned int)arg1;
- (unsigned int)preferredEncoding;
- (BOOL)calculatedNumberOfAttachments;
- (NSUInteger)numberOfAttachments;
- (BOOL)isMessageContentsLocallyAvailable;
- (long long)_messageIDHeaderHashIvar;
- (id)messageIDHeaderInFortyBytesOrLess;
- (void)setMessageIDHeader:(id)arg1;
- (id)messageIDHeader;
- (id)messageIDHeaderHash;
- (long long)messageIDHash;
- (id)messageURL;
- (void)setMessageURL:(id)arg1;
- (id)messageID;
- (id)preferredEmailAddressToReplyWith;
- (NSUInteger)fileSize;
- (NSUInteger)messageSize;
- (id)dataConsumerForMimePart:(id)arg1;
- (void)setMessageData:(id)arg1 isPartial:(BOOL)arg2;
- (id)messageDataHolder;
- (id)messageDataHolderIsComplete:(BOOL )arg1 downloadIfNecessary:(BOOL)arg2;
- (BOOL)messageDataHolder:(id )arg1 messageSize:(NSUInteger )arg2 isComplete:(BOOL )arg3 downloadIfNecessary:(BOOL)arg4;
- (id)messageData;
- (id)messageDataIsComplete:(BOOL )arg1 downloadIfNecessary:(BOOL)arg2;
- (BOOL)messageData:(id )arg1 messageSize:(NSUInteger )arg2 isComplete:(BOOL )arg3 downloadIfNecessary:(BOOL)arg4;
- (id)messageBodyIfAvailableUpdatingFlags:(BOOL)arg1;
- (id)messageBodyUpdatingFlags:(BOOL)arg1;
- (id)messageBodyIfAvailable;
- (id)messageBody;
- (id)headersIfAvailable;
- (id)headers;
- (void)setMessageStore:(id)arg1;
- (id)messageStore;
@property(readonly, copy, nonatomic) NSString *ef_publicDescription;
@property(readonly, copy) NSString *description;
- (id)_privacySafeDescription;
// - (id)copyWithZone:(_NSZone )arg1;
- (id)init;

@end

