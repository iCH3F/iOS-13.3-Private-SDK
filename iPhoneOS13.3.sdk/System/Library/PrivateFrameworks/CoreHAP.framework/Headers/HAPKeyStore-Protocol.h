//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//


@class HAPPairingIdentity, NSData, NSDictionary, NSString, NSUUID;

@protocol HAPKeyStore <NSObject>
@property(readonly, nonatomic) NSString *activeControllerPairingIdentifier;
- (BOOL)removeAllAccessoryKeys:(id )arg1;
- (BOOL)removeAccessoryKeyForName:(NSString *)arg1 error:(id )arg2;
- (BOOL)registerAccessoryWithHomeKit:(NSString *)arg1 error:(id )arg2;
- (BOOL)savePublicKey:(NSData *)arg1 forAccessoryName:(NSString *)arg2 error:(id )arg3;
- (NSData *)readPublicKeyForAccessoryName:(NSString *)arg1 registeredWithHomeKit:(BOOL )arg2 error:(id )arg3;
- (BOOL)getMetadataSecretKey:(id )arg1 error:(id )arg2;
- (BOOL)removeControllerKeyPairForIdentifier:(NSString *)arg1 leaveTombstone:(BOOL)arg2 error:(id )arg3;
- (BOOL)getCurrentiCloudIdentifier:(id )arg1 controllerPairingIdentifier:(id )arg2 error:(id )arg3;
- (BOOL)updateCurrentiCloudIdentifier:(NSString *)arg1 controllerPairingIdentifier:(NSString *)arg2 error:(id )arg3;
- (BOOL)removeControllerKeyPairLeaveTombstone:(BOOL)arg1 error:(id )arg2;
- (BOOL)removeControllerKeyPairWithError:(id )arg1;
- (BOOL)updateActiveControllerPairingIdentifier:(NSString *)arg1;
- (BOOL)getAllAvailableControllerPublicKeys:(id )arg1 secretKeys:(id )arg2 userNames:(id )arg3 error:(id )arg4;
- (BOOL)deserializeKeyPair:(NSData *)arg1 publicKey:(id )arg2 secretKey:(id )arg3 error:(id )arg4;
- (BOOL)saveKeyPair:(NSData *)arg1 username:(NSString *)arg2 syncable:(BOOL)arg3 error:(id )arg4;
- (BOOL)getControllerPublicKey:(id )arg1 secretKey:(id )arg2 keyPair:(id )arg3 username:(id )arg4 allowCreation:(BOOL)arg5 error:(id )arg6;
- (BOOL)getControllerPublicKey:(id )arg1 secretKey:(id )arg2 username:(id )arg3 allowCreation:(BOOL)arg4 error:(id )arg5;
- (BOOL)saveLocalPairingIdentity:(HAPPairingIdentity *)arg1 syncable:(BOOL)arg2 error:(id )arg3;
- (HAPPairingIdentity *)getOrCreateLocalPairingIdentity:(id )arg1;
- (HAPPairingIdentity *)getLocalPairingIdentity:(id )arg1;

@optional
- (NSDictionary *)getPeripherialIdentifiersAndAccessoryNames;
- (NSUUID *)readPeripheralIdentifierForAccessoryIdentifier:(NSString *)arg1 protocolVersion:(NSUInteger )arg2 resumeSessionID:(NSUInteger )arg3 error:(id )arg4;
- (BOOL)deleteAllPeripheralIdentifiers:(id )arg1;
- (BOOL)deletePeripheralIdentifierForAccessoryIdentifier:(NSString *)arg1 error:(id )arg2;
- (BOOL)updatePeripheralIdentifier:(NSUUID *)arg1 forAccessoryIdentifier:(NSString *)arg2 protocolVersion:(NSUInteger)arg3 previousVersion:(NSUInteger )arg4 resumeSessionID:(NSUInteger)arg5 error:(id )arg6;
- (BOOL)savePeripheralIdentifier:(NSUUID *)arg1 forAccessoryIdentifier:(NSString *)arg2 error:(id )arg3;
@end

