//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <PassKitCore/PDXPCService.h>

#import <PassKitCore/PDAssertionCoordinatorExportedInterface-Protocol.h>
#import <PassKitCore/PDAssertionRequestDelegate-Protocol.h>

@class NSMutableArray, NSMutableDictionary, NSObject, NSString, PKEntitlementWhitelist;
@protocol OS_dispatch_queue, PDAssertionCoordinatorDelegate;

@interface PDAssertionCoordinator : PDXPCService <PDAssertionRequestDelegate, PDAssertionCoordinatorExportedInterface>
{
    NSMutableDictionary *_assertionsByType;
    NSObject<OS_dispatch_queue> *_coordinatorSerialQueue;
    PKEntitlementWhitelist *_whitelist;
    long long _suppressionPermissionState;
    NSMutableArray *_pendingAssertionRequests;
    BOOL _isForegroundApplication;
    id <PDAssertionCoordinatorDelegate> _delegate;
    NSString *_bundleIdentifier;
}

+ (id)suppressionApplicationRegistry;
@property(nonatomic) BOOL isForegroundApplication; // @synthesize isForegroundApplication=_isForegroundApplication;
@property(retain, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(nonatomic) __weak id <PDAssertionCoordinatorDelegate> delegate; // @synthesize delegate=_delegate;
// - (void).cxx_destruct;
- (void)cancelPendingAssertionRequests;
- (void)processPendingAssertionRequests;
- (id)assertionsOfType:(NSUInteger)arg1;
- (void)invalidateAssertionsForBackgroundApplicationState;
- (void)invalidateAllAssertions;
- (void)assertionRequestDidTimeout:(id)arg1;
- (void)_processPendingAssertionRequests;
- (void)_cancelPendingAssertionRequest:(id)arg1;
- (void)_addRequestForAssertion:(id)arg1 handler:(id /* CDUnknownBlockType */)arg2;
- (void)_acquireAssertion:(id)arg1 handler:(id /* CDUnknownBlockType */)arg2;
- (void)_acquireContactlessInterfaceSuppressionAssertion:(id)arg1 handler:(id /* CDUnknownBlockType */)arg2;
- (void)_showAlertForContactlessInterfaceSuppression;
- (void)assertionOfType:(NSUInteger)arg1 withIdentifier:(id)arg2 isValid:(id /* CDUnknownBlockType */)arg3;
- (void)assertionOfType:(NSUInteger)arg1 withIdentifier:(id)arg2 shouldInvalidateWhenBackgrounded:(BOOL)arg3;
- (void)invalidateAssertionOfType:(NSUInteger)arg1 withIdentifier:(id)arg2 handler:(id /* CDUnknownBlockType */)arg3;
- (void)acquireAssertionOfType:(NSUInteger)arg1 withIdentifier:(id)arg2 reason:(id)arg3 handler:(id /* CDUnknownBlockType */)arg4;
- (id)initWithConnection:(id)arg1;

@end

