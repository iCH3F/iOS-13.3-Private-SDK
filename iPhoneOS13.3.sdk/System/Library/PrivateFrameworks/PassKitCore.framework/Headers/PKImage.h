//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>


@class NSData;
@protocol OS_dispatch_queue;

@interface PKImage : NSObject <NSSecureCoding>
{
    NSObject<OS_dispatch_queue> *_queue;
    BOOL _shouldTile;
    BOOL _shouldStretch;
    struct PKEdgeInsets _capInsets;
    NSData *_imageData;
    CGImage _imageRef;
    double _scale;
    long long _orientation;
}

+ (BOOL)supportsSecureCoding;
+ (id)passesImageNamed:(id)arg1;
+ (id)hashOfImageNamed:(id)arg1 inBundle:(id)arg2;
+ (id)newImageNamed:(id)arg1 inBundle:(id)arg2 screenScale:(double)arg3 suffix:(id)arg4;
+ (id)imageNamed:(id)arg1 inBundle:(id)arg2 screenScale:(double)arg3 suffix:(id)arg4;
+ (id)newImageNamed:(id)arg1 inBundle:(id)arg2;
+ (id)imageNamed:(id)arg1 inBundle:(id)arg2;
+ (id)URLForImageNamed:(id)arg1 inBundle:(id)arg2 scale:(double )arg3 preferredScreenScale:(double)arg4 suffix:(id)arg5;
+ (id)URLForImageNamed:(id)arg1 inBundle:(id)arg2 scale:(double )arg3;
@property(readonly, nonatomic) double scale; // @synthesize scale=_scale;
// - (void).cxx_destruct;
- (BOOL)_isTiledWhenStretchedToSize:(CGSize)arg1;
- (void)_queue_createImageRefIfNecessary;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)drawInRect:(CGRect)arg1 inContext:(CGContext )arg2 withBlendMode:(int)arg3 alpha:(double)arg4;
- (void)drawInRect:(CGRect)arg1 inContext:(CGContext )arg2;
- (id)resizableImageByTilingCenterPixel;
- (id)resizableImageByStretchingWithCapInsets:(struct PKEdgeInsets)arg1;
- (id)resizableImageByTilingWithCapInsets:(struct PKEdgeInsets)arg1;
- (id)resizedImageWithConstraints:(id)arg1;
- (id)imageWithoutCapInsets;
- (id)croppedImageWithInsets:(struct PKEdgeInsets)arg1;
- (id)blurredImageWithRadius:(NSUInteger)arg1 constraints:(id)arg2;
@property(readonly, nonatomic) struct PKEdgeInsets capInsets;
@property(readonly, nonatomic) BOOL stretches;
@property(readonly, nonatomic) BOOL tiles;
- (void)preheatBitmapData;
@property(readonly, nonatomic) NSData *imageData; // @synthesize imageData=_imageData;
@property(readonly, nonatomic) long long orientation; // @synthesize orientation=_orientation;
@property(readonly, nonatomic) CGImage imageRef; // @synthesize imageRef=_imageRef;
- (CGSize)downscaleSizeMatchingScale:(double)arg1;
@property(readonly, nonatomic) CGSize size;
- (void)dealloc;
- (id)initWithCGImage:(CGImage )arg1 scale:(double)arg2 orientation:(long long)arg3;
- (id)initWithData:(id)arg1 scale:(double)arg2;
- (id)init;
- (BOOL)isEqualToImage:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)imageHash;

@end

