//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class GEOCountryConfiguration, GEOResourceManifestManager, NSDictionary, NSMutableArray, NSMutableSet, NSString;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface GEODBWriter : NSObject
{
    NSString *_path;
    NSDictionary *_pragmaOverrides;
    struct sqlite3 _db;
    struct sqlite3_stmt _versionQuery;
    struct sqlite3_stmt _versionInsert;
    struct sqlite3_stmt _editionQuery;
    struct sqlite3_stmt _editionDelete;
    struct sqlite3_stmt _editionInvalidate;
    struct sqlite3_stmt _editionUpdate;
    struct sqlite3_stmt _editionInvalidateAll;
    struct sqlite3_stmt _tileInsert;
    struct sqlite3_stmt _tileDelete;
    struct sqlite3_stmt _tileSize;
    struct sqlite3_stmt _sizeQuery;
    long long _lastRowID;
    NSUInteger _databaseSize;
    NSUInteger _maxDatabaseSize;
    BOOL _closed;
    BOOL _defunct;
    NSMutableArray *_writeList;
    NSMutableSet *_uncommitedWriteSet;
    NSUInteger _pendingWriteBytes;
//     struct os_unfair_lock_s _writeListLock;
    NSObject<OS_dispatch_queue> *_writeQueue;
    void _editionMap;
    long long _evictionRowsThreshold;
    CDStruct_e4886f83 _expirationRecords;
    NSUInteger _expirationRecordCount;
    BOOL _preloading;
    double _lastCheckedGeneralExpiration;
    NSUInteger _tileCacheMinimumWriteCount;
    NSUInteger _tileCacheMinimumWriteBytes;
    NSUInteger _tileCacheMaximumWriteCount;
    NSUInteger _tileCacheMaximumWriteBytes;
    NSString *_devicePostureCountry;
    NSString *_devicePostureRegion;
    BOOL _canCreateDebugTable;
    GEOResourceManifestManager *_manifestManager;
    GEOCountryConfiguration *_countryConfiguration;
}

@property(readonly, nonatomic) NSString *devicePostureRegion; // @synthesize devicePostureRegion=_devicePostureRegion;
@property(readonly, nonatomic) NSString *devicePostureCountry; // @synthesize devicePostureCountry=_devicePostureCountry;
@property(nonatomic) NSUInteger maxDatabaseSize; // @synthesize maxDatabaseSize=_maxDatabaseSize;
@property(readonly, nonatomic) NSUInteger databaseSize; // @synthesize databaseSize=_databaseSize;
@property(readonly, nonatomic) NSString *path; // @synthesize path=_path;
// - (void).cxx_destruct;
- (void)dealloc;
- (void)endPreloadSession;
- (void)beginPreloadSessionOfSize:(NSUInteger)arg1;
- (void)setExpirationRecords:(CDStruct_e4886f83 )arg1 count:(NSUInteger)arg2;
- (void)evaluateDevicePostureAgainstCurrentManifest:(id)arg1;
- (void)deleteData:(const struct _GEOTileKey )arg1;
- (void)_deleteKey:(struct _GEOTileKey)arg1;
- (void)pendingWritesForKeys:(id)arg1 handler:(id /* CDUnknownBlockType */)arg2;
- (id)pendingWriteForKey:(struct _GEOTileKey )arg1;
- (void)addData:(id)arg1 forKey:(struct _GEOTileKey )arg2 edition:(unsigned int)arg3 set:(unsigned int)arg4 provider:(unsigned int)arg5 etag:(id)arg6;
- (void)_performWrites:(BOOL)arg1;
- (void)_dropWritesOnFloor:(id)arg1;
- (void)_updateEdition:(unsigned int)arg1 forTileset:(unsigned int)arg2 provider:(unsigned int)arg3 invalidateOnly:(BOOL)arg4;
- (void)_writeEntry:(id)arg1;
- (BOOL)_tileSetExpires:(unsigned int)arg1;
- (void)_evict;
- (void)shrinkBySize:(NSUInteger)arg1 callback:(id /* CDUnknownBlockType */)arg2 onQueue:(id)arg3;
- (void)shrinkToSize:(NSUInteger)arg1 finished:(id /* CDUnknownBlockType */)arg2 onQueue:(id)arg3;
- (void)calculateFreeableSizeWithHandler:(id /* CDUnknownBlockType */)arg1 onQueue:(id)arg2;
- (NSUInteger)_dbFileSize;
- (void)_shrinkToUnderSize:(NSUInteger)arg1 vacuum:(BOOL)arg2;
- (NSUInteger)_freeableDiskSpace;
- (void)_printDBStatus:(const char )arg1;
@property BOOL closed;
- (void)waitForPendingWrites;
- (void)_openIfNecessary;
- (void)_openDBForceRecreate:(BOOL)arg1;
- (void)_openDBAndPurgeContents;
- (void)_updateVersionTableWithCountryAndRegion;
- (void)_assertDatabaseSize;
- (void)_updateSize;
- (void)_setCurrentDevicePostureToCountry:(id)arg1 region:(id)arg2;
- (BOOL)_readEditions;
- (void)_writeVersionForCountry:(id)arg1 region:(id)arg2;
- (void)_prepareStatements;
- (BOOL)prepareSingleStatement:(struct sqlite3_stmt )arg1 forSql:(id)arg2;
- (void)_createTables;
- (void)_closeDB;
- (void)_finalizeStatements;
- (void)flushPendingWrites;
- (void)_countryChanged:(id)arg1;
- (void)_deviceLocked;
- (void)_localeChanged:(id)arg1;
- (id)initWithPath:(id)arg1 pragmaOverrides:(id)arg2 manifestManager:(id)arg3 countryConfiguration:(id)arg4;
- (id)initWithPath:(id)arg1 pragmaOverrides:(id)arg2;
- (id)initWithPath:(id)arg1;

@end

