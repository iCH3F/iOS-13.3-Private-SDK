//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <MetalTools/MTLToolsRenderCommandEncoder.h>

@class MTLDepthStencilDescriptor, MTLRenderPassDescriptor;
@protocol MTLDepthStencilState, MTLRenderPipelineState;

@interface MTLDebugRenderCommandEncoder : MTLToolsRenderCommandEncoder
{
    unsigned int _dirtyBits;
    BOOL _openGLModeEnabled;
    CDStruct_4bcfbbae _vertexBuiltinArguments;
    struct {
        NSUInteger pixelFormat;
        NSUInteger sampleCount;
    } _attachmentInfo[10];
    id <MTLRenderPipelineState> _previousRenderPipelineStateWithWritesToImageBlock;
    NSUInteger _resolvedRasterSampleCount;
    CDStruct_0f4bf8df _vertexBuffers[36];
    CDStruct_0f4bf8df _vertexTextures[128];
    CDStruct_0f4bf8df _vertexSamplers[16];
    CDStruct_0f4bf8df _fragmentBuffers[31];
    CDStruct_0f4bf8df _fragmentTextures[128];
    CDStruct_0f4bf8df _fragmentSamplers[16];
    CDStruct_0f4bf8df _tileBuffers[31];
    CDStruct_0f4bf8df _tileTextures[128];
    CDStruct_0f4bf8df _tileSamplers[16];
    CDStruct_0f4bf8df _threadgroupMemoryArguments[31];
    CDStruct_886a8514 _limits;
    unsigned int _encoderState;
    unsigned int _unknownStoreActions;
    struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> _visibilityOffsets;
    vector_9706d78e _viewports;
    vector_dc8a7a87 _scissorRects;
    NSUInteger _amplificationMode;
    NSUInteger _amplificationValue;
    NSUInteger _vertexAmplificationCount;
    struct ResourceTrackingDeferredAttachments _deferredAttachments;
    struct deque<id, std::__1::allocator<id>> _updatedFences;
    BOOL _hasValidViewportsAndScissorRects;
    float _lineWidth;
    float _depthBias;
    float _depthBiasSlopeScale;
    float _depthBiasClamp;
    unsigned int _frontStencilRef;
    unsigned int _backStencilRef;
    float _blendColorRed;
    float _blendColorGreen;
    float _blendColorBlue;
    float _blendColorAlpha;
    float _tessellationFactorScale;
    MTLRenderPassDescriptor *_descriptor;
    NSUInteger _frontFacingWinding;
    NSUInteger _cullMode;
    NSUInteger _depthClipMode;
    NSUInteger _triangleFillMode;
    id <MTLRenderPipelineState> _renderPipelineState;
    NSUInteger _peakPerSampleStorage;
    NSUInteger _resolvedSampleCount;
    id <MTLDepthStencilState> _depthStencilState;
    MTLDepthStencilDescriptor *_defaultDepthStencilDescriptor;
    NSUInteger _visibilityResultMode;
    NSUInteger _visibilityResultOffset;
    NSUInteger _width;
    NSUInteger _height;
    NSUInteger _tessellationFactorBufferInstanceStride;
    CDStruct_0f4bf8df _tessellationFactorBufferArgument;
}

@property(readonly, nonatomic) float tessellationFactorScale; // @synthesize tessellationFactorScale=_tessellationFactorScale;
@property(readonly, nonatomic) NSUInteger tessellationFactorBufferInstanceStride; // @synthesize tessellationFactorBufferInstanceStride=_tessellationFactorBufferInstanceStride;
@property(readonly, nonatomic) CDStruct_0f4bf8df tessellationFactorBufferArgument; // @synthesize tessellationFactorBufferArgument=_tessellationFactorBufferArgument;
@property(readonly) NSUInteger height; // @synthesize height=_height;
@property(readonly) NSUInteger width; // @synthesize width=_width;
@property(readonly, nonatomic) float blendColorAlpha; // @synthesize blendColorAlpha=_blendColorAlpha;
@property(readonly, nonatomic) float blendColorBlue; // @synthesize blendColorBlue=_blendColorBlue;
@property(readonly, nonatomic) float blendColorGreen; // @synthesize blendColorGreen=_blendColorGreen;
@property(readonly, nonatomic) float blendColorRed; // @synthesize blendColorRed=_blendColorRed;
@property(readonly, nonatomic) NSUInteger visibilityResultOffset; // @synthesize visibilityResultOffset=_visibilityResultOffset;
@property(readonly, nonatomic) NSUInteger visibilityResultMode; // @synthesize visibilityResultMode=_visibilityResultMode;
@property(readonly, nonatomic) unsigned int backStencilRef; // @synthesize backStencilRef=_backStencilRef;
@property(readonly, nonatomic) unsigned int frontStencilRef; // @synthesize frontStencilRef=_frontStencilRef;
@property(readonly, nonatomic) MTLDepthStencilDescriptor *defaultDepthStencilDescriptor; // @synthesize defaultDepthStencilDescriptor=_defaultDepthStencilDescriptor;
@property(readonly, nonatomic) id <MTLDepthStencilState> depthStencilState; // @synthesize depthStencilState=_depthStencilState;
@property(readonly, nonatomic) NSUInteger resolvedSampleCount; // @synthesize resolvedSampleCount=_resolvedSampleCount;
@property(readonly, nonatomic) NSUInteger peakPerSampleStorage; // @synthesize peakPerSampleStorage=_peakPerSampleStorage;
@property(readonly, nonatomic) id <MTLRenderPipelineState> renderPipelineState; // @synthesize renderPipelineState=_renderPipelineState;
@property(readonly, nonatomic) NSUInteger triangleFillMode; // @synthesize triangleFillMode=_triangleFillMode;
@property(readonly, nonatomic) float depthBiasClamp; // @synthesize depthBiasClamp=_depthBiasClamp;
@property(readonly, nonatomic) float depthBiasSlopeScale; // @synthesize depthBiasSlopeScale=_depthBiasSlopeScale;
@property(readonly, nonatomic) float depthBias; // @synthesize depthBias=_depthBias;
@property(readonly, nonatomic) float lineWidth; // @synthesize lineWidth=_lineWidth;
@property(readonly, nonatomic) NSUInteger depthClipMode; // @synthesize depthClipMode=_depthClipMode;
@property(readonly, nonatomic) NSUInteger cullMode; // @synthesize cullMode=_cullMode;
@property(readonly, nonatomic) NSUInteger frontFacingWinding; // @synthesize frontFacingWinding=_frontFacingWinding;
@property(readonly, copy, nonatomic) MTLRenderPassDescriptor *descriptor; // @synthesize descriptor=_descriptor;
- (id).cxx_construct;
// - (void).cxx_destruct;
- (void)executeCommandsInBuffer:(id)arg1 indirectBuffer:(id)arg2 indirectBufferOffset:(NSUInteger)arg3;
- (void)executeCommandsInBuffer:(id)arg1 withRange:(_NSRange)arg2;
- (void)memoryBarrierWithResources:(const id )arg1 count:(NSUInteger)arg2 afterStages:(NSUInteger)arg3 beforeStages:(NSUInteger)arg4;
- (void)memoryBarrierWithScope:(NSUInteger)arg1 afterStages:(NSUInteger)arg2 beforeStages:(NSUInteger)arg3;
- (void)_resourceTrackingRecordDispatchAccesses;
- (void)filterCounterRangeWithFirstBatch:(unsigned int)arg1 lastBatch:(unsigned int)arg2 filterIndex:(unsigned int)arg3;
- (void)_resourceTrackingRecordBoundResourceAccesses;
- (void)_resourceTrackingRecordRenderTargetAccessesForEndEncoding:(BOOL)arg1;
- (void)_resourceTrackingRecordDrawAccesses;
- (void)drawIndexedPatches:(NSUInteger)arg1 patchIndexBuffer:(id)arg2 patchIndexBufferOffset:(NSUInteger)arg3 controlPointIndexBuffer:(id)arg4 controlPointIndexBufferOffset:(NSUInteger)arg5 indirectBuffer:(id)arg6 indirectBufferOffset:(NSUInteger)arg7;
- (void)drawIndexedPatches:(NSUInteger)arg1 patchStart:(NSUInteger)arg2 patchCount:(NSUInteger)arg3 patchIndexBuffer:(id)arg4 patchIndexBufferOffset:(NSUInteger)arg5 controlPointIndexBuffer:(id)arg6 controlPointIndexBufferOffset:(NSUInteger)arg7 instanceCount:(NSUInteger)arg8 baseInstance:(NSUInteger)arg9;
- (void)drawPatches:(NSUInteger)arg1 patchIndexBuffer:(id)arg2 patchIndexBufferOffset:(NSUInteger)arg3 indirectBuffer:(id)arg4 indirectBufferOffset:(NSUInteger)arg5;
- (void)drawPatches:(NSUInteger)arg1 patchStart:(NSUInteger)arg2 patchCount:(NSUInteger)arg3 patchIndexBuffer:(id)arg4 patchIndexBufferOffset:(NSUInteger)arg5 instanceCount:(NSUInteger)arg6 baseInstance:(NSUInteger)arg7;
- (void)setTessellationFactorBuffer:(id)arg1 offset:(NSUInteger)arg2 instanceStride:(NSUInteger)arg3;
- (void)endEncoding;
- (void)waitForFence:(id)arg1 beforeStages:(NSUInteger)arg2;
- (void)updateFence:(id)arg1 afterStages:(NSUInteger)arg2;
- (void)drawIndexedPrimitives:(NSUInteger)arg1 indexType:(NSUInteger)arg2 indexBuffer:(id)arg3 indexBufferOffset:(NSUInteger)arg4 indirectBuffer:(id)arg5 indirectBufferOffset:(NSUInteger)arg6;
- (void)drawPrimitives:(NSUInteger)arg1 indirectBuffer:(id)arg2 indirectBufferOffset:(NSUInteger)arg3;
- (void)drawIndexedPrimitives:(NSUInteger)arg1 indexCount:(NSUInteger)arg2 indexType:(NSUInteger)arg3 indexBuffer:(id)arg4 indexBufferOffset:(NSUInteger)arg5 instanceCount:(NSUInteger)arg6 baseVertex:(long long)arg7 baseInstance:(NSUInteger)arg8;
- (void)drawPrimitives:(NSUInteger)arg1 vertexStart:(NSUInteger)arg2 vertexCount:(NSUInteger)arg3 instanceCount:(NSUInteger)arg4 baseInstance:(NSUInteger)arg5;
- (void)drawIndexedPrimitives:(NSUInteger)arg1 indexCount:(NSUInteger)arg2 indexType:(NSUInteger)arg3 indexBuffer:(id)arg4 indexBufferOffset:(NSUInteger)arg5;
- (void)drawIndexedPrimitives:(NSUInteger)arg1 indexCount:(NSUInteger)arg2 indexType:(NSUInteger)arg3 indexBuffer:(id)arg4 indexBufferOffset:(NSUInteger)arg5 instanceCount:(NSUInteger)arg6;
- (void)validateDrawIndexedPrimitives:(NSUInteger)arg1 indexCount:(NSUInteger)arg2 indexType:(NSUInteger)arg3 indexBuffer:(id)arg4 indexBufferOffset:(NSUInteger)arg5 instanceCount:(NSUInteger)arg6 function:(const char )arg7;
- (void)drawPrimitives:(NSUInteger)arg1 vertexStart:(NSUInteger)arg2 vertexCount:(NSUInteger)arg3;
- (void)drawPrimitives:(NSUInteger)arg1 vertexStart:(NSUInteger)arg2 vertexCount:(NSUInteger)arg3 instanceCount:(NSUInteger)arg4;
- (void)validateDrawPrimitives:(NSUInteger)arg1 vertexStart:(NSUInteger)arg2 vertexCount:(NSUInteger)arg3 instanceCount:(NSUInteger)arg4 function:(const char )arg5;
- (void)_validateAllFunctionArguments;
- (void)validateCommonDrawErrors:(NSUInteger)arg1 instanceCount:(NSUInteger)arg2 baseInstance:(NSUInteger)arg3 maxVertexID:(NSUInteger)arg4;
- (void)updatePipelineData;
- (void)setStencilResolveTexture:(id)arg1 slice:(NSUInteger)arg2 depthPlane:(NSUInteger)arg3 level:(NSUInteger)arg4 yInvert:(BOOL)arg5;
- (void)setStencilResolveTexture:(id)arg1 slice:(NSUInteger)arg2 depthPlane:(NSUInteger)arg3 level:(NSUInteger)arg4;
- (void)setDepthResolveTexture:(id)arg1 slice:(NSUInteger)arg2 depthPlane:(NSUInteger)arg3 level:(NSUInteger)arg4 yInvert:(BOOL)arg5;
- (void)setDepthResolveTexture:(id)arg1 slice:(NSUInteger)arg2 depthPlane:(NSUInteger)arg3 level:(NSUInteger)arg4;
- (void)setColorResolveTexture:(id)arg1 slice:(NSUInteger)arg2 depthPlane:(NSUInteger)arg3 level:(NSUInteger)arg4 yInvert:(BOOL)arg5 atIndex:(NSUInteger)arg6;
- (void)setColorResolveTexture:(id)arg1 slice:(NSUInteger)arg2 depthPlane:(NSUInteger)arg3 level:(NSUInteger)arg4 atIndex:(NSUInteger)arg5;
- (void)setBlendColorRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;
- (void)setVisibilityResultMode:(NSUInteger)arg1 offset:(NSUInteger)arg2;
- (void)setStencilStoreActionOptions:(NSUInteger)arg1;
- (void)setDepthStoreActionOptions:(NSUInteger)arg1;
- (void)setColorStoreActionOptions:(NSUInteger)arg1 atIndex:(NSUInteger)arg2;
- (void)setStencilStoreAction:(NSUInteger)arg1;
- (void)setDepthStoreAction:(NSUInteger)arg1;
- (void)setColorStoreAction:(NSUInteger)arg1 atIndex:(NSUInteger)arg2;
- (void)setStencilFrontReferenceValue:(unsigned int)arg1 backReferenceValue:(unsigned int)arg2;
- (void)setStencilReferenceValue:(unsigned int)arg1;
- (void)setTriangleFrontFillMode:(NSUInteger)arg1 backFillMode:(NSUInteger)arg2;
- (void)setVertexAmplificationCount:(NSUInteger)arg1 viewMappings:(const CDStruct_c0454aff )arg2;
- (void)setVertexAmplificationMode:(NSUInteger)arg1 value:(NSUInteger)arg2;
- (void)setTransformFeedbackState:(NSUInteger)arg1;
- (void)setScissorRects:(const CDStruct_5f3a0cd7 )arg1 count:(NSUInteger)arg2;
- (void)setDepthBias:(float)arg1 slopeScale:(float)arg2 clamp:(float)arg3;
- (void)setViewports:(const CDStruct_8727d297 )arg1 count:(NSUInteger)arg2;
- (void)useHeaps:(const id )arg1 count:(NSUInteger)arg2 stages:(NSUInteger)arg3;
- (void)useHeaps:(const id )arg1 count:(NSUInteger)arg2;
- (void)useHeap:(id)arg1 stages:(NSUInteger)arg2;
- (void)useHeap:(id)arg1;
- (void)useResources:(const id )arg1 count:(NSUInteger)arg2 usage:(NSUInteger)arg3 stages:(NSUInteger)arg4;
- (void)useResources:(const id )arg1 count:(NSUInteger)arg2 usage:(NSUInteger)arg3;
- (void)useResource:(id)arg1 usage:(NSUInteger)arg2 stages:(NSUInteger)arg3;
- (void)useResource:(id)arg1 usage:(NSUInteger)arg2;
- (void)setThreadgroupMemoryLength:(NSUInteger)arg1 offset:(NSUInteger)arg2 atIndex:(NSUInteger)arg3;
- (void)dispatchThreadsPerTile:(CDStruct_14f26992)arg1;
- (void)setTileSamplerStates:(const id )arg1 lodMinClamps:(const float )arg2 lodMaxClamps:(const float )arg3 withRange:(_NSRange)arg4;
- (void)setTileSamplerState:(id)arg1 lodMinClamp:(float)arg2 lodMaxClamp:(float)arg3 atIndex:(NSUInteger)arg4;
- (void)setTileSamplerStates:(const id )arg1 withRange:(_NSRange)arg2;
- (void)setTileSamplerState:(id)arg1 atIndex:(NSUInteger)arg2;
- (void)setTileTextures:(const id )arg1 withRange:(_NSRange)arg2;
- (void)setTileTexture:(id)arg1 atIndex:(NSUInteger)arg2;
- (void)setTileBuffers:(const id )arg1 offsets:(const NSUInteger )arg2 withRange:(_NSRange)arg3;
- (void)setTileBufferOffset:(NSUInteger)arg1 atIndex:(NSUInteger)arg2;
- (void)setTileBuffer:(id)arg1 offset:(NSUInteger)arg2 atIndex:(NSUInteger)arg3;
- (void)setTileBytes:(const void )arg1 length:(NSUInteger)arg2 atIndex:(NSUInteger)arg3;
- (void)setFragmentTexture:(id)arg1 atTextureIndex:(NSUInteger)arg2 samplerState:(id)arg3 atSamplerIndex:(NSUInteger)arg4;
- (void)setFragmentSamplerStates:(const id )arg1 lodMinClamps:(const float )arg2 lodMaxClamps:(const float )arg3 withRange:(_NSRange)arg4;
- (void)setFragmentSamplerState:(id)arg1 lodMinClamp:(float)arg2 lodMaxClamp:(float)arg3 lodBias:(float)arg4 atIndex:(NSUInteger)arg5;
- (void)setFragmentSamplerState:(id)arg1 lodMinClamp:(float)arg2 lodMaxClamp:(float)arg3 atIndex:(NSUInteger)arg4;
- (void)setFragmentSamplerStates:(const id )arg1 withRange:(_NSRange)arg2;
- (void)setFragmentSamplerState:(id)arg1 atIndex:(NSUInteger)arg2;
- (void)setFragmentTextures:(const id )arg1 withRange:(_NSRange)arg2;
- (void)setFragmentTexture:(id)arg1 atIndex:(NSUInteger)arg2;
- (void)setFragmentBuffers:(const id )arg1 offsets:(const NSUInteger )arg2 withRange:(_NSRange)arg3;
- (void)setFragmentBufferOffset:(NSUInteger)arg1 atIndex:(NSUInteger)arg2;
- (void)setFragmentBuffer:(id)arg1 offset:(NSUInteger)arg2 atIndex:(NSUInteger)arg3;
- (void)setFragmentBytes:(const void )arg1 length:(NSUInteger)arg2 atIndex:(NSUInteger)arg3;
- (void)setVertexSamplerStates:(const id )arg1 lodMinClamps:(const float )arg2 lodMaxClamps:(const float )arg3 withRange:(_NSRange)arg4;
- (void)setVertexSamplerState:(id)arg1 lodMinClamp:(float)arg2 lodMaxClamp:(float)arg3 lodBias:(float)arg4 atIndex:(NSUInteger)arg5;
- (void)setVertexSamplerState:(id)arg1 lodMinClamp:(float)arg2 lodMaxClamp:(float)arg3 atIndex:(NSUInteger)arg4;
- (void)setVertexSamplerStates:(const id )arg1 withRange:(_NSRange)arg2;
- (void)setVertexSamplerState:(id)arg1 atIndex:(NSUInteger)arg2;
- (void)setVertexTextures:(const id )arg1 withRange:(_NSRange)arg2;
- (void)setVertexTexture:(id)arg1 atIndex:(NSUInteger)arg2;
- (void)setVertexBuffers:(const id )arg1 offsets:(const NSUInteger )arg2 withRange:(_NSRange)arg3;
- (void)setVertexBufferOffset:(NSUInteger)arg1 atIndex:(NSUInteger)arg2;
- (void)setVertexBuffer:(id)arg1 offset:(NSUInteger)arg2 atIndex:(NSUInteger)arg3;
- (void)setVertexBytes:(const void )arg1 length:(NSUInteger)arg2 atIndex:(NSUInteger)arg3;
- (void)validateFramebufferWithRenderPipelineState:(id)arg1;
- (id)description;
- (id)formattedDescription:(NSUInteger)arg1;
- (void)dealloc;
- (id)initWithRenderCommandEncoder:(id)arg1 parent:(id)arg2 descriptor:(id)arg3;
- (void)_setDefaults;
- (void)enumerateThreadgroupMemoryUsingBlock:(id /* CDUnknownBlockType */)arg1;
- (void)enumerateTileSamplersUsingBlock:(id /* CDUnknownBlockType */)arg1;
- (void)enumerateTileTexturesUsingBlock:(id /* CDUnknownBlockType */)arg1;
- (void)enumerateTileBuffersUsingBlock:(id /* CDUnknownBlockType */)arg1;
- (void)enumerateFragmentSamplersUsingBlock:(id /* CDUnknownBlockType */)arg1;
- (void)enumerateFragmentTexturesUsingBlock:(id /* CDUnknownBlockType */)arg1;
- (void)enumerateFragmentBuffersUsingBlock:(id /* CDUnknownBlockType */)arg1;
- (void)enumerateVertexSamplersUsingBlock:(id /* CDUnknownBlockType */)arg1;
- (void)enumerateVertexTexturesUsingBlock:(id /* CDUnknownBlockType */)arg1;
- (void)enumerateVertexBuffersUsingBlock:(id /* CDUnknownBlockType */)arg1;
@property(readonly, nonatomic) CDStruct_5f3a0cd7 scissorRect;
@property(readonly, nonatomic) CDStruct_8727d297 viewport;
@property(readonly, nonatomic) vector_dc8a7a87 scissorRects;
@property(readonly, nonatomic) vector_9706d78e viewports;

@end

