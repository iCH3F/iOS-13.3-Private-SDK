//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <DiagnosticExtensionsDaemon/DEDSecureArchiving-Protocol.h>
#import <DiagnosticExtensionsDaemon/IDSServiceDelegate-Protocol.h>

@class IDSService;
@protocol DEDClientProtocol, IDSServiceDelegate, OS_dispatch_queue, OS_os_log;

@interface DEDIDSConnection : NSObject <IDSServiceDelegate, DEDSecureArchiving>
{
    id <DEDClientProtocol> _remoteSideDelegate;
    NSObject<OS_os_log> *_log;
    IDSService *_service;
    IDSService *_localService;
    NSObject<OS_dispatch_queue> *_run_queue;
    NSObject<OS_dispatch_queue> *_discovery_queue;
    id <IDSServiceDelegate> _incomingDelegate;
    id /* CDUnknownBlockType */ _deviceStatusCallback;
}

+ (id)unpackProtobuf:(id)arg1;
+ (id)packPayload:(id)arg1;
+ (id)archivedClasses;
@property(copy) id /* CDUnknownBlockType */ deviceStatusCallback; // @synthesize deviceStatusCallback=_deviceStatusCallback;
@property(retain) id <IDSServiceDelegate> incomingDelegate; // @synthesize incomingDelegate=_incomingDelegate;
@property(retain) NSObject<OS_dispatch_queue> *discovery_queue; // @synthesize discovery_queue=_discovery_queue;
@property(retain) NSObject<OS_dispatch_queue> *run_queue; // @synthesize run_queue=_run_queue;
@property(retain) IDSService *localService; // @synthesize localService=_localService;
@property(retain) IDSService *service; // @synthesize service=_service;
@property(retain) NSObject<OS_os_log> *log; // @synthesize log=_log;
@property __weak id <DEDClientProtocol> remoteSideDelegate; // @synthesize remoteSideDelegate=_remoteSideDelegate;
// - (void).cxx_destruct;
- (void)incomingDeviceReceived:(id)arg1;
- (void)discoverDevicesWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)didStartBugSessionWithInfo:(id)arg1 forID:(id)arg2;
- (void)startBugSessionWithIdentifier:(id)arg1 configuration:(id)arg2 caller:(id)arg3 target:(id)arg4;
- (BOOL)sendMessage:(int)arg1 withData:(id)arg2 forIDSDeviceIDs:(id)arg3 localIDSDeviceIDs:(id)arg4 isResponse:(BOOL)arg5;
- (BOOL)sendMessage:(int)arg1 withData:(id)arg2 forIDSDeviceIDs:(id)arg3 isResponse:(BOOL)arg4;
- (BOOL)sendMessage:(int)arg1 withData:(id)arg2 forDevices:(id)arg3 isResponse:(BOOL)arg4;
- (BOOL)sendMessage:(int)arg1 withData:(id)arg2 forIDSDeviceID:(id)arg3 isResponse:(BOOL)arg4;
- (void)setDeviceCallback:(id /* CDUnknownBlockType */)arg1;
- (id)initWithConroller:(id)arg1;

@end

