//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CloudPhotoLibrary/CPLAbstractObject-Protocol.h>

@class CPLPlatformObject, NSMutableArray, NSString, NSURL;
@protocol OS_dispatch_queue;

@interface CPLEngineFileStorage : NSObject <CPLAbstractObject>
{
    NSObject<OS_dispatch_queue> *_lock;
    NSString *_logDomain;
    NSURL *_crashMarkerURL;
    NSMutableArray *_uncommittedFiles;
    BOOL _keepOriginals;
    BOOL _deleteImmediately;
    CPLPlatformObject *_platformObject;
    NSURL *_baseURL;
}

+ (id)platformImplementationProtocol;
@property(nonatomic) BOOL deleteImmediately; // @synthesize deleteImmediately=_deleteImmediately;
@property(nonatomic) BOOL keepOriginals; // @synthesize keepOriginals=_keepOriginals;
@property(readonly, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
@property(readonly, nonatomic) CPLPlatformObject *platformObject; // @synthesize platformObject=_platformObject;
// - (void).cxx_destruct;
- (BOOL)checkIsEmpty;
- (id)fileEnumerator;
- (id)fileEnumeratorIncludingPropertiesForKeys:(id)arg1 errorHandler:(id /* CDUnknownBlockType */)arg2;
- (BOOL)tryToFreeDiskSpace:(NSUInteger)arg1 actuallyFreedSpace:(NSUInteger )arg2 includeOriginals:(BOOL)arg3 error:(id )arg4;
- (BOOL)compactStorageIncludeOriginals:(BOOL)arg1 error:(id )arg2;
- (BOOL)_compactStorageIncludeOriginals:(BOOL)arg1 desiredFreeSpace:(NSUInteger )arg2 error:(id )arg3;
- (BOOL)tryToFreeDiskSpace:(NSUInteger)arg1 actuallyFreedSpace:(NSUInteger )arg2 error:(id )arg3;
- (BOOL)resetWithError:(id )arg1;
- (BOOL)compactStorage:(id )arg1;
- (BOOL)discardAllRetainedFileURLsWithError:(id )arg1;
- (BOOL)releaseFileURL:(id)arg1 error:(id )arg2;
- (id)retainFileURLForIdentity:(id)arg1 resourceType:(NSUInteger)arg2 error:(id )arg3;
- (void)checkFileSizeForIdentity:(id)arg1;
- (BOOL)hasFileWithIdentity:(id)arg1;
- (BOOL)storeUnretainedData:(id)arg1 identity:(id)arg2 isOriginal:(BOOL)arg3 error:(id )arg4;
- (BOOL)storeUnretainedFileAtURL:(id)arg1 identity:(id)arg2 isOriginal:(BOOL)arg3 error:(id )arg4;
- (BOOL)deleteFileWithIdentity:(id)arg1 includingOriginal:(BOOL)arg2 error:(id )arg3;
- (BOOL)deleteFileWithIdentity:(id)arg1 error:(id )arg2;
- (BOOL)discardUncommittedFileWithIdentity:(id)arg1 error:(id )arg2;
- (BOOL)commitFileWithIdentity:(id)arg1 error:(id )arg2;
- (BOOL)storeData:(id)arg1 identity:(id)arg2 isOriginal:(BOOL)arg3 needsCommit:(BOOL )arg4 error:(id )arg5;
- (BOOL)storeFileAtURL:(id)arg1 identity:(id)arg2 isOriginal:(BOOL)arg3 moveIfPossible:(BOOL)arg4 needsCommit:(BOOL )arg5 error:(id )arg6;
- (BOOL)_fixupIdentity:(id)arg1 fileURL:(id)arg2 data:(id)arg3 error:(id )arg4;
- (void)_removeIdentityFromUncommittedFiles:(id)arg1;
- (void)_addIdentityToUncommittedFiles:(id)arg1;
- (BOOL)hasCrashMarker;
- (NSUInteger)countOfUncommittedFiles;
- (BOOL)closeWithError:(id )arg1;
- (BOOL)openWithRecoveryHandler:(id /* CDUnknownBlockType */)arg1 error:(id )arg2;
- (BOOL)_recoverFromCrashWithRecoveryHandler:(id /* CDUnknownBlockType */)arg1 error:(id )arg2;
- (BOOL)doWrite:(id /* CDUnknownBlockType */)arg1 error:(id )arg2;
- (void)doRead:(id /* CDUnknownBlockType */)arg1;
- (id)initWithBaseURL:(id)arg1;

@end

