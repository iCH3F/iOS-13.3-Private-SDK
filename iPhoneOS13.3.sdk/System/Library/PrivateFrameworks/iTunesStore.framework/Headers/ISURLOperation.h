//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <iTunesStore/ISOperation.h>

#import <iTunesStore/SSURLSessionManagerDelegate-Protocol.h>

@class ISDataProvider, ISURLRequestPerformance, NSArray, NSCountedSet, NSData, NSMutableData, NSNumber, NSObject, NSString, NSURLCache, NSURLRequest, NSURLResponse, NSURLSessionTask, SSAuthenticationContext, SSHTTPArchive, SSMutableURLRequestProperties, SSURLRequestProperties, SSURLSessionManager;
@protocol OS_dispatch_queue;

@interface ISURLOperation : ISOperation <SSURLSessionManagerDelegate>
{
    SSAuthenticationContext *_authenticationContext;
    NSMutableData *_dataBuffer;
    ISDataProvider *_dataProvider;
    long long _networkRetryCount;
    NSCountedSet *_redirectURLs;
    SSMutableURLRequestProperties *_requestProperties;
    NSURLResponse *_response;
    BOOL _shouldSetCookies;
    SSURLSessionManager *_urlSessionManager;
    NSURLSessionTask *_urlSessionTask;
    BOOL _usesPrivateCookieStore;
    NSURLRequest *_activeURLRequest;
    NSObject<OS_dispatch_queue> *_dataBufferAccessQueue;
    SSHTTPArchive *_httpArchive;
    ISURLRequestPerformance *_performanceMetrics;
    BOOL _loadsHTTPFailures;
    BOOL _uploadProgressRequested;
    NSString *_logKey;
    NSArray *_passThroughErrors;
    NSNumber *__accountDSIDOverride;
}

+ (struct __CFURLStorageSession )_sharedCacheStorageSession;
+ (struct _CFURLCache )sharedCFURLCache;
+ (id)copyUserAgent;
@property(retain, nonatomic, setter=_setAccountDSIDOverride:) NSNumber *_accountDSIDOverride; // @synthesize _accountDSIDOverride=__accountDSIDOverride;
@property(retain, nonatomic) NSArray *passThroughErrors; // @synthesize passThroughErrors=_passThroughErrors;
@property(retain) NSString *logKey; // @synthesize logKey=_logKey;
@property(nonatomic, getter=isUploadProgressRequested) BOOL uploadProgressRequested; // @synthesize uploadProgressRequested=_uploadProgressRequested;
@property(getter=_usesPrivateCookieStore, setter=_setUsesPrivateCookieStore:) BOOL _usesPrivateCookieStore; // @synthesize _usesPrivateCookieStore;
@property(getter=_shouldSetCookies, setter=_setShouldSetCookies:) BOOL _shouldSetCookies; // @synthesize _shouldSetCookies;
@property(retain) NSURLResponse *response; // @synthesize response=_response;
@property(getter=_loadsHTTPFailures, setter=_setLoadsHTTPFailures:) BOOL _loadsHTTPFailures; // @synthesize _loadsHTTPFailures;
@property(retain) ISDataProvider *dataProvider; // @synthesize dataProvider=_dataProvider;
@property(readonly, copy) NSURLRequest *activeURLRequest; // @synthesize activeURLRequest=_activeURLRequest;
// - (void).cxx_destruct;
- (BOOL)_validateContentLength:(long long)arg1 error:(id )arg2;
- (void)_updateProgress;
- (id)_stringForCachePolicy:(NSUInteger)arg1;
- (void)_stopIfCancelled;
- (void)_stopConnection;
- (BOOL)_shouldFollowRedirectWithRequest:(id)arg1 error:(id )arg2;
@property(retain, setter=_setActiveURLRequest:) NSURLRequest *_activeURLRequest;
- (void)_sendResponseToDelegate:(id)arg1;
- (void)_sendRequestToDelegate:(id)arg1;
- (void)_sendOutputToDelegate:(id)arg1;
- (void)_sendContentLengthToDelegate:(long long)arg1;
- (BOOL)_runRequestWithURL:(id)arg1 dataConnectionServiceType:(struct __CFString )arg2;
- (void)_run;
- (void)_retry;
- (void)_performDefaultHandlingForAuthenticationChallenge:(id)arg1;
- (void)_logResponseBody:(id)arg1;
- (void)_logRequest:(id)arg1;
- (BOOL)_isPassThroughStatus:(long long)arg1;
- (BOOL)_isExternalURL:(id)arg1;
- (id)_errorWithDomain:(id)arg1 code:(long long)arg2;
- (id)_errorWithDefaultStringsForError:(id)arg1;
- (long long)_defaultAuthChallengeDispositionForChallenge:(id)arg1;
- (id)_decodedDataForData:(id)arg1;
- (id)_copyQueryStringDictionaryForRedirect:(id)arg1;
- (id)_copyConnectionPropertiesWithDataConnectionServiceType:(struct __CFString )arg1;
- (id)_activeURL;
- (id)_handleRedirectRequest:(id)arg1 response:(id)arg2;
- (void)_handleReceivedResponse:(id)arg1;
- (void)_handleReceivedData:(id)arg1;
- (void)_handleFinishedLoading;
- (void)_willSendRequest:(id)arg1;
- (id)_sanitizedURLForURL:(id)arg1;
- (id)_sanitizedStringForString:(id)arg1;
- (id)_sanitizedDescriptionForObject:(id)arg1;
- (id)_requestProperties;
- (BOOL)_processResponseData:(id)arg1 error:(id )arg2;
- (id)_copyAuthenticationContext;
- (id)_accountIdentifier;
@property BOOL tracksPerformanceMetrics;
@property(readonly) ISURLRequestPerformance *performanceMetrics;
@property(readonly) SSHTTPArchive *HTTPArchive;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(id /* CDUnknownBlockType */)arg4;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(id /* CDUnknownBlockType */)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 needNewBodyStream:(id /* CDUnknownBlockType */)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(id /* CDUnknownBlockType */)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didFinishCreatingHTTPArchive:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithEvent:(id)arg3 error:(id)arg4;
- (id)URLSession:(id)arg1 task:(id)arg2 decodedDataForResponseData:(id)arg3;
@property(readonly, nonatomic) NSString *URLCacheID;
@property(readonly, nonatomic) NSURLCache *URLCache;
@property(readonly, nonatomic) NSString *sourceAppBundleID;
@property(readonly, nonatomic) NSData *sourceAppAuditTokenData;
@property(readonly, nonatomic) BOOL shouldSetCookies;
@property(readonly, nonatomic) BOOL shouldRequireCellular;
@property(readonly, nonatomic) BOOL shouldDisableCellular;
@property(readonly, nonatomic) NSData *rawResponseData;
@property(readonly, nonatomic) NSNumber *metricsLoadURLSamplingPercentageCachedResponses;
@property(readonly, nonatomic) NSNumber *metricsLoadURLSamplingPercentage;
@property(readonly, nonatomic) NSNumber *metricsLoadURLSessionDuration;
- (BOOL)shouldFollowRedirectWithRequest:(id)arg1 returningError:(id )arg2;
- (id)newRequestWithURL:(id)arg1;
- (void)handleResponse:(id)arg1;
- (BOOL)handleRedirectFromDataProvider:(id)arg1 error:(id )arg2;
- (void)run;
@property(copy) SSURLRequestProperties *requestProperties;
- (void)setRequest:(id)arg1;
@property(retain) SSAuthenticationContext *authenticationContext; // @synthesize authenticationContext=_authenticationContext;
- (id)request;
- (void)dealloc;
- (id)initWithSessionManager:(id)arg1;
- (id)init;

@end

