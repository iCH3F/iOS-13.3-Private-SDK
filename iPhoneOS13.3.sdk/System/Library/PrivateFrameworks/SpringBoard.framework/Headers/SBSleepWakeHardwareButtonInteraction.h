//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SpringBoard/SBHardwareButtonGestureParametersObserver-Protocol.h>
#import <SpringBoard/SBHardwareButtonInteraction-Protocol.h>

@class SBBacklightController, SBBannerController, SBHIDInterface, SBLockScreenManager, SBScreenWakeAnimationController, SBSoundController, SpringBoard;
@protocol BSInvalidatable;

@interface SBSleepWakeHardwareButtonInteraction : NSObject <SBHardwareButtonInteraction, SBHardwareButtonGestureParametersObserver>
{
    BOOL _inhibitNextSinglePressUp;
    BOOL _SOSGestureActive;
    BOOL _fadeOutInProgressFromLockButtonWhileUnlocked;
    BOOL _undidFadeOutFromLockButton;
    BOOL _didPlayLockSound;
    SBBacklightController *_backlightController;
    SBBannerController *_bannerController;
    SBLockScreenManager *_lockScreenManager;
    SBScreenWakeAnimationController *_screenWakeAnimationController;
    SBSoundController *_soundController;
    SBHIDInterface *_HIDInterface;
    SpringBoard *_SBApp;
    double _multiplePressTimeInterval;
    id <BSInvalidatable> _deferOrientationUpdatesAssertion;
}

@property(retain, nonatomic) id <BSInvalidatable> deferOrientationUpdatesAssertion; // @synthesize deferOrientationUpdatesAssertion=_deferOrientationUpdatesAssertion;
@property(nonatomic) BOOL didPlayLockSound; // @synthesize didPlayLockSound=_didPlayLockSound;
@property(nonatomic) BOOL undidFadeOutFromLockButton; // @synthesize undidFadeOutFromLockButton=_undidFadeOutFromLockButton;
@property(nonatomic) BOOL fadeOutInProgressFromLockButtonWhileUnlocked; // @synthesize fadeOutInProgressFromLockButtonWhileUnlocked=_fadeOutInProgressFromLockButtonWhileUnlocked;
@property(nonatomic) double multiplePressTimeInterval; // @synthesize multiplePressTimeInterval=_multiplePressTimeInterval;
@property(retain, nonatomic) SpringBoard *SBApp; // @synthesize SBApp=_SBApp;
@property(retain, nonatomic) SBHIDInterface *HIDInterface; // @synthesize HIDInterface=_HIDInterface;
@property(retain, nonatomic) SBSoundController *soundController; // @synthesize soundController=_soundController;
@property(retain, nonatomic) SBScreenWakeAnimationController *screenWakeAnimationController; // @synthesize screenWakeAnimationController=_screenWakeAnimationController;
@property(retain, nonatomic) SBLockScreenManager *lockScreenManager; // @synthesize lockScreenManager=_lockScreenManager;
@property(retain, nonatomic) SBBannerController *bannerController; // @synthesize bannerController=_bannerController;
@property(retain, nonatomic) SBBacklightController *backlightController; // @synthesize backlightController=_backlightController;
@property(nonatomic, getter=isSOSGestureActive) BOOL SOSGestureActive; // @synthesize SOSGestureActive=_SOSGestureActive;
@property(nonatomic) BOOL inhibitNextSinglePressUp; // @synthesize inhibitNextSinglePressUp=_inhibitNextSinglePressUp;
// - (void).cxx_destruct;
- (void)_playLockSound;
- (void)_performSleep;
- (void)_performWake;
- (void)provider:(id)arg1 didUpdateButtonGestureParameters:(id)arg2;
- (BOOL)consumeSinglePressUp;
- (BOOL)consumeInitialPressDown;
- (BOOL)reverseSleepIfNeededAndPossible;
- (id)init;

@end

