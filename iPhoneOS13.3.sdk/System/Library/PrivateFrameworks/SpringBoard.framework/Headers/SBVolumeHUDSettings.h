//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <PrototypeTools/PTSettings.h>

@interface SBVolumeHUDSettings : PTSettings
{
    BOOL _showDebugUI;
    BOOL _autoDismiss;
    BOOL _forceEUVolumeMode;
    BOOL _rampTickHapticIntensity;
    BOOL _shouldRouteChangeResultInPresentingVolumeHUD;
    float _EUVolumeLimit;
    float _volumeStepDelta;
    float _minimumTickHapticIntensity;
    float _maximumTickHapticIntensity;
    double _minMaxXScaleSpringRetargetImpulse;
    double _minMaxXScaleSpringDampingRatio;
    double _minMaxXScaleSpringResponse;
    double _minMaxXScaleSpringVolumeToMax;
    double _minMaxXScaleSpringVolumeToMin;
    double _minMaxYScaleSpringRetargetImpulse;
    double _minMaxYScaleSpringDampingRatio;
    double _minMaxYScaleSpringResponse;
    double _minMaxYScaleSpringVolumeToMax;
    double _minMaxYScaleSpringVolumeToMin;
    double _deflatorTargetDownScale;
    double _deflatorTargetCompleteDownScale;
    double _deflatorTargetFudgeFactor;
    double _deflatorTargetCompleteImpulse;
    double _positionXSpringRetargetImpulse;
    double _positionXSpringDampingRatio;
    double _positionXSpringResponse;
    double _positionXSpringResponseBeginDeflator;
    double _positionXSpringResponseFinishDeflate;
    double _positionYSpringRetargetImpulse;
    double _positionYSpringDampingRatio;
    double _positionYSpringResponse;
    double _scaleSpringRetargetImpulse;
    double _scaleSpringDampingRatio;
    double _scaleSpringResponse;
    double _scaleSpringResponseBeginDeflator;
    double _scaleSpringResponseFinishDeflate;
    double _scaleSpringBase;
    double _scaleSpringTracking;
    double _dimmingAlpha;
    double _dismissalInterval;
    double _legibilityStrength;
    double _labelMargin;
    double _onscreenTopMargin;
    double _onscreenLeadingMargin;
    double _offscreenTopMargin;
    double _offscreenLeadingMargin;
    double _landscapeScaleSpringVolumeDownInput;
    double _landscapeScaleSpringVolumeUpInput;
    double _portraitScaleSpringVolumeDownInput;
    double _portraitScaleSpringVolumeUpInput;
    double _landscapeState1CornerRadius;
    double _landscapeState2CornerRadius;
    double _landscapeState3CornerRadius;
    double _landscapeStateBaseCornerRadius;
    double _portraitState1CornerRadius;
    double _portraitState2CornerRadius;
    double _portraitState3CornerRadius;
    double _portraitStateBaseCornerRadius;
    double _landscapeState1Width;
    double _landscapeState2Width;
    double _landscapeState3Width;
    double _landscapeState1Height;
    double _landscapeState2Height;
    double _landscapeState3Height;
    double _portraitState1Width;
    double _portraitState2Width;
    double _portraitState3Width;
    double _portraitState1Height;
    double _portraitState2Height;
    double _portraitState3Height;
    double _volumeButtonsCenterY;
}

+ (id)settingsControllerModule;
@property(nonatomic) BOOL shouldRouteChangeResultInPresentingVolumeHUD; // @synthesize shouldRouteChangeResultInPresentingVolumeHUD=_shouldRouteChangeResultInPresentingVolumeHUD;
@property(nonatomic) float maximumTickHapticIntensity; // @synthesize maximumTickHapticIntensity=_maximumTickHapticIntensity;
@property(nonatomic) float minimumTickHapticIntensity; // @synthesize minimumTickHapticIntensity=_minimumTickHapticIntensity;
@property(nonatomic) BOOL rampTickHapticIntensity; // @synthesize rampTickHapticIntensity=_rampTickHapticIntensity;
@property(nonatomic) float volumeStepDelta; // @synthesize volumeStepDelta=_volumeStepDelta;
@property(nonatomic) float EUVolumeLimit; // @synthesize EUVolumeLimit=_EUVolumeLimit;
@property(nonatomic) BOOL forceEUVolumeMode; // @synthesize forceEUVolumeMode=_forceEUVolumeMode;
@property(nonatomic) BOOL autoDismiss; // @synthesize autoDismiss=_autoDismiss;
@property(nonatomic) BOOL showDebugUI; // @synthesize showDebugUI=_showDebugUI;
@property(nonatomic) double volumeButtonsCenterY; // @synthesize volumeButtonsCenterY=_volumeButtonsCenterY;
@property(nonatomic) double portraitState3Height; // @synthesize portraitState3Height=_portraitState3Height;
@property(nonatomic) double portraitState2Height; // @synthesize portraitState2Height=_portraitState2Height;
@property(nonatomic) double portraitState1Height; // @synthesize portraitState1Height=_portraitState1Height;
@property(nonatomic) double portraitState3Width; // @synthesize portraitState3Width=_portraitState3Width;
@property(nonatomic) double portraitState2Width; // @synthesize portraitState2Width=_portraitState2Width;
@property(nonatomic) double portraitState1Width; // @synthesize portraitState1Width=_portraitState1Width;
@property(nonatomic) double landscapeState3Height; // @synthesize landscapeState3Height=_landscapeState3Height;
@property(nonatomic) double landscapeState2Height; // @synthesize landscapeState2Height=_landscapeState2Height;
@property(nonatomic) double landscapeState1Height; // @synthesize landscapeState1Height=_landscapeState1Height;
@property(nonatomic) double landscapeState3Width; // @synthesize landscapeState3Width=_landscapeState3Width;
@property(nonatomic) double landscapeState2Width; // @synthesize landscapeState2Width=_landscapeState2Width;
@property(nonatomic) double landscapeState1Width; // @synthesize landscapeState1Width=_landscapeState1Width;
@property(nonatomic) double portraitStateBaseCornerRadius; // @synthesize portraitStateBaseCornerRadius=_portraitStateBaseCornerRadius;
@property(nonatomic) double portraitState3CornerRadius; // @synthesize portraitState3CornerRadius=_portraitState3CornerRadius;
@property(nonatomic) double portraitState2CornerRadius; // @synthesize portraitState2CornerRadius=_portraitState2CornerRadius;
@property(nonatomic) double portraitState1CornerRadius; // @synthesize portraitState1CornerRadius=_portraitState1CornerRadius;
@property(nonatomic) double landscapeStateBaseCornerRadius; // @synthesize landscapeStateBaseCornerRadius=_landscapeStateBaseCornerRadius;
@property(nonatomic) double landscapeState3CornerRadius; // @synthesize landscapeState3CornerRadius=_landscapeState3CornerRadius;
@property(nonatomic) double landscapeState2CornerRadius; // @synthesize landscapeState2CornerRadius=_landscapeState2CornerRadius;
@property(nonatomic) double landscapeState1CornerRadius; // @synthesize landscapeState1CornerRadius=_landscapeState1CornerRadius;
@property(nonatomic) double portraitScaleSpringVolumeUpInput; // @synthesize portraitScaleSpringVolumeUpInput=_portraitScaleSpringVolumeUpInput;
@property(nonatomic) double portraitScaleSpringVolumeDownInput; // @synthesize portraitScaleSpringVolumeDownInput=_portraitScaleSpringVolumeDownInput;
@property(nonatomic) double landscapeScaleSpringVolumeUpInput; // @synthesize landscapeScaleSpringVolumeUpInput=_landscapeScaleSpringVolumeUpInput;
@property(nonatomic) double landscapeScaleSpringVolumeDownInput; // @synthesize landscapeScaleSpringVolumeDownInput=_landscapeScaleSpringVolumeDownInput;
@property(nonatomic) double offscreenLeadingMargin; // @synthesize offscreenLeadingMargin=_offscreenLeadingMargin;
@property(nonatomic) double offscreenTopMargin; // @synthesize offscreenTopMargin=_offscreenTopMargin;
@property(nonatomic) double onscreenLeadingMargin; // @synthesize onscreenLeadingMargin=_onscreenLeadingMargin;
@property(nonatomic) double onscreenTopMargin; // @synthesize onscreenTopMargin=_onscreenTopMargin;
@property(nonatomic) double labelMargin; // @synthesize labelMargin=_labelMargin;
@property(nonatomic) double legibilityStrength; // @synthesize legibilityStrength=_legibilityStrength;
@property(nonatomic) double dismissalInterval; // @synthesize dismissalInterval=_dismissalInterval;
@property(nonatomic) double dimmingAlpha; // @synthesize dimmingAlpha=_dimmingAlpha;
@property(nonatomic) double scaleSpringTracking; // @synthesize scaleSpringTracking=_scaleSpringTracking;
@property(nonatomic) double scaleSpringBase; // @synthesize scaleSpringBase=_scaleSpringBase;
@property(nonatomic) double scaleSpringResponseFinishDeflate; // @synthesize scaleSpringResponseFinishDeflate=_scaleSpringResponseFinishDeflate;
@property(nonatomic) double scaleSpringResponseBeginDeflator; // @synthesize scaleSpringResponseBeginDeflator=_scaleSpringResponseBeginDeflator;
@property(nonatomic) double scaleSpringResponse; // @synthesize scaleSpringResponse=_scaleSpringResponse;
@property(nonatomic) double scaleSpringDampingRatio; // @synthesize scaleSpringDampingRatio=_scaleSpringDampingRatio;
@property(nonatomic) double scaleSpringRetargetImpulse; // @synthesize scaleSpringRetargetImpulse=_scaleSpringRetargetImpulse;
@property(nonatomic) double positionYSpringResponse; // @synthesize positionYSpringResponse=_positionYSpringResponse;
@property(nonatomic) double positionYSpringDampingRatio; // @synthesize positionYSpringDampingRatio=_positionYSpringDampingRatio;
@property(nonatomic) double positionYSpringRetargetImpulse; // @synthesize positionYSpringRetargetImpulse=_positionYSpringRetargetImpulse;
@property(nonatomic) double positionXSpringResponseFinishDeflate; // @synthesize positionXSpringResponseFinishDeflate=_positionXSpringResponseFinishDeflate;
@property(nonatomic) double positionXSpringResponseBeginDeflator; // @synthesize positionXSpringResponseBeginDeflator=_positionXSpringResponseBeginDeflator;
@property(nonatomic) double positionXSpringResponse; // @synthesize positionXSpringResponse=_positionXSpringResponse;
@property(nonatomic) double positionXSpringDampingRatio; // @synthesize positionXSpringDampingRatio=_positionXSpringDampingRatio;
@property(nonatomic) double positionXSpringRetargetImpulse; // @synthesize positionXSpringRetargetImpulse=_positionXSpringRetargetImpulse;
@property(nonatomic) double deflatorTargetCompleteImpulse; // @synthesize deflatorTargetCompleteImpulse=_deflatorTargetCompleteImpulse;
@property(nonatomic) double deflatorTargetFudgeFactor; // @synthesize deflatorTargetFudgeFactor=_deflatorTargetFudgeFactor;
@property(nonatomic) double deflatorTargetCompleteDownScale; // @synthesize deflatorTargetCompleteDownScale=_deflatorTargetCompleteDownScale;
@property(nonatomic) double deflatorTargetDownScale; // @synthesize deflatorTargetDownScale=_deflatorTargetDownScale;
@property(nonatomic) double minMaxYScaleSpringVolumeToMin; // @synthesize minMaxYScaleSpringVolumeToMin=_minMaxYScaleSpringVolumeToMin;
@property(nonatomic) double minMaxYScaleSpringVolumeToMax; // @synthesize minMaxYScaleSpringVolumeToMax=_minMaxYScaleSpringVolumeToMax;
@property(nonatomic) double minMaxYScaleSpringResponse; // @synthesize minMaxYScaleSpringResponse=_minMaxYScaleSpringResponse;
@property(nonatomic) double minMaxYScaleSpringDampingRatio; // @synthesize minMaxYScaleSpringDampingRatio=_minMaxYScaleSpringDampingRatio;
@property(nonatomic) double minMaxYScaleSpringRetargetImpulse; // @synthesize minMaxYScaleSpringRetargetImpulse=_minMaxYScaleSpringRetargetImpulse;
@property(nonatomic) double minMaxXScaleSpringVolumeToMin; // @synthesize minMaxXScaleSpringVolumeToMin=_minMaxXScaleSpringVolumeToMin;
@property(nonatomic) double minMaxXScaleSpringVolumeToMax; // @synthesize minMaxXScaleSpringVolumeToMax=_minMaxXScaleSpringVolumeToMax;
@property(nonatomic) double minMaxXScaleSpringResponse; // @synthesize minMaxXScaleSpringResponse=_minMaxXScaleSpringResponse;
@property(nonatomic) double minMaxXScaleSpringDampingRatio; // @synthesize minMaxXScaleSpringDampingRatio=_minMaxXScaleSpringDampingRatio;
@property(nonatomic) double minMaxXScaleSpringRetargetImpulse; // @synthesize minMaxXScaleSpringRetargetImpulse=_minMaxXScaleSpringRetargetImpulse;
- (void)setDefaultValues;

@end

