//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SpringBoard/FBSDisplayLayoutObserver-Protocol.h>
#import <SpringBoard/SBIdleTimerCoordinating-Protocol.h>
#import <SpringBoard/SBIdleTimerGlobalStateMonitorObserving-Protocol.h>
#import <SpringBoard/SBIdleTimerObserving-Protocol.h>

@class FBSDisplayLayoutMonitor, NSMutableDictionary, PTTestRecipe, SBIdleTimerCoordinatorHelper, SBIdleTimerDescriptor, SBIdleTimerDescriptorFactory, SBIdleTimerGlobalStateMonitor, SBIdleTimerProxy;
@protocol BSInvalidatable, SBIdleTimer, SBIdleTimerGlobalCoordinatorDelegate, SBIdleTimerProviding, SBIdleTimerResetSource;

@interface SBIdleTimerGlobalCoordinator : NSObject <FBSDisplayLayoutObserver, SBIdleTimerObserving, SBIdleTimerGlobalStateMonitorObserving, SBIdleTimerCoordinating>
{
    SBIdleTimerDescriptorFactory *_idleTimerDescriptorFactory;
    SBIdleTimerGlobalStateMonitor *_globalStateMonitor;
    SBIdleTimerProxy *_idleTimerProxy;
    SBIdleTimerDescriptor *_disabledIdleTimerDescriptor;
    SBIdleTimerProxy *_enabledIdleTimerProxy;
    SBIdleTimerDescriptor *_enabledIdleTimerDescriptor;
    BOOL _idleTimerSourceEnabled;
    SBIdleTimerCoordinatorHelper *_idleTimerCoordinatorHelper;
    id <BSInvalidatable> _disableAutoDimAssertion;
    FBSDisplayLayoutMonitor *_layoutMonitor;
    BOOL _started;
    id <SBIdleTimerResetSource> _lastResetSource;
    id <BSInvalidatable> _stateCaptureAssertion;
    PTTestRecipe *_clientDisableAssertionsTestRecipe;
    PTTestRecipe *_internalDisableAssertionsTestRecipe;
    id <SBIdleTimerGlobalCoordinatorDelegate> _delegate;
    id <SBIdleTimerProviding> _idleTimerProvider;
    NSMutableDictionary *_idleTimerDisableAssertions;
}

+ (id)sharedInstanceIfExists;
+ (id)sharedInstance;
+ (id)_sharedInstanceCreateIfNeeded:(BOOL)arg1;
@property(retain, nonatomic, getter=_idleTimerDisableAssertions, setter=_setIdleTimerDisableAssertions:) NSMutableDictionary *idleTimerDisableAssertions; // @synthesize idleTimerDisableAssertions=_idleTimerDisableAssertions;
@property(nonatomic, getter=_idleTimerProvider, setter=_setIdleTimerProvider:) __weak id <SBIdleTimerProviding> idleTimerProvider; // @synthesize idleTimerProvider=_idleTimerProvider;
@property(nonatomic) __weak id <SBIdleTimerGlobalCoordinatorDelegate> delegate; // @synthesize delegate=_delegate;
// - (void).cxx_destruct;
- (void)_registerInternalDisableAssertionsTestRecipe;
- (void)_registerClientDisableAssertionsTestRecipe;
- (void)_unregisterTestRecipes;
- (void)_registerTestRecipes;
- (void)idleTimerDidResetForUserAttention:(id)arg1;
- (void)idleTimerDidRefresh:(id)arg1;
- (void)idleTimerGlobalStateMonitor:(id)arg1 changedForReason:(id)arg2;
- (void)_updateGlobalStateDisableAssertions;
- (void)_idleTimerPrefsChanged;
- (id)_stateCaptureDescription;
- (void)_addStateCaptureHandlers;
- (void)_setIdleTimerWithDescriptor:(id)arg1 forReason:(id)arg2;
- (void)_applyActiveIdleTimerDescriptorForReason:(id)arg1;
- (void)_setIdleTimerSourceEnabled:(BOOL)arg1 forReason:(id)arg2;
- (id)_updateIdleTimerForProvider:(id)arg1 behavior:(id)arg2 forReason:(id)arg3;
- (id)_updateIdleTimerForProvider:(id)arg1 behavior:(id)arg2 descriptor:(id)arg3 forReason:(id)arg4;
- (id)_activeIdleTimerProvider;
- (BOOL)_updateIdleTimerForReason:(id)arg1;
- (BOOL)_areIdleTimerDisableAssertionsPrevented;
- (BOOL)_hasIdleTimerDisableAssertions;
- (void)_logEffectiveLockTimeout;
- (void)layoutMonitor:(id)arg1 didUpdateDisplayLayout:(id)arg2 withContext:(id)arg3;
- (id)idleTimerProvider:(id)arg1 didProposeBehavior:(id)arg2 forReason:(id)arg3;
- (id)acquireIdleTimerDisableAssertionForReason:(id)arg1;
- (void)resetIdleTimerIfNonConsecutiveSource:(id)arg1 forReason:(id)arg2;
- (void)resetIdleTimerForReason:(id)arg1;
- (void)resetIdleTimer;
@property(readonly, nonatomic) id <SBIdleTimer> idleTimer;
- (void)start;
@property(readonly, nonatomic, getter=isIdleTimerDisabled) BOOL idleTimerDisabled;
- (void)dealloc;
- (id)init;

@end

