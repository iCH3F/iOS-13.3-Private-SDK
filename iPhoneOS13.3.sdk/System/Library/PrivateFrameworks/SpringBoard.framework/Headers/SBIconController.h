//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <SpringBoard/BBObserverDelegate-Protocol.h>
#import <SpringBoard/FBSDisplayLayoutPublisherObserving-Protocol.h>
#import <SpringBoard/MCProfileConnectionObserver-Protocol.h>
#import <SpringBoard/PTSettingsKeyObserver-Protocol.h>
#import <SpringBoard/SBAlertItemsControllerObserver-Protocol.h>
#import <SpringBoard/SBApplicationRestrictionObserver-Protocol.h>
#import <SpringBoard/SBAssistantObserver-Protocol.h>
#import <SpringBoard/SBFloatingDockControllerDelegate-Protocol.h>
#import <SpringBoard/SBHIconManagerDelegate-Protocol.h>
#import <SpringBoard/SBHSidebarProviderDelegate-Protocol.h>
#import <SpringBoard/SBHomeScreenIconTransitionAnimatorDelegate-Protocol.h>
#import <SpringBoard/SBHomeScreenSpotlightDismissalDelegate-Protocol.h>
#import <SpringBoard/SBHomeScreenTodayViewControllerDelegate-Protocol.h>
#import <SpringBoard/SBIconAnimationContaining-Protocol.h>
#import <SpringBoard/SBIconModelApplicationDataSource-Protocol.h>
#import <SpringBoard/SBLayoutStateTransitionObserver-Protocol.h>
#import <SpringBoard/SBRootFolderControllerAccessoryViewControllerDelegate-Protocol.h>
#import <SpringBoard/SBRootFolderPageStateObserver-Protocol.h>
#import <SpringBoard/SBSearchGestureObserver-Protocol.h>
#import <SpringBoard/SPUIRemoteSearchViewDelegate-Protocol.h>
#import <SpringBoard/WGWidgetGroupViewControllerDelegate-Protocol.h>

@class BBObserver, BSEventQueue, NSArray, NSIndexPath, NSMapTable, NSMutableArray, NSMutableSet, NSSet, NSString, NSTimer, PTSingleTestRecipe, SBAlertItemsController, SBAppStatusBarDateTimeAssertion, SBApplicationController, SBApplicationPlaceholderController, SBAssistantController, SBFloatingDockController, SBFolderController, SBFolderStatsQueryableMetric, SBHIconImageCache, SBHIconManager, SBHRootFolderSettings, SBHomeScreenSpotlightViewController, SBHomeScreenTodayViewController, SBIconContentView, SBIconDragManager, SBIconModel, SBIconVisibilityService, SBMainDisplayPolicyAggregator, SBRootFolder, SBRootFolderController, SBTodayOverlayController, SBUIController, SBWorkspaceTransitionRequest, UIView, UIWindow, WGWidgetGroupViewController, _UILegibilitySettings;
@protocol BSInvalidatable, SBIconAnimationContaining, SBRootFolderPageTransition;

@interface SBIconController : UIViewController <BBObserverDelegate, MCProfileConnectionObserver, SBApplicationRestrictionObserver, UIGestureRecognizerDelegate, SBSearchGestureObserver, FBSDisplayLayoutPublisherObserving, SBRootFolderPageStateObserver, SBAlertItemsControllerObserver, SBAssistantObserver, SBHIconManagerDelegate, SBRootFolderControllerAccessoryViewControllerDelegate, SBHomeScreenSpotlightDismissalDelegate, SBHomeScreenTodayViewControllerDelegate, SBFloatingDockControllerDelegate, SPUIRemoteSearchViewDelegate, PTSettingsKeyObserver, WGWidgetGroupViewControllerDelegate, SBHSidebarProviderDelegate, SBLayoutStateTransitionObserver, SBIconModelApplicationDataSource, SBHomeScreenIconTransitionAnimatorDelegate, SBIconAnimationContaining>
{
    NSSet *_visibleTags;
    NSSet *_hiddenTags;
    SBIconModel *_iconModel;
    BBObserver *_bbObserver;
    NSMutableSet *_displayIDsWithBadgingEnabled;
    SBApplicationController *_override_applicationController;
    SBApplicationPlaceholderController *_override_applicationPlaceholderController;
    SBUIController *_override_userInterfaceController;
    SBMainDisplayPolicyAggregator *_override_policyAggregator;
    SBAlertItemsController *_override_alertItemsController;
    SBAssistantController *_override_assistantController;
    BOOL _rotating;
    BOOL _allowsUninstall;
    BOOL _keyboardIsRotating;
    BOOL _isAnimatingSignficantly;
    BOOL _sendITunesNotification;
    BOOL _showingSearch;
    BOOL _performedInitialLayout;
    _UILegibilitySettings *_legibilitySettings;
    NSIndexPath *_indexPathToResetTo;
    SBWorkspaceTransitionRequest *_currentTransitionRequest;
    BSEventQueue *_transitionEventQueue;
    SBFolderStatsQueryableMetric *_queryableFolderMetric;
    NSMutableArray *_iconTouchesFinishedBlocks;
    NSMapTable *_folderControllerDeferRotationForIconScrollingAssertions;
    NSMapTable *_activeInterfaceOrientationChangeDeferralAssertionsByReason;
    NSMapTable *_deviceOrientationUpdateDeferralAssertionsByReason;
    SBHIconImageCache *_appSwitcherHeaderIconImageCache;
    SBHIconImageCache *_tableUIIconImageCache;
    SBHIconImageCache *_notificationIconImageCache;
    NSMutableSet *_delayedStyleWallpaperEffectViews;
    NSMapTable *_suspendWallpaperAnimationForFolderAssertions;
    SBIconVisibilityService *_iconVisibilityService;
    BOOL _hasRestrictedEnforcedLayout;
    BOOL _uninstallingSystemAppsRestricted;
    BOOL _dismissingMenuForFolderPresentation;
    BOOL __ignoreMutatingIconListsOnApplicationInstall;
    SBHIconManager *_iconManager;
    SBHomeScreenTodayViewController *_todayViewController;
    SBHomeScreenSpotlightViewController *_spotlightViewController;
    SBFloatingDockController *_floatingDockController;
    NSTimer *_delayedLaunchRequestTimer;
    NSTimer *_editingEndTimer;
    id /* CDUnknownBlockType */ _searchGestureCompletionHandler;
    NSTimer *_popoverDelayTimer;
    NSTimer *_iconEditingFeedbackWarmTimer;
    NSUInteger _iconOcclusionReasons;
    id <SBRootFolderPageTransition> _interactivePullToTodaySearchTransition;
    id <BSInvalidatable> _displayLayoutTransition;
    PTSingleTestRecipe *_relayoutTestRecipe;
    PTSingleTestRecipe *_toggleSearchTestRecipe;
    PTSingleTestRecipe *_runDownloadingIconTestRecipe;
    PTSingleTestRecipe *_organizeInFoldersTestRecipe;
    SBHRootFolderSettings *_rootFolderSettings;
    SBAppStatusBarDateTimeAssertion *_statusBarContentAssertion;
    id <BSInvalidatable> _sidebarAppearanceStateOverrideAssertion;
    id <BSInvalidatable> _significantAnimationColorSamplingAssertion;
    id <BSInvalidatable> _suspendWallpaperAnimationForSpotlightAssertion;
    WGWidgetGroupViewController *_widgetGroupViewController;
    SBTodayOverlayController *_todayOverlayController;
    long long _currentIconListIndex;
    NSSet *_appIconForceTouchWindows;
}

+ (id)sharedInstanceIfExists;
+ (id)sharedInstance;
@property(readonly, nonatomic) NSSet *appIconForceTouchWindows; // @synthesize appIconForceTouchWindows=_appIconForceTouchWindows;
@property(readonly, nonatomic) long long currentIconListIndex; // @synthesize currentIconListIndex=_currentIconListIndex;
@property(nonatomic, setter=_setIgnoreMutatingIconListsOnApplicationInstall:) BOOL _ignoreMutatingIconListsOnApplicationInstall; // @synthesize _ignoreMutatingIconListsOnApplicationInstall=__ignoreMutatingIconListsOnApplicationInstall;
@property(retain, nonatomic) SBTodayOverlayController *todayOverlayController; // @synthesize todayOverlayController=_todayOverlayController;
@property(readonly, nonatomic) WGWidgetGroupViewController *widgetGroupViewController; // @synthesize widgetGroupViewController=_widgetGroupViewController;
@property(retain, nonatomic) id <BSInvalidatable> suspendWallpaperAnimationForSpotlightAssertion; // @synthesize suspendWallpaperAnimationForSpotlightAssertion=_suspendWallpaperAnimationForSpotlightAssertion;
@property(retain, nonatomic) id <BSInvalidatable> significantAnimationColorSamplingAssertion; // @synthesize significantAnimationColorSamplingAssertion=_significantAnimationColorSamplingAssertion;
@property(retain, nonatomic) id <BSInvalidatable> sidebarAppearanceStateOverrideAssertion; // @synthesize sidebarAppearanceStateOverrideAssertion=_sidebarAppearanceStateOverrideAssertion;
@property(nonatomic) BOOL dismissingMenuForFolderPresentation; // @synthesize dismissingMenuForFolderPresentation=_dismissingMenuForFolderPresentation;
@property(retain, nonatomic) SBAppStatusBarDateTimeAssertion *statusBarContentAssertion; // @synthesize statusBarContentAssertion=_statusBarContentAssertion;
@property(readonly, nonatomic) SBHRootFolderSettings *rootFolderSettings; // @synthesize rootFolderSettings=_rootFolderSettings;
@property(readonly, nonatomic) PTSingleTestRecipe *organizeInFoldersTestRecipe; // @synthesize organizeInFoldersTestRecipe=_organizeInFoldersTestRecipe;
@property(readonly, nonatomic) PTSingleTestRecipe *runDownloadingIconTestRecipe; // @synthesize runDownloadingIconTestRecipe=_runDownloadingIconTestRecipe;
@property(readonly, nonatomic) PTSingleTestRecipe *toggleSearchTestRecipe; // @synthesize toggleSearchTestRecipe=_toggleSearchTestRecipe;
@property(readonly, nonatomic) PTSingleTestRecipe *relayoutTestRecipe; // @synthesize relayoutTestRecipe=_relayoutTestRecipe;
@property(retain, nonatomic) id <BSInvalidatable> displayLayoutTransition; // @synthesize displayLayoutTransition=_displayLayoutTransition;
@property(retain, nonatomic) id <SBRootFolderPageTransition> interactivePullToTodaySearchTransition; // @synthesize interactivePullToTodaySearchTransition=_interactivePullToTodaySearchTransition;
@property(nonatomic) NSUInteger iconOcclusionReasons; // @synthesize iconOcclusionReasons=_iconOcclusionReasons;
@property(retain, nonatomic) NSTimer *iconEditingFeedbackWarmTimer; // @synthesize iconEditingFeedbackWarmTimer=_iconEditingFeedbackWarmTimer;
@property(retain, nonatomic) NSTimer *popoverDelayTimer; // @synthesize popoverDelayTimer=_popoverDelayTimer;
@property(copy, nonatomic) id /* CDUnknownBlockType */ searchGestureCompletionHandler; // @synthesize searchGestureCompletionHandler=_searchGestureCompletionHandler;
@property(retain, nonatomic) NSTimer *editingEndTimer; // @synthesize editingEndTimer=_editingEndTimer;
@property(retain, nonatomic) NSTimer *delayedLaunchRequestTimer; // @synthesize delayedLaunchRequestTimer=_delayedLaunchRequestTimer;
@property(nonatomic, getter=isUninstallingSystemAppsRestricted) BOOL uninstallingSystemAppsRestricted; // @synthesize uninstallingSystemAppsRestricted=_uninstallingSystemAppsRestricted;
@property(nonatomic) BOOL hasRestrictedEnforcedLayout; // @synthesize hasRestrictedEnforcedLayout=_hasRestrictedEnforcedLayout;
@property(readonly, nonatomic) SBFloatingDockController *floatingDockController; // @synthesize floatingDockController=_floatingDockController;
@property(retain, nonatomic) SBHomeScreenSpotlightViewController *spotlightViewController; // @synthesize spotlightViewController=_spotlightViewController;
@property(retain, nonatomic) SBHomeScreenTodayViewController *todayViewController; // @synthesize todayViewController=_todayViewController;
@property(retain, nonatomic) _UILegibilitySettings *legibilitySettings; // @synthesize legibilitySettings=_legibilitySettings;
@property(readonly, nonatomic) SBHIconManager *iconManager; // @synthesize iconManager=_iconManager;
// - (void).cxx_destruct;
- (id)succinctDescriptionBuilder;
- (id)succinctDescription;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (void)_relinquishStatusBarContentAssertion;
- (void)_updateStatusBarContentAssertion;
- (void)layoutStateTransitionCoordinator:(id)arg1 transitionDidEndWithTransitionContext:(id)arg2;
- (void)layoutStateTransitionCoordinator:(id)arg1 transitionDidBeginWithTransitionContext:(id)arg2;
- (double)minimumHomeScreenScaleForFloatingDockController:(id)arg1;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (void)iconManager:(id)arg1 rootFolderController:(id)arg2 willUsePropertyAnimator:(id)arg3 toTransitionToState:(long long)arg4;
- (void)iconManager:(id)arg1 rootFolderController:(id)arg2 willUseTransitionContext:(id)arg3 toTransitionToState:(long long)arg4;
- (void)iconManagerDidNoteIconStateChangedExternally:(id)arg1;
- (NSUInteger)maximumListCountForFoldersForIconManager:(id)arg1;
- (BOOL)isFloatingDockVisibleForIconManager:(id)arg1;
- (id)iconManager:(id)arg1 accessibilityTintColorForScreenRect:(CGRect)arg2;
- (id)iconManager:(id)arg1 animator:(id)arg2 animationSettingsForOperation:(NSUInteger)arg3 childViewController:(id)arg4;
- (void)iconManagerDidSaveIconState:(id)arg1;
- (BOOL)iconManagerCanSaveIconState:(id)arg1;
- (void)iconManager:(id)arg1 nestingViewController:(id)arg2 willPerformOperation:(long long)arg3 onViewController:(id)arg4 withTransitionCoordinator:(id)arg5;
- (void)iconManagerFolderAnimatingDidChange:(id)arg1;
- (void)iconManager:(id)arg1 didCloseFolder:(id)arg2;
- (void)iconManager:(id)arg1 willCloseFolder:(id)arg2;
- (void)iconManager:(id)arg1 didOpenFolder:(id)arg2;
- (void)iconManager:(id)arg1 willOpenFolder:(id)arg2;
- (UIEdgeInsets)iconManager:(id)arg1 contentOverlayInsetsFromParentIfAvailableForFolderController:(id)arg2;
- (UIEdgeInsets)iconManager:(id)arg1 statusBarEdgeInsetsForFolderController:(id)arg2;
- (void)iconManager:(id)arg1 willRemoveFakeStatusBar:(id)arg2 forFolderController:(id)arg3;
- (id)iconManager:(id)arg1 statusBarStyleRequestForFolderController:(id)arg2;
- (id)iconManager:(id)arg1 fakeStatusBarForFolderController:(id)arg2;
- (id)iconManager:(id)arg1 wantsToHideStatusBarForFolderController:(id)arg2;
- (void)iconManager:(id)arg1 didSpringLoadIconView:(id)arg2;
- (void)iconManager:(id)arg1 didEndIconDragWithUniqueIdentifier:(id)arg2 numberOfDraggedItems:(NSUInteger)arg3;
- (void)iconManager:(id)arg1 didAddItemsToIconDragWithUniqueIdentifier:(id)arg2 numberOfDraggedItems:(NSUInteger)arg3;
- (void)iconManager:(id)arg1 willBeginIconDragWithUniqueIdentifier:(id)arg2 numberOfDraggedItems:(NSUInteger)arg3;
- (void)iconManagerIconDraggingDidChange:(id)arg1;
- (id)windowForIconDragPreviewsForIconManager:(id)arg1;
- (id)iconManager:(id)arg1 dragPreviewForIconView:(id)arg2 dragPreviewForItem:(id)arg3 session:(id)arg4 previewParameters:(id)arg5;
- (BOOL)iconManagerCanBeginIconDrags:(id)arg1;
- (id)iconManager:(id)arg1 accessibilityTintColorForIconView:(id)arg2;
- (BOOL)iconManager:(id)arg1 allowsBadgingForIcon:(id)arg2;
- (long long)iconManager:(id)arg1 closeBoxTypeForIconView:(id)arg2 proposedType:(long long)arg3;
- (id)recycledViewsContainerProviderForIconManager:(id)arg1;
- (BOOL)iconManager:(id)arg1 shouldContinueToUseBackgroundView:(id)arg2 forComponentsOfIconView:(id)arg3;
- (id)iconManager:(id)arg1 backgroundViewForComponentsOfIconView:(id)arg2;
- (BOOL)shouldUseLiveBlurForBackgroundViewForComponentsOfIconView:(id)arg1;
- (void)iconManager:(id)arg1 iconDropSessionDidEnter:(id)arg2;
- (long long)iconManager:(id)arg1 draggingStartLocationForIconView:(id)arg2 proposedStartLocation:(long long)arg3;
- (double)iconManager:(id)arg1 additionalDragLiftScaleForIconView:(id)arg2;
- (BOOL)iconManager:(id)arg1 canBeginDragForIconView:(id)arg2;
- (id)viewControllerForPresentingViewControllersForIconManager:(id)arg1;
- (void)iconManager:(id)arg1 wantsUninstallForIcon:(id)arg2 location:(id)arg3;
- (BOOL)iconManager:(id)arg1 iconViewDisplaysCloseBox:(id)arg2;
- (void)iconManager:(id)arg1 iconView:(id)arg2 willUseContextMenuStyle:(id)arg3;
- (id)iconManager:(id)arg1 containerViewForPresentingContextMenuForIconView:(id)arg2;
- (id)iconManager:(id)arg1 launchURLForIconView:(id)arg2;
- (id)iconManager:(id)arg1 launchActionsForIconView:(id)arg2;
- (void)iconManager:(id)arg1 touchesEndedForIconView:(id)arg2;
- (id)iconManager:(id)arg1 reasonToDisallowInteractionOnIconView:(id)arg2;
- (void)iconManager:(id)arg1 launchIconForIconView:(id)arg2;
- (void)iconManager:(id)arg1 didReceiveTapOnLaunchDisabledIconView:(id)arg2;
- (void)iconManager:(id)arg1 willPrepareIconViewForLaunch:(id)arg2;
- (void)iconManager:(id)arg1 possibleUserIconTapBeganAfterInformingIcon:(id)arg2;
- (void)iconManager:(id)arg1 possibleUserIconTapBegan:(id)arg2;
- (void)iconManagerDidFinishInstallForIcon:(id)arg1;
- (id)localizedDefaultFolderNameForIconManager:(id)arg1;
- (id)iconManager:(id)arg1 localizedFolderNameForDefaultDisplayName:(id)arg2;
- (id)localizedFolderNameForDefaultDisplayName:(id)arg1;
- (void)iconManager:(id)arg1 configureIconView:(id)arg2 forIcon:(id)arg3;
- (void)iconManager:(id)arg1 willUseIconImageCache:(id)arg2;
- (BOOL)isEditingAllowedForIconManager:(id)arg1;
- (BOOL)isRootFolderContentVisibleForIconManager:(id)arg1;
- (NSUInteger)allowedInterfaceOrientationsForIconManager:(id)arg1;
- (long long)interfaceOrientationForIconManager:(id)arg1;
- (id)additionalIconModelForIconManager:(id)arg1;
- (void)iconManager:(id)arg1 didCreateRootViewController:(id)arg2;
- (void)iconManager:(id)arg1 didCreateRootFolderController:(id)arg2;
- (void)iconManager:(id)arg1 willUseRootFolderControllerConfiguration:(id)arg2;
- (void)iconManager:(id)arg1 willDestroyRootViewController:(id)arg2;
- (void)iconManager:(id)arg1 willDestroyRootFolderController:(id)arg2;
@property(readonly, nonatomic) double currentDockHeight;
- (void)assistantWillAppear:(id)arg1;
- (void)alertItemsController:(id)arg1 didDeactivateAlertItem:(id)arg2 forReason:(int)arg3;
- (void)alertItemsController:(id)arg1 didActivateAlertItem:(id)arg2;
- (void)alertItemsController:(id)arg1 willActivateAlertItem:(id)arg2;
@property(readonly, nonatomic) UIView *fallbackIconContainerView;
@property(readonly, nonatomic) UIWindow *animationWindow;
@property(readonly, nonatomic) UIView *containerView;
- (void)publisher:(id)arg1 didUpdateLayout:(id)arg2 withTransition:(id)arg3;
- (void)searchGesture:(id)arg1 completedShowing:(BOOL)arg2;
- (void)searchGesture:(id)arg1 changedPercentComplete:(double)arg2;
- (void)_iconForceTouchControllerDidDismiss:(id)arg1;
- (void)_iconForceTouchControllerWillPresent:(id)arg1;
- (id)_aggregateLoggingAppKeyForIcon:(id)arg1;
- (void)_forceTouchControllerWillPresent:(id)arg1;
- (BOOL)iconManager:(id)arg1 shouldActivateApplicationShortcutItem:(id)arg2 atIndex:(NSUInteger)arg3 forIconView:(id)arg4;
- (id)iconManager:(id)arg1 applicationShortcutItemsForIconView:(id)arg2;
- (id)iconManager:(id)arg1 applicationShortcutWidgetBundleIdentifierForShortcutsWithIconView:(id)arg2;
- (id)iconManager:(id)arg1 applicationBundleURLForShortcutsWithIconView:(id)arg2;
- (BOOL)_shouldHideAppIconForceTouchInfoForApplication:(id)arg1;
- (BOOL)_isHostedByCoverSheet;
- (void)earlyTerminateAnyContextMenuAnimations;
- (void)performAfterContextMenuAnimationsHaveCompleted:(id /* CDUnknownBlockType */)arg1;
- (BOOL)areAnyIconViewContextMenusAnimating;
@property(readonly, nonatomic) BOOL areAnyIconViewContextMenusShowing;
- (void)activateTodayViewWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)dismissAppIconForceTouchControllers:(id /* CDUnknownBlockType */)arg1;
- (void)dismissSearchView;
- (void)todayViewController:(id)arg1 didEndInteractivePullToSearchSuccessfully:(BOOL)arg2;
- (void)todayViewController:(id)arg1 didUpdateInteractivePullToSearchWithProgress:(double)arg2;
- (void)todayViewControllerDidBeginInteractivePullToSearch:(id)arg1;
- (BOOL)todayViewControllerCanBeginInteractivePullToSearch:(id)arg1;
- (void)todayViewControllerDidFocusSearchField:(id)arg1;
- (NSUInteger)defaultSearchViewPresentationSourceForViewController:(id)arg1;
- (void)handleSpotlightDismissalFromViewController:(id)arg1;
- (void)handleSpotlightPresentationFromViewController:(id)arg1;
- (void)_invalidateAssertionsForFolderController:(id)arg1;
- (void)_acquireAssertionsForFolderController:(id)arg1;
- (void)popToCurrentRootIconListWhenPossible;
- (id)transitionContextToShowSpotlight:(BOOL)arg1 fromTodayView:(BOOL)arg2 animated:(BOOL)arg3 interactive:(BOOL)arg4;
- (void)rootFolderController:(id)arg1 transitionDidFinish:(id)arg2;
- (void)rootFolderController:(id)arg1 transitionWillFinish:(id)arg2;
- (void)rootFolderController:(id)arg1 transitionWillReverse:(id)arg2;
- (void)rootFolderController:(id)arg1 transitionWillBegin:(id)arg2;
- (id)rootFolderController:(id)arg1 transitionContextForTransitioningToState:(long long)arg2 animated:(BOOL)arg3 interactive:(BOOL)arg4;
- (void)rootFolderPageStateProvider:(id)arg1 didEndTransitionFromState:(long long)arg2 toState:(long long)arg3 successfully:(BOOL)arg4;
- (void)rootFolderPageStateProvider:(id)arg1 willEndTransitionToState:(long long)arg2 successfully:(BOOL)arg3;
- (void)rootFolderPageStateProvider:(id)arg1 didContinueTransitionToState:(long long)arg2 progress:(double)arg3;
- (void)rootFolderPageStateProvider:(id)arg1 willBeginTransitionToState:(long long)arg2 animated:(BOOL)arg3 interactive:(BOOL)arg4;
- (void)iconManager:(id)arg1 rootFolderController:(id)arg2 didEndOverscrollOnFirstPageWithVelocity:(double)arg3;
- (void)iconManager:(id)arg1 rootFolderController:(id)arg2 didOverscrollOnFirstPageByAmount:(double)arg3;
- (id)_todayOverlayControllerIfNeeded;
- (void)iconManager:(id)arg1 rootFolderController:(id)arg2 didChangeEffectiveSidebarVisibilityProgress:(double)arg3;
- (void)iconManager:(id)arg1 rootFolderController:(id)arg2 didChangeSidebarVisibilityProgress:(double)arg3;
- (BOOL)isIconContentPossiblyVisibleOverApplicationForIconManager:(id)arg1;
- (BOOL)iconManager:(id)arg1 folderController:(id)arg2 canChangeCurrentPageIndexToIndex:(long long)arg3;
- (void)iconManager:(id)arg1 statusBarInsetsDidChange:(UIEdgeInsets)arg2;
- (BOOL)iconManagerCanUseSeparateWindowForRotation:(id)arg1;
- (id)iconManager:(id)arg1 backgroundViewForEditingDoneButtonForRootFolderController:(id)arg2;
- (id)iconManager:(id)arg1 backgroundViewForDockForRootFolderController:(id)arg2;
- (double)distanceToTopOfSpotlightIconsForIconManager:(id)arg1;
- (void)iconManager:(id)arg1 wantsToAdjustTodayContentForEdgeBounceForScrollOffset:(CGPoint)arg2;
- (void)iconManager:(id)arg1 willCloseFolderController:(id)arg2;
- (void)iconManager:(id)arg1 willOpenFolderController:(id)arg2;
- (UIEdgeInsets)contentOverlayInsetsFromParentIfAvailableForFolderController:(id)arg1;
- (void)folderController:(id)arg1 iconListView:(id)arg2 springLoadedInteractionForIconDragDidCompleteOnIconView:(id)arg3;
- (double)iconManager:(id)arg1 minimumHomeScreenScaleForFolderController:(id)arg2;
- (void)iconManager:(id)arg1 folderControllerDidEndScrolling:(id)arg2;
- (void)iconManager:(id)arg1 folderControllerWillBeginScrolling:(id)arg2;
- (id)animator:(id)arg1 animationSettingsForOperation:(NSUInteger)arg2 childViewController:(id)arg3;
- (void)applicationRestrictionController:(id)arg1 didUpdateVisibleTags:(id)arg2 hiddenTags:(id)arg3;
- (void)profileConnectionDidReceiveProfileListChangedNotification:(id)arg1 userInfo:(id)arg2;
- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(id)arg1 userInfo:(id)arg2;
- (id)iconManager:(id)arg1 defaultAutomaticFavoriteIconIdentifiersWithMaximumCount:(NSUInteger)arg2;
- (id)firstPageLeafIdentifiersForIconManager:(id)arg1;
- (id)defaultIconStateForIconManager:(id)arg1;
- (id)placeholdersByDisplayIDForIconModel:(id)arg1;
- (id)iconModel:(id)arg1 applicationWithBundleIdentifier:(id)arg2;
@property(readonly, copy, nonatomic) NSArray *allApplications;
- (void)observer:(id)arg1 noteServerConnectionStateChanged:(BOOL)arg2;
- (void)observer:(id)arg1 updateSectionInfo:(id)arg2;
- (void)_updateEnabledBadgesSetWithSections:(id)arg1;
- (BOOL)_badgesAreEnabledForSectionInfo:(id)arg1;
- (BOOL)importIconState:(id)arg1;
@property(retain, nonatomic) SBIconModel *model;
- (void)_selectIconModel:(BOOL)arg1;
- (void)_backupRestoringDidChange:(id)arg1;
- (void)_mutateIconListsForInstalledAppsDidChangeWithController:(id)arg1 added:(id)arg2 modified:(id)arg3 removed:(id)arg4;
- (void)_installedAppsDidChange:(id)arg1;
- (void)_controlCenterWillDismiss:(id)arg1;
- (void)_controlCenterWillPresent:(id)arg1;
- (void)_coverSheetDidPresent:(id)arg1;
- (void)_coverSheetWillPresent:(id)arg1;
- (void)_updateVisibleIconsAfterOcclusionChange;
- (void)removeIconOcclusionReason:(NSUInteger)arg1 updateVisibleIcons:(BOOL)arg2;
- (void)addIconOcclusionReason:(NSUInteger)arg1 updateVisibleIcons:(BOOL)arg2;
- (BOOL)areHomeScreenIconsOccluded;
- (CGSize)_suggestedTodayViewSizeForBounds:(CGRect)arg1;
- (CGSize)widgetGroupViewController:(id)arg1 sizeForInterfaceOrientation:(long long)arg2;
- (void)widgetGroupViewControllerDidChangeHeaderVisibility:(id)arg1;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic, getter=isSidebarPinned) BOOL sidebarPinned;
@property(readonly, nonatomic, getter=isShowingSidebar) BOOL showingSidebar;
@property(readonly, nonatomic, getter=isShowingTodayOverlay) BOOL showingTodayOverlay;
- (void)completeSidebarAnimationsIfNeeded;
- (void)dismissTodayOverlay;
@property(readonly, nonatomic) SBHIconImageCache *notificationIconImageCache;
@property(readonly, nonatomic) SBHIconImageCache *tableUIIconImageCache;
@property(readonly, nonatomic) SBHIconImageCache *appSwitcherHeaderIconImageCache;
@property(readonly, nonatomic) SBHIconImageCache *appSwitcherUnmaskedIconImageCache;
- (BOOL)resetHomeScreenLayout;
- (double)minimumHomeScreenScale;
- (BOOL)allowsBadgingForIcon:(id)arg1;
- (id)launchActivationSettingsForIconView:(id)arg1;
- (id)containerViewForPresentingContextMenuForIconView:(id)arg1;
- (id)launchURLForIconView:(id)arg1;
- (id)launchActionsForIconView:(id)arg1;
@property(readonly, nonatomic) id <SBIconAnimationContaining> currentAnimationContainer;
- (void)noteFloatingDockWillAnimateChangeInHeight;
- (void)noteFloatingDockWillChangeHeight;
- (NSUInteger)_foldersInList:(id)arg1;
- (void)_updateUninstallingSystemAppsRestricted;
- (void)_storeAccountDidChange:(id)arg1;
- (void)_primaryAppleAcountDidChange:(id)arg1;
@property(readonly, nonatomic) SBMainDisplayPolicyAggregator *policyAggregator;
- (id)_policyAggregator;
- (void)_lockScreenUIWillLock:(id)arg1;
@property(readonly, copy, nonatomic) NSSet *visibleIconStateDisplayIdentifiers;
- (BOOL)_shouldRespondToIconCloseBoxes;
- (void)_updateVisibleIconsViewsForAllowableCloseBoxes;
@property(readonly, nonatomic) BOOL iconsShouldAllowCloseBoxes;
- (void)noteViewUncovered;
- (void)noteViewCovered;
- (void)noteTransientOverlayPresented;
- (void)_launchFromIconView:(id)arg1;
- (void)updateNumberOfRowsWithDuration:(double)arg1;
- (BOOL)isUninstallSupportedForIcon:(id)arg1;
- (BOOL)allowsUninstall;
- (void)_enqueueTransitionName:(id)arg1 withHandler:(id /* CDUnknownBlockType */)arg2;
- (void)viewWillTransitionToSize:(CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)handleHomeButtonTap;
- (void)_showInfoAlertIfNeeded:(BOOL)arg1;
- (void)_iconVisibilityChanged:(id)arg1;
- (void)_ensureRootFolderController;
- (id)iconPathForIconWithDisplayID:(id)arg1;
- (id)folderNameForDisplayID:(id)arg1;
@property(readonly, nonatomic, getter=_currentFolderController) SBFolderController *currentFolderController;
@property(readonly, nonatomic, getter=_openFolderController) SBFolderController *openFolderController;
@property(readonly, nonatomic, getter=_rootFolderController) SBRootFolderController *rootFolderController;
@property(readonly, nonatomic) SBRootFolder *rootFolder;
- (void)_endDisablingAllOrientationChangesForReason:(id)arg1;
- (void)_beginDisablingAllOrientationChangesForReason:(id)arg1;
@property(readonly, nonatomic) NSUInteger allowedInterfaceOrientations;
- (long long)orientation;
- (long long)_effectiveOrientation;
- (BOOL)shouldAutorotate;
- (NSUInteger)supportedInterfaceOrientations;
- (void)_performInitialLayoutWithOrientation:(long long)arg1;
- (void)updateContentViewOrientationAndLayoutIfNeeded;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewWillLayoutSubviews;
@property(readonly, nonatomic) SBIconContentView *contentView;
- (void)loadView;
@property(readonly, nonatomic) SBAssistantController *assistantController;
@property(readonly, nonatomic) SBAlertItemsController *alertItemsController;
- (id)userInterfaceControllerIfExists;
@property(readonly, nonatomic) SBUIController *userInterfaceController;
@property(readonly, nonatomic) SBApplicationPlaceholderController *applicationPlaceholderController;
@property(readonly, nonatomic) SBApplicationController *applicationController;
- (void)dealloc;
@property(readonly, nonatomic) SBIconDragManager *iconDragManager;
- (id)initWithApplicationController:(id)arg1 applicationPlaceholderController:(id)arg2 userInterfaceController:(id)arg3 policyAggregator:(id)arg4 alertItemsController:(id)arg5 assistantController:(id)arg6;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)_failCurrentTestWithMessage:(id)arg1;
- (void)_runAppIconForceTouchTest:(id)arg1 withOptions:(id)arg2;
- (void)_runScrollFolderTest:(long long)arg1;
- (void)_runFolderTestWithName:(id)arg1 actions:(id /* CDUnknownBlockType */)arg2;
- (void)_runFolderCloseTest;
- (void)_runFolderOpenTest;
- (void)_runTest:(id /* CDUnknownBlockType */)arg1 afterMovingIconsIntoFolder:(id)arg2 withFolderOpen:(BOOL)arg3;
- (void)_ppt_restoreHomescreenState:(id)arg1;
- (id)_ppt_currentHomescreenState;
- (id)_createTestFolderWithOverrideIconList:(id)arg1;
- (id)_createTestFolder;

@end

