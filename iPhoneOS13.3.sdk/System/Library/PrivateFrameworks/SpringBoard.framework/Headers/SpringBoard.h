//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UISystemShellApplication.h>

#import <SpringBoard/CCUIPPTHostDelegate-Protocol.h>
#import <SpringBoard/MCProfileConnectionObserver-Protocol.h>
#import <SpringBoard/RSPeerToPeerConnectionControllerDataSource-Protocol.h>
#import <SpringBoard/SBAVSystemControllerCacheObserver-Protocol.h>
#import <SpringBoard/SBBacklightControllerObserver-Protocol.h>
#import <SpringBoard/SBIdleTimerProviding-Protocol.h>
#import <SpringBoard/SBInteractiveScreenshotGestureManagerDelegate-Protocol.h>
#import <SpringBoard/SBModalAlertPresentationCoordinatorDelegate-Protocol.h>
#import <SpringBoard/SBRemoteTransientOverlaySessionManagerDelegate-Protocol.h>
#import <SpringBoard/SBRestartManagerDelegate-Protocol.h>
#import <SpringBoard/SBSpotlightTransientOverlayViewControllerDelegate-Protocol.h>
#import <SpringBoard/SSScreenCapturerDelegate-Protocol.h>
#import <SpringBoard/_UIApplicationInitializationContextFactory-Protocol.h>

@class DNDAWDMetricsService, DNDNotificationsService, NSArray, NSCountedSet, NSDate, NSHashTable, NSMutableArray, NSMutableSet, NSNumberFormatter, NSObject, NSSet, NSString, NSTimer, RSPeerToPeerServerController, SBAccountStoreManager, SBAppStatusBarSettingsAssertion, SBAppSwitcherSystemService, SBApplication, SBApplicationAutoLaunchService, SBApplicationLaunchAlertService, SBBluetoothAccessoryBatteryMonitor, SBCameraHardwareButton, SBCarDoNotDisturbController, SBCardItemsController, SBCombinationHardwareButton, SBDeveloperBuildExpirationTrigger, SBDeviceOrientationUpdateManager, SBExternalDisplayManager, SBFUserAuthenticationController, SBHomeHardwareButton, SBHomeScreenService, SBIdleTimerPolicyAggregator, SBInteractiveScreenshotGestureManager, SBLockHardwareButton, SBLockScreenService, SBMainDisplayInterfaceOrientationAggregator, SBMainWorkspace, SBModalAlertPresentationCoordinator, SBModalAlertPresenter, SBModalUIFluidDismissGestureManager, SBNCNotificationDispatcher, SBPressPrecedenceArbiter, SBProximitySensorManager, SBRemoteAlertHandleServer, SBRemoteTransientOverlaySessionManager, SBRestartManager, SBSStatusBarStyleOverridesAssertion, SBScreenTimeTrackingController, SBScreenshotManager, SBSoftwareUpdatePasscodePolicyManager, SBSpotlightTransientOverlayViewController, SBSpuriousScreenUndimmingAssertion, SBStateDumpService, SBSynchronizeCloudCriticalDataOperation, SBTestAutomationService, SBUIController, SBUserAgent, SBUserSessionController, SBVolumeHardwareButton, SBWidgetController, SSScreenCapturer, STStatusServer, STTelephonyStateProvider;
@protocol BSInvalidatable, OS_dispatch_source, SBFLockOutStatusProvider, SBIdleTimer, SBProximityBacklightPolicy, SBUIUserAgent;

@interface SpringBoard : UISystemShellApplication <CCUIPPTHostDelegate, MCProfileConnectionObserver, RSPeerToPeerConnectionControllerDataSource, SBRestartManagerDelegate, SBModalAlertPresentationCoordinatorDelegate, UIStatusBarStyleDelegate_SpringBoardOnly, SSScreenCapturerDelegate, SBBacklightControllerObserver, SBInteractiveScreenshotGestureManagerDelegate, SBRemoteTransientOverlaySessionManagerDelegate, SBSpotlightTransientOverlayViewControllerDelegate, _UIApplicationInitializationContextFactory, SBAVSystemControllerCacheObserver, UIApplicationDelegate, SBIdleTimerProviding>
{
    SBUIController *_uiController;
    double _headsetButtonDownTime;
    struct __IOHIDEvent _headsetDownEvent;
    int _headsetClickCount;
    int _ringerSwitchState;
    unsigned int _headsetButtonClickCount:8;
    unsigned int _menuButtonClickCount:8;
    unsigned int _screenWasDimOnMenuDown:1;
    unsigned int _screenshotWasTaken:1;
    unsigned int _headsetDownDelayedActionPerformed:1;
    unsigned int _isSeekingInMedia:1;
    unsigned int _ignoringCurrentLockButtonPress:1;
    int _mediaSeekDirection;
    unsigned int _springBoardRequestsAccelerometerEvents;
    long long _activeInterfaceOrientation;
    NSMutableSet *_activeInterfaceOrientationObservers;
    NSMutableArray *_activeInterfaceOrientationOverrideStack;
    BOOL _wantsOrientationEvents;
    int _notifyDontAnimateREOToken;
    int _notifyDontAllowMediaHUDToken;
    BOOL _expectsFaceContact;
    BOOL _expectsFaceContactInLandscape;
    BOOL _smartCoverClosed;
    BOOL _keybagRefetchTransactionIsActive;
    BOOL _menuButtonDown;
    NSSet *_restrictionDisabledApplications;
    SBApplication *_nowRecordingApp;
    SBApplication *_inCallApp;
    SBApplication *_menuButtonInterceptApp;
    BOOL _menuButtonInterceptAppEnabledForever;
    NSMutableArray *_appsRegisteredForVolumeEvents;
    NSMutableArray *_appsRegisteredForLockButtonEvents;
    SBApplication *_lastLockButtonEventRecipient;
    NSNumberFormatter *_decimalFormatter;
    NSNumberFormatter *_percentFormatter;
    NSTimer *_midnightTimer;
    NSDate *_midnightFireDate;
    NSObject<OS_dispatch_source> *_memoryPressureSource;
    unsigned int _memoryPressureStatus;
    NSMutableArray *_blocksAwaitingAvailableMemory;
    SBCardItemsController *_cardItemsController;
    SBNCNotificationDispatcher *_notificationDispatcher;
    struct __CFBoolean _shouldDelaySleepForHeadsetClick;
    BOOL _didPlayLockSound;
    SBUserSessionController *_userSessionController;
    id <SBFLockOutStatusProvider> _lockOutController;
    SBFUserAuthenticationController *_authenticationController;
    NSHashTable *_disableActiveOrientationChangeAssertions;
    NSCountedSet *_ignoringInteractionEventsReasons;
    BOOL _hasFinishedLaunching;
    SBAppStatusBarSettingsAssertion *_hideStatusBarAssertion;
    SBAppStatusBarSettingsAssertion *_showStatusBarAssertion;
    SBSStatusBarStyleOverridesAssertion *_recordingStatusBarStyleOverrideAssertion;
    BOOL _atHomescreen;
    NSString *_logFile;
    SBBluetoothAccessoryBatteryMonitor *_bluetoothBatteryMonitor;
    SBDeveloperBuildExpirationTrigger *_developerBuildExpirationTrigger;
    SBScreenshotManager *_screenshotManager;
    SSScreenCapturer *_screenCapturer;
    SBSynchronizeCloudCriticalDataOperation *_synchronizeCloudCriticalDataOperation;
    SBRestartManager *_restartManager;
    struct __GSEvent _pendingDeviceOrientationChangeEventDuringStartupTransition;
    SBModalAlertPresenter *_systemModalAlertPresenter;
    SBModalAlertPresentationCoordinator *_modalAlertPresentationCoordinator;
    SBMainDisplayInterfaceOrientationAggregator *_orientationAggregator;
    SBDeviceOrientationUpdateManager *_deviceOrientationManager;
    BOOL _inUserTransition;
    BOOL _determiningBootTransition;
    BOOL _dontLockEver;
    SBIdleTimerPolicyAggregator *_idleTimerPolicyAggregator;
    id <SBIdleTimer> _idleTimer;
    SBPressPrecedenceArbiter *_pressPrecedenceArbiter;
    SBApplicationAutoLaunchService *_applicationAutoLaunchService;
    SBApplicationLaunchAlertService *_applicationLaunchAlertService;
    SBMainWorkspace *_mainWorkspace;
    SBModalUIFluidDismissGestureManager *_modalUIFluidDismissGestureManager;
    long long _lastUpdatedMirroredDisplayOrientation;
    long long _mainTransientOverlayPresentationManagerInterfaceOrientation;
    SBCarDoNotDisturbController *_carDoNotDisturbController;
    SBScreenTimeTrackingController *_screenTimeTrackingController;
    SBProximitySensorManager *_proximitySensorManager;
    id <SBProximityBacklightPolicy> _proximityBacklightPolicy;
    SBExternalDisplayManager *_externalDisplayManager;
    SBUserAgent *_pluginUserAgent;
    SBSpuriousScreenUndimmingAssertion *_preventPowerSourceAlertsDarkBootAssertion;
    id <BSInvalidatable> _deferOrientationUpdatesForKeybagAssertion;
    SBLockScreenService *_lockScreenService;
    SBHomeScreenService *_homeScreenService;
    SBAppSwitcherSystemService *_appSwitcherSystemService;
    long long _lastSeekRequestSource;
    DNDAWDMetricsService *_dndAWDMetricsService;
    DNDNotificationsService *_dndNotificationsService;
    SBRemoteAlertHandleServer *_remoteAlertHandleServer;
    SBTestAutomationService *_testAutomationService;
    SBStateDumpService *_stateDumpService;
    NSUInteger _stateDumpServiceRevision;
    int _currentOverrides;
    SBSpotlightTransientOverlayViewController *_spotlightTransientOverlayViewController;
    NSHashTable *_activeRemoteTransientOverlayViewProviders;
    id /* CDUnknownBlockType */ _headsetButtonUpHandler;
    BOOL _requestingStatusBarStyleWithoutConsideringAlerts;
    BOOL _typingActive;
    BOOL _batterySaverModeActive;
    int _nowPlayingProcessPID;
    NSMutableArray *_nowLocatingApps;
    SBWidgetController *_widgetController;
    double _bottomEdgeAmbiguousActivationMargin;
    SBHomeHardwareButton *_homeHardwareButton;
    SBLockHardwareButton *_lockHardwareButton;
    SBVolumeHardwareButton *_volumeHardwareButton;
    SBCameraHardwareButton *_cameraHardwareButton;
    SBAccountStoreManager *_accountStoreController;
    SBInteractiveScreenshotGestureManager *_interactiveScreenshotGestureManager;
    SBSoftwareUpdatePasscodePolicyManager *_softwareUpdatePasscodePolicyManager;
    STStatusServer *_systemStatusServer;
    STTelephonyStateProvider *_telephonyStateProvider;
    SBRemoteTransientOverlaySessionManager *_remoteTransientOverlaySessionManager;
    NSTimer *_daylightSavingsTimer;
    SBCombinationHardwareButton *_combinationHardwareButton;
    RSPeerToPeerServerController *_stateDumpServerController;
}

+ (id)_newApplicationInitializationContext;
+ (id)_defaultSceneIdentity;
+ (void)initializeSystemServicesBeforeApplicationDidFinishLaunching;
@property(retain, nonatomic) RSPeerToPeerServerController *stateDumpServerController; // @synthesize stateDumpServerController=_stateDumpServerController;
@property(readonly, nonatomic) SBCombinationHardwareButton *combinationHardwareButton; // @synthesize combinationHardwareButton=_combinationHardwareButton;
@property(retain, nonatomic) NSTimer *daylightSavingsTimer; // @synthesize daylightSavingsTimer=_daylightSavingsTimer;
@property(nonatomic, getter=isBatterySaverModeActive) BOOL batterySaverModeActive; // @synthesize batterySaverModeActive=_batterySaverModeActive;
@property(nonatomic) int nowPlayingProcessPID; // @synthesize nowPlayingProcessPID=_nowPlayingProcessPID;
@property(readonly, nonatomic) SBRemoteTransientOverlaySessionManager *remoteTransientOverlaySessionManager; // @synthesize remoteTransientOverlaySessionManager=_remoteTransientOverlaySessionManager;
@property(readonly, nonatomic) int ringerSwitchState; // @synthesize ringerSwitchState=_ringerSwitchState;
@property(readonly, nonatomic) STTelephonyStateProvider *telephonyStateProvider; // @synthesize telephonyStateProvider=_telephonyStateProvider;
@property(readonly, nonatomic) STStatusServer *systemStatusServer; // @synthesize systemStatusServer=_systemStatusServer;
@property(readonly, nonatomic) SBSoftwareUpdatePasscodePolicyManager *softwareUpdatePasscodePolicyManager; // @synthesize softwareUpdatePasscodePolicyManager=_softwareUpdatePasscodePolicyManager;
@property(readonly, nonatomic) SBInteractiveScreenshotGestureManager *interactiveScreenshotGestureManager; // @synthesize interactiveScreenshotGestureManager=_interactiveScreenshotGestureManager;
@property(readonly, nonatomic) SBAccountStoreManager *accountStoreController; // @synthesize accountStoreController=_accountStoreController;
@property(readonly, nonatomic) SBNCNotificationDispatcher *notificationDispatcher; // @synthesize notificationDispatcher=_notificationDispatcher;
@property(readonly, nonatomic) SBFUserAuthenticationController *authenticationController; // @synthesize authenticationController=_authenticationController;
@property(readonly, nonatomic) id <SBFLockOutStatusProvider> lockOutController; // @synthesize lockOutController=_lockOutController;
@property(readonly, nonatomic) SBCameraHardwareButton *cameraHardwareButton; // @synthesize cameraHardwareButton=_cameraHardwareButton;
@property(readonly, nonatomic) SBVolumeHardwareButton *volumeHardwareButton; // @synthesize volumeHardwareButton=_volumeHardwareButton;
@property(readonly, nonatomic) SBLockHardwareButton *lockHardwareButton; // @synthesize lockHardwareButton=_lockHardwareButton;
@property(readonly, nonatomic) SBHomeHardwareButton *homeHardwareButton; // @synthesize homeHardwareButton=_homeHardwareButton;
@property(nonatomic) double bottomEdgeAmbiguousActivationMargin; // @synthesize bottomEdgeAmbiguousActivationMargin=_bottomEdgeAmbiguousActivationMargin;
@property(nonatomic, getter=isTypingActive) BOOL typingActive; // @synthesize typingActive=_typingActive;
@property(readonly, nonatomic) id <SBUIUserAgent> pluginUserAgent; // @synthesize pluginUserAgent=_pluginUserAgent;
@property(readonly, nonatomic) SBProximitySensorManager *proximitySensorManager; // @synthesize proximitySensorManager=_proximitySensorManager;
@property(readonly, nonatomic) SBApplicationLaunchAlertService *applicationLaunchAlertService; // @synthesize applicationLaunchAlertService=_applicationLaunchAlertService;
@property(readonly, nonatomic) SBApplicationAutoLaunchService *applicationAutoLaunchService; // @synthesize applicationAutoLaunchService=_applicationAutoLaunchService;
@property(readonly, nonatomic) SBLockScreenService *lockScreenService; // @synthesize lockScreenService=_lockScreenService;
@property(readonly, nonatomic) SBModalAlertPresentationCoordinator *modalAlertPresentationCoordinator; // @synthesize modalAlertPresentationCoordinator=_modalAlertPresentationCoordinator;
@property(readonly, nonatomic) SBRestartManager *restartManager; // @synthesize restartManager=_restartManager;
@property(readonly, nonatomic) SBUserSessionController *userSessionController; // @synthesize userSessionController=_userSessionController;
@property(readonly, nonatomic) SBScreenshotManager *screenshotManager; // @synthesize screenshotManager=_screenshotManager;
@property(retain, nonatomic) NSMutableArray *nowLocatingApps; // @synthesize nowLocatingApps=_nowLocatingApps;
@property(readonly, nonatomic) SBIdleTimerPolicyAggregator *idleTimerPolicyAggregator; // @synthesize idleTimerPolicyAggregator=_idleTimerPolicyAggregator;
@property(retain, nonatomic, setter=_setIdleTimer:) id <SBIdleTimer> idleTimer; // @synthesize idleTimer=_idleTimer;
// - (void).cxx_destruct;
- (void)cache:(id)arg1 didUpdateActiveAudioRoute:(id)arg2;
- (void)cache:(id)arg1 didUpdateRecordingPID:(int)arg2;
- (void)interactiveScreenshotGestureManager:(id)arg1 requestsScreenshotWithOptionsCollection:(id)arg2 presentationOptions:(id)arg3;
- (void)interactiveScreenshotGestureManager:(id)arg1 requestsScreenshotPreheatWithPresentationOptions:(id)arg2;
- (void)backlightController:(id)arg1 willAnimateBacklightToFactor:(float)arg2 source:(long long)arg3;
- (long long)_classicMode;
- (id)coordinatorRequestedIdleTimerBehavior:(id)arg1;
- (id)_dumpStateCaptureData;
- (void)stateForStateType:(NSUInteger)arg1 withCompletionHandler:(id /* CDUnknownBlockType */)arg2;
- (id)allowedRemotePeerDisplayNames;
- (id)localPeerDisplayName;
- (id)supportedStateTypes;
- (void)_broadcastStateCaptureToConnectedRemotePeers:(id)arg1;
- (BOOL)_isRemoteStateDumpEnabled;
- (void)_disableRemoteStateDumpWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)_enableRemoteStateDumpWithTimeout:(long long)arg1 withCompletion:(id /* CDUnknownBlockType */)arg2;
- (void)_dumpLoggingStateCaptureWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)_takeScreenshotWithOptionsCollection:(id)arg1 presentationOptions:(id)arg2;
- (void)_takeScreenshotAndEdit:(BOOL)arg1;
- (void)takeScreenshot;
- (void)_preheatScreenshotsWithPresentationOptions:(id)arg1;
- (void)screenCapturer:(id)arg1 didCaptureScreenshotsOfScreens:(id)arg2;
- (void)_batterySaverModeChanged:(int)arg1;
- (BOOL)hasDisableActiveInterfaceOrientationChangeAssertions;
- (void)removeDisableActiveInterfaceOrientationChangeAssertion:(id)arg1 nudgeOrientationIfRemovingLast:(BOOL)arg2;
- (void)addDisableActiveInterfaceOrientationChangeAssertion:(id)arg1;
- (void)noteKeybagRefetchTransactionIsActive:(BOOL)arg1;
- (BOOL)isKeybagRefetchTransactionActive;
- (BOOL)underMemoryPressure;
- (void)_setStatusBarShowsProgress:(BOOL)arg1;
- (void)_accessibilityDeactivationAnimationWillBegin;
- (double)_accessibilityDeactivationAnimationStartDelay;
- (void)_accessibilityActivationAnimationWillBegin;
- (double)_accessibilityActivationAnimationStartDelay;
- (void)_accessibilitySetSystemGesturesDisabledByAccessibility:(BOOL)arg1;
- (BOOL)_accessibilitySystemGesturesDisabledByAccessibility;
- (BOOL)_accessibilityShouldAllowIconLaunch;
- (BOOL)_accessibilityShouldAllowAppLaunch;
- (id)_accessibilityRunningApplications;
- (id)_accessibilityTopDisplay;
- (id)_accessibilityFrontMostApplication;
- (id)formattedPercentStringForNumber:(id)arg1;
- (id)formattedDecimalStringForNumber:(id)arg1;
- (void)_deactivateReachability;
- (void)_setReachabilitySupported:(BOOL)arg1;
- (void)setSuspensionAnimationDelay:(double)arg1;
- (BOOL)_hasForegroundAppWithPID:(int)arg1;
- (void)setNowPlayingInfo:(id)arg1 forProcessWithPID:(int)arg2;
- (BOOL)isNowPlayingAppPlaying;
@property(readonly, nonatomic) SBApplication *leastRecentlyForegroundLocatingApp;
- (void)nowLocatingAppDidEnterForeground:(id)arg1;
- (void)removeNowLocatingApp:(id)arg1;
- (void)addNowLocatingApp:(id)arg1;
- (void)removeInCallApp;
- (void)addInCallApp:(id)arg1;
- (id)inCallApp;
- (id)nowRecordingApp;
- (void)_nowPlayingAppDidChangeNotification:(id)arg1;
- (void)endIgnoringInteractionEventsForReason:(id)arg1;
- (void)endIgnoringInteractionEvents;
- (void)beginIgnoringInteractionEventsForReason:(id)arg1;
- (void)beginIgnoringInteractionEvents;
- (BOOL)hasFinishedLaunching;
- (BOOL)launchApplicationWithIdentifier:(id)arg1 suspended:(BOOL)arg2;
- (void)launchMusicPlayerSuspended;
- (long long)alertInterfaceOrientation;
- (BOOL)isLocked;
- (void)didDismissMiniAlert;
- (void)willDisplayMiniAlert;
- (void)frontDisplayDidChange:(id)arg1;
- (void)noteSceneLayoutDidUpdateOnDisplayWithIdentity:(id)arg1;
- (void)noteSubstantialTransitionOccured;
- (void)_setAmbiguousControlCenterActivationMargin:(double)arg1;
- (void)_updateOrientationDetectionSettings;
- (void)setExpectsFaceContact:(BOOL)arg1;
- (void)setExpectsFaceContact:(BOOL)arg1 inLandscape:(BOOL)arg2;
- (BOOL)expectsFaceContactInLandscape;
- (BOOL)expectsFaceContact;
- (void)setSystemVolumeHUDEnabled:(BOOL)arg1 forAudioCategory:(id)arg2;
- (double)windowRotationDuration;
- (BOOL)homeScreenSupportsRotation;
- (BOOL)homeScreenRotationStyleWantsUIKitRotation;
- (long long)homeScreenRotationStyle;
- (long long)deviceOrientationForDeferredUpdateIfAny;
- (long long)rawDeviceOrientationIgnoringOrientationLocks;
- (long long)interfaceOrientationForCurrentDeviceOrientation:(BOOL)arg1;
- (long long)_currentNonFlatDeviceOrientation;
- (BOOL)supportsPortraitUpsideDownOrientation;
- (void)_postActiveInterfaceOrientationChangedNotificationAnimated:(BOOL)arg1;
- (void)updateNativeOrientationWithOrientation:(long long)arg1 updateMirroredDisplays:(BOOL)arg2 animated:(BOOL)arg3 logMessage:(id)arg4;
- (void)updateNativeOrientationWithOrientation:(long long)arg1 logMessage:(id)arg2;
- (void)updateNativeOrientationAndMirroredDisplays:(BOOL)arg1 logMessage:(id)arg2;
- (void)updateNativeOrientationAnimated:(BOOL)arg1 logMessage:(id)arg2;
- (void)updateNativeOrientationWithLogMessage:(id)arg1;
- (void)setWantsOrientationEvents:(BOOL)arg1 logMessage:(id)arg2;
@property(readonly, nonatomic) BOOL wantsOrientationEvents;
- (BOOL)_statusBarOrientationFollowsWindow:(id)arg1;
@property(readonly, nonatomic) SBMainDisplayInterfaceOrientationAggregator *orientationAggregator;
- (long long)_frontMostAppOrientation;
- (void)_removeTransientActiveInterfaceOrientationOverrideForReason:(id)arg1;
- (void)popTransientActiveInterfaceOrientationForReason:(id)arg1;
- (void)pushTransientActiveInterfaceOrientation:(long long)arg1 forReason:(id)arg2;
- (long long)activeInterfaceOrientationWithoutConsideringTransientOverlays;
- (long long)activeInterfaceOrientation;
- (id)deviceOrientationUpdateDeferralAssertionWithReason:(id)arg1;
- (BOOL)isCurrentlyDeferringOrientationUpdates;
- (void)removeActiveOrientationObserver:(id)arg1;
- (void)addActiveOrientationObserver:(id)arg1;
- (void)noteMainTransientOverlayPresentationManagerWillChangeToInterfaceOrientation:(long long)arg1;
- (void)noteInterfaceOrientationChanged:(long long)arg1 duration:(double)arg2 updateMirroredDisplays:(BOOL)arg3 force:(BOOL)arg4 logMessage:(id)arg5;
- (void)noteInterfaceOrientationChanged:(long long)arg1 duration:(double)arg2 updateMirroredDisplays:(BOOL)arg3 logMessage:(id)arg4;
- (void)noteInterfaceOrientationChanged:(long long)arg1 duration:(double)arg2 logMessage:(id)arg3;
- (void)noteInterfaceOrientationChanged:(long long)arg1 force:(BOOL)arg2 logMessage:(id)arg3;
- (void)noteInterfaceOrientationChanged:(long long)arg1 logMessage:(id)arg2;
- (void)_setDeviceOrientation:(long long)arg1 animated:(BOOL)arg2 logMessage:(id)arg3;
- (void)_setStatusBarOrientation:(long long)arg1 animated:(BOOL)arg2 logMessage:(id)arg3;
- (void)_setStatusBarOrientation:(long long)arg1 logMessage:(id)arg2;
- (void)updateMirroredDisplayOrientationWithLogMessage:(id)arg1;
- (void)_handleDeviceOrientationChangedEvent:(struct __GSEvent )arg1;
- (void)didReceiveMemoryWarning;
- (void)_application:(id)arg1 statusBarTouchesEnded:(id)arg2;
- (void)_caseLatchWantsToAttemptLock;
- (void)noteCaseHardwarePresent;
- (void)_keyboardOrCaseLatchWantsToAttemptUnlock:(int)arg1;
- (BOOL)allowCaseLatchLockAndUnlock;
- (BOOL)caseIsEnabledAndLatched;
- (BOOL)smartCoverIsClosed;
- (void)_enqueueWorkspaceEvent:(id /* CDUnknownBlockType */)arg1 withName:(id)arg2 ifSatisfiesCondition:(id /* CDUnknownBlockType */)arg3 cancelingEventsWithNames:(id)arg4 failureBlock:(id /* CDUnknownBlockType */)arg5;
- (void)_smartCoverDidClose:(struct __IOHIDEvent )arg1;
- (void)_smartCoverMightHaveOpened:(struct __IOHIDEvent )arg1;
- (void)_smartCoverDidOpen:(struct __IOHIDEvent )arg1;
- (void)resetIdleTimerAndUndim;
- (void)handleLockButtonPressFromTransientOverlayViewController:(id)arg1;
- (void)noteBacklightFadeFinished;
- (void)noteBacklightLevelChanged;
- (void)_adjustSignificantTimersAfterSleep;
- (void)_adjustDaylightSavingsTimerAfterSleep;
- (void)_daylightSavingsTimeChanged;
- (void)setUpDaylightSavingsTimer;
- (void)_adjustMidnightTimerAfterSleep;
- (void)_postSpringBoardSignificantTimeChangedNotificationWithLogMessage:(id)arg1;
- (void)_midnightPassed;
- (void)setupMidnightTimer;
- (BOOL)_handlePhysicalButtonEvent:(id)arg1;
@property(readonly, nonatomic) NSArray *appsRegisteredForLockButtonEvents; // @synthesize appsRegisteredForLockButtonEvents=_appsRegisteredForLockButtonEvents;
- (void)setAppRegisteredForLockButtonEvents:(id)arg1 isActive:(BOOL)arg2;
@property(readonly, nonatomic) NSArray *appsRegisteredForVolumeEvents; // @synthesize appsRegisteredForVolumeEvents=_appsRegisteredForVolumeEvents;
- (void)setAppRegisteredForVolumeEvents:(id)arg1 isActive:(BOOL)arg2;
- (void)setWantsVolumeButtonEvents:(BOOL)arg1;
- (BOOL)menuButtonInterceptAppEnabledForever;
- (id)menuButtonInterceptApp;
- (void)setMenuButtonInterceptApp:(id)arg1 forever:(BOOL)arg2;
- (void)_openURLCore:(id)arg1 display:(id)arg2 animating:(BOOL)arg3 activationSettings:(id)arg4 origin:(id)arg5 withResult:(id /* CDUnknownBlockType */)arg6;
- (void)_applicationOpenURL:(id)arg1 withApplication:(id)arg2 animating:(BOOL)arg3 activationSettings:(id)arg4 origin:(id)arg5 withResult:(id /* CDUnknownBlockType */)arg6;
- (void)applicationOpenURL:(id)arg1 withApplication:(id)arg2 animating:(BOOL)arg3 activationSettings:(id)arg4 origin:(id)arg5 notifyLSOnFailure:(BOOL)arg6 withResult:(id /* CDUnknownBlockType */)arg7;
- (void)applicationOpenURL:(id)arg1;
- (void)showAlertForUnhandledURL:(id)arg1 error:(int)arg2;
- (BOOL)shouldShowAlertForUnhandledURL:(id)arg1 error:(int)arg2;
- (BOOL)canOpenURL:(id)arg1;
- (BOOL)isSpringBoardStatusBarHidden;
- (int)statusBar:(id)arg1 effectiveStyleOverridesForRequestedStyle:(long long)arg2 overrides:(int)arg3;
- (BOOL)handleDoubleHeightStatusBarTapWithStyleOverride:(int)arg1;
- (void)_updateRingerState:(int)arg1 withVisuals:(BOOL)arg2 updatePreferenceRegister:(BOOL)arg3;
- (void)_ringerChanged:(struct __IOHIDEvent )arg1;
- (void)profileConnectionDidReceivePasscodePolicyChangedNotification:(id)arg1 userInfo:(id)arg2;
- (void)localeChanged;
- (void)_localeChanged;
- (BOOL)isBundleIdentifierRestrictionDisabled:(id)arg1;
- (void)_headsetButtonUp:(struct __IOHIDEvent )arg1;
- (void)_headsetButtonDown:(struct __IOHIDEvent )arg1;
- (void)_setDeferredHeadsetButtonDownEvent:(struct __IOHIDEvent )arg1;
- (void)_iapExtendedModeReset;
- (void)_iapServerConnectionDiedNotification:(id)arg1;
- (void)_performDelayedHeadsetClickTimeout;
- (void)remoteTransientOverlaySessionManager:(id)arg1 requestsHandlingForButtonEvents:(NSUInteger)arg2 forSession:(id)arg3 viewController:(id)arg4;
- (BOOL)remoteTransientOverlaySessionManager:(id)arg1 prefersStatusBarActivityItemVisibleForServiceBundleIdentifier:(id)arg2 forSession:(id)arg3;
- (BOOL)remoteTransientOverlaySessionManager:(id)arg1 performPresentationRequest:(id)arg2 forSession:(id)arg3;
- (BOOL)remoteTransientOverlaySessionManager:(id)arg1 performDismissalRequest:(id)arg2 forSession:(id)arg3;
- (BOOL)remoteTransientOverlaySessionManager:(id)arg1 shouldActivateOverlayWithContext:(id)arg2 forSession:(id)arg3;
- (long long)remoteTransientOverlaySessionManager:(id)arg1 activeWallpaperVariantForSession:(id)arg2;
- (void)unregisterRemoteAlertSceneViewProvider:(id)arg1;
- (void)registerRemoteAlertSceneViewProvider:(id)arg1;
- (BOOL)shouldNeverLock;
- (void)_startSeekWithDirection:(id)arg1;
- (void)_keyboardAvailabilityChanged;
- (BOOL)_isDim;
- (id)_keyWindowForScreen:(id)arg1;
- (id)_windowForSystemAppButtonEventsForScreen:(id)arg1;
- (void)_toggleFloatingDockVisibility:(id)arg1;
- (void)_handleCommandQ:(id)arg1;
- (void)_handleScreenShotShortcut:(id)arg1;
- (void)_handleLockShortcut:(id)arg1;
- (void)_handleGotoHomeScreenShortcut:(id)arg1;
- (void)_handleShiftCommandTab:(id)arg1;
- (void)_handleCommandTab:(id)arg1;
- (id)keyCommands;
- (void)_handleHIDEvent:(struct __IOHIDEvent )arg1;
- (void)_logReliabilityInfoForEvent:(struct __IOHIDEvent )arg1;
- (void)_handleKeyUIEvent:(id)arg1;
- (BOOL)__handleHIDEvent:(struct __IOHIDEvent )arg1;
- (void)_handleSnapshotButtonHIDEvent:(struct __IOHIDEvent )arg1 buttonIsDown:(BOOL)arg2 fromSource:(int)arg3;
- (BOOL)canShowLockScreenCameraGrabber;
- (BOOL)lockScreenCameraSupported;
- (BOOL)iapIsInExtendedMode;
- (void)batteryStatusDidChange:(id)arg1;
- (void)significantTimeChange;
- (void)_significantTimeChangeNotificationReceived;
- (void)_significantTimeDidChange:(BOOL)arg1;
- (void)runFieldTestScript;
- (void)_lockdownActivationChanged:(id)arg1;
- (void)wipeDeviceNowWithReason:(id)arg1;
- (void)_rotateView:(id)arg1 toOrientation:(long long)arg2;
- (void)requestDeviceUnlock;
- (void)languageChanged;
- (id)_settingLanguageStringForNewLanguage;
- (BOOL)launchedForUserTransition;
- (void)toggleSearchWithWillBeginHandler:(id /* CDUnknownBlockType */)arg1 completionHandler:(id /* CDUnknownBlockType */)arg2;
- (id)transactionForDismissingSearchTransientOverlay;
- (void)_toggleSearch;
- (void)_updateRecordingPID:(int)arg1;
- (void)_removeRecordingStatusBarStyleOverrideAssertion;
- (void)_registerForAVSystemControllerNotifications;
- (void)_initializeAndStartObservingDefaultsIfNecessary;
- (void)_updateHomeScreenPresenceNotification:(id)arg1;
- (BOOL)isShowingHomescreen;
- (void)registerAnalyticsEventHandlers;
- (void)_waitForCloudCriticalData;
- (void)_initializeDeferredItems;
- (void)applicationDidFinishLaunching:(id)arg1;
- (BOOL)isDeterminingBootTransition;
- (void)_performDeferredLaunchWork;
- (void)_startBulletinBoardServer;
- (id)_defaultExpirationComponents;
- (void)handleKeyHIDEvent:(struct __IOHIDEvent )arg1;
- (BOOL)_shouldSwallowHIDEvent:(struct __IOHIDEvent )arg1;
- (BOOL)application:(id)arg1 handleOpenURL:(id)arg2;
- (void)spotlightTransientOverlayViewControllerDidDismiss:(id)arg1;
- (void)spotlightTransientOverlayViewControllerRequestsDismissal:(id)arg1;
- (void)modalAlertPresentationCoordinator:(id)arg1 didChangeShowingSystemModalAlert:(BOOL)arg2;
- (id)modalAlertPresentationCoordinatorRequestedForegroundScenes:(id)arg1;
- (void)restartManagerExitImminent:(id)arg1;
- (void)restartManager:(id)arg1 willRestartWithTransitionRequest:(id)arg2;
- (void)restartManagerWillReboot:(id)arg1;
- (void)restartManagerWillShutdown:(id)arg1;
- (void)_handleShutDownAndReboot;
- (void)handleSignal:(int)arg1;
@property(readonly, copy) NSString *debugDescription;
- (void)_createInitialAppScene;
- (BOOL)_frontBoardWantsKeyboardSceneLayerOrderedIntoScene;
- (BOOL)disablesFrontBoardImplicitWindowScenes;
- (id)init;
@property(readonly, nonatomic) SBWidgetController *widgetController; // @synthesize widgetController=_widgetController;
- (long long)startupInterfaceOrientation;
- (void)setNextAssistantRecognitionStrings:(id)arg1;
- (id)setNextVoiceRecognitionAudioInputPaths:(id)arg1;
- (void)rotateIfNeeded:(long long)arg1 completion:(id /* CDUnknownBlockType */)arg2;
- (long long)_testOrientation:(id)arg1 options:(id)arg2;
- (void)failedTest:(id)arg1 withResults:(id)arg2;
- (void)finishedTest:(id)arg1 extraResults:(id)arg2 waitForNotification:(id)arg3 withTeardownBlock:(id /* CDUnknownBlockType */)arg4;
- (void)startedTest:(id)arg1;
- (void)_runSpotlightCoverSheetTodayViewRotation;
- (void)_runSpotlightTodayViewRotation;
- (void)_runSpotlightPulldownRotation;
- (void)_performMainWorkspaceTransitionWithPrimaryWorkspaceEntity:(id)arg1 sideWorkspaceEntity:(id)arg2 floatingWorkspaceEntity:(id)arg3 spaceConfiguration:(long long)arg4 floatingConfiguration:(long long)arg5 animated:(BOOL)arg6 completion:(id /* CDUnknownBlockType */)arg7;
- (void)_runScrollTestWithScrollView:(id)arg1 options:(id)arg2 completion:(id /* CDUnknownBlockType */)arg3;
- (void)_runTestWithVariableFinish:(id /* CDUnknownBlockType */)arg1 options:(id)arg2 completion:(id /* CDUnknownBlockType */)arg3;
- (void)_handleApplicationExit:(id)arg1;
- (BOOL)_shouldPendAlertsForTest:(id)arg1;
- (void)_basicRotationTestForCurrentConfigurationWithTeardown:(id /* CDUnknownBlockType */)arg1;
- (void)_rotateFromPortrait:(id /* CDUnknownBlockType */)arg1 toLandscape:(id /* CDUnknownBlockType */)arg2 andFromLandscape:(id /* CDUnknownBlockType */)arg3 andBackToPortrait:(id /* CDUnknownBlockType */)arg4;
- (void)_setupKeyboardAnimationSubTestsForTestName:(id)arg1;
- (id)_applicationToUseForScrollTesting;
- (id)_applicationToUseForOpenAndCloseTesting;
- (id)_dashBoardTodayControllerForTestingIfExists;
- (id)_dashBoardControllerForTesting;
- (void)_activateSafariWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)_returnToHomeScreenWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)_turnScreenOnOnDashBoardWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)_turnScreenOnAndUnlockWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)_simulateHomeButtonPressWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)_simulateHomeButtonPress;
- (void)_simulateLockButtonPress;
- (void)_performAfterDelay:(double)arg1 block:(id /* CDUnknownBlockType */)arg2;
- (void)_runAppOpen:(BOOL)arg1 withCompletion:(id /* CDUnknownBlockType */)arg2;
- (void)_cleanupMainWorkspaceForMedusaTestWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)_setupMainWorkspaceForMedusaTestWithOptions:(id)arg1 completion:(id /* CDUnknownBlockType */)arg2;
- (void)_runMedusaTest:(id)arg1 withMainWorkspaceTransition:(id /* CDUnknownBlockType */)arg2 options:(id)arg3;
- (void)_runMedusaUnpinFloatingApplicationTest:(id)arg1 withOptions:(id)arg2;
- (void)_runMedusaPinFloatingApplicationTest:(id)arg1 withOptions:(id)arg2;
- (void)_runMedusaMoveFloatingApplicationTest:(id)arg1 withOptions:(id)arg2;
- (void)_runMedusaSplitViewSuspendTest:(id)arg1 withOptions:(id)arg2;
- (void)_runMedusaSplitViewResizeTest:(id)arg1 withOptions:(id)arg2;
- (void)_runFloatingDockPresent:(BOOL)arg1 testName:(id)arg2;
- (void)_runDashBoardPresentDismissPasscode;
- (void)_runDashBoardDismissTestFromPageIndex:(NSUInteger)arg1 showPasscodeView:(BOOL)arg2;
- (void)_runDashBoardDismissFromPasscodeViewAfterAuthenticationTest;
- (void)_runDashBoardDismissFromTodayViewWhileAuthenticatedTest;
- (void)_runDashBoardDismissWhileAuthenticatedTest;
- (void)_launchFullscreenApplication:(id)arg1 withLaunchResult:(id /* CDUnknownBlockType */)arg2 transactionCompletion:(id /* CDUnknownBlockType */)arg3;
- (void)_returnToHomescreenWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)_resetForceRotate;
- (void)_rotationCompletion:(id)arg1;
- (void)_forceRotateToOrientation:(long long)arg1 withCompletion:(id /* CDUnknownBlockType */)arg2;
- (void)_runDashBoardRotateCameraPage;
- (void)_runDashBoardRotationTestOnPageAtIndex:(NSUInteger)arg1 showSpotlight:(BOOL)arg2;
- (void)_runDashBoardRotationTestOnPageAtIndex:(NSUInteger)arg1;
- (void)_runDashBoardRotateMainPage;
- (void)_runDashBoardRotateTodayViewPage;
- (void)_runDashBoardScrollTestFromPageIndex:(NSUInteger)arg1 toPageWithIndex:(NSUInteger)arg2 subTestName:(id)arg3 backSubTestName:(id)arg4 withBlur:(BOOL)arg5;
- (void)_runDashBoardScrollFromLeftToRightPageTestWithBlur:(BOOL)arg1;
- (void)_runDashBoardScrollToRightPageTestWithBlur:(BOOL)arg1;
- (void)_runDashBoardScrollToLeftPageTestWithBlur:(BOOL)arg1;
- (void)assistantDidAppear:(id)arg1;
- (void)assistantWillAppear:(id)arg1;
- (void)_runSiriBringUpTest:(id)arg1 testOptions:(id)arg2;
- (void)_runSiriBringUpImmediateBeepTest:(id)arg1;
- (void)_runNotificationCoalescingExpandingScrollingTestWithOptions:(id)arg1;
- (void)_runNotificationCoalescingRestackingFromBottomTestWithOptions:(id)arg1;
- (void)_runNotificationCoalescingRestackingTestWithOptions:(id)arg1;
- (void)_runNotificationCoalescingExpandingTestWithOptions:(id)arg1;
- (void)_performRestackingExpandedBundleForNotificationRequest:(id)arg1 withCompletion:(id /* CDUnknownBlockType */)arg2;
- (void)_performExpandingCoalescedBundleForNotificationRequest:(id)arg1 withCompletion:(id /* CDUnknownBlockType */)arg2;
- (void)_runLockScreenScrollNotificationsTestWithOptions:(id)arg1;
- (void)_setupNotificationListTest;
- (void)_turnScreenOnAndAuthenticateWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (id)_leadingNotificationRequest;
- (id)_combinedListViewController;
- (void)_removeAllFakeNotifications;
- (void)_publishFakeThreadedLockScreenNotificationsWithCount:(NSUInteger)arg1 uniqueThreadCount:(NSUInteger)arg2 completion:(id /* CDUnknownBlockType */)arg3;
- (void)_performNotificationPublishingWithCount:(NSUInteger)arg1 uniqueThreadCount:(NSUInteger)arg2 withCompletion:(id /* CDUnknownBlockType */)arg3;
- (void)_simulateUserScrollForNotificationListWithCount:(NSUInteger)arg1 completion:(id /* CDUnknownBlockType */)arg2;
- (void)_runPresentBannerTest;
- (void)_runClearLongLookTest;
- (void)_runReParkLongLookTest;
- (void)_runPresentLongLookTest;
- (void)_runBannerTestWithBlock:(id /* CDUnknownBlockType */)arg1;
- (id)_dashBoardCombinedListViewController;
- (void)_runCoverSheetNotificationListHistoryRevealTest;
- (id)_coverSheetBringUpEventStream;
- (void)_bringUpCoverSheetWithBeforePresent:(id /* CDUnknownBlockType */)arg1 afterPresent:(id /* CDUnknownBlockType */)arg2 beforeDismiss:(id /* CDUnknownBlockType */)arg3 afterDismiss:(id /* CDUnknownBlockType */)arg4;
- (void)_runCoverSheetTestPresenting:(BOOL)arg1 completion:(id /* CDUnknownBlockType */)arg2;
- (void)_runCoverSheetTestPresenting:(BOOL)arg1;
- (void)_runCoverSheetDismissToSafariTest;
- (void)_runCoverSheetDismissTestWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)_runCoverSheetPresentOverSafariTest;
- (void)_runCoverSheetPresentTestWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)_performScrunchAndSwipeWithComposer:(id)arg1;
- (void)_performFiveFingerScrunchWithComposer:(id)arg1 scrunchProgress:(double)arg2 duration:(double)arg3 withContinuationBlock:(id /* CDUnknownBlockType */)arg4;
- (void)_performFourFingerSwipeWithComposer:(id)arg1 vertically:(BOOL)arg2 duration:(double)arg3;
- (void)_pauseWithComposer:(id)arg1 locations:(CGPoint )arg2 touchCount:(NSUInteger)arg3;
- (void)_performArcSwipeWithComposer:(id)arg1;
- (id)_flickTimingFunction;
- (void)_performMultiFingerDragWithComposer:(id)arg1 startLocations:(CGPoint )arg2 endLocations:(CGPoint )arg3 touchCount:(NSUInteger)arg4 duration:(double)arg5 timingFunction:(id)arg6 startWithTouchDown:(BOOL)arg7 intermediateTransformer:(id /* CDUnknownBlockType */)arg8 completion:(id /* CDUnknownBlockType */)arg9;
- (void)_performSwipeWithComposer:(id)arg1 startLocation:(CGPoint)arg2 endLocation:(CGPoint)arg3 duration:(double)arg4 timingFunction:(id)arg5 intermediateTransformer:(id /* CDUnknownBlockType */)arg6 completion:(id /* CDUnknownBlockType */)arg7;
- (void)_performSwipeWithComposer:(id)arg1 startLocation:(CGPoint)arg2 endLocation:(CGPoint)arg3 duration:(double)arg4;
- (void)_performSwipeHomeWithComposer:(id)arg1;
- (void)_prepareToRunAutoPiPTestWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)_installSwitcherModelForSwitcherTests;
- (void)_prepareToRunSwitcherGestureTestsWithForegroundApp:(id)arg1 shouldStartTest:(BOOL)arg2 withCompletion:(id /* CDUnknownBlockType */)arg3;
- (void)_prepareToRunSwitcherGestureTestsFromHomeScreen:(BOOL)arg1 withCompletion:(id /* CDUnknownBlockType */)arg2;
- (void)_prepareToRunSwitcherGestureTestsWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)_startAutoPiPWithGesture:(id /* CDUnknownBlockType */)arg1 setupCompletion:(id /* CDUnknownBlockType */)arg2 finalCompletion:(id /* CDUnknownBlockType */)arg3;
- (void)_runAutoPiPWithGestureTest:(id /* CDUnknownBlockType */)arg1;
- (void)_runScrunchHomeToAutoPiPTest;
- (void)_runSwipeUpHomeToAutoPiPTest;
- (void)_runScrunchAndSwipeMultipleAppsTest;
- (void)_runScrunchAndSwipeTest;
- (void)_runScrunchToAppSwitcherTest;
- (void)_runScrunchToHomeTest;
- (void)_runFourFingerSwipeMultipleAppsTest;
- (void)_runFourFingerSwipeTest;
- (void)_runArcSwipeMultipleAppsTest;
- (void)_runArcSwipeTestFromHomeScreen:(BOOL)arg1;
- (void)_runBottomEdgeSwipeMultipleAppsTest;
- (void)_runBottomEdgeSwipeTestFromHomeScreen:(BOOL)arg1;
- (void)_runSwipeAndPauseForSwitcherOverFolderTest;
- (void)_runSwipeAndPauseForSwitcherTestFromHomeScreen:(BOOL)arg1 completion:(id /* CDUnknownBlockType */)arg2;
- (void)_runSwipeToHomeOverFolderTest;
- (void)_runSwipeToHomeTestWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)_runWidgetLaunchTestNamed:(id)arg1 options:(id)arg2;
- (void)_runDashboardTodayViewScrollWidgetsTestWithOptions:(id)arg1;
- (void)_runTodayViewScrollWidgetsTestWithOptions:(id)arg1;
- (void)_runTapContinuityBannerInSwitcherTest;
- (void)_runDismissContinuityBannerInSwitcherTest;
- (void)_runPresentContinuityBannerInSwitcherTest;
- (void)_runDoSiDoTest;
- (id)_singleHomeButtonPressEventStream;
- (id)_doubleHomeButtonPressEventStream;
- (void)_runAppSwitcherBringupTestOverApp:(BOOL)arg1 rotated:(BOOL)arg2 completion:(id /* CDUnknownBlockType */)arg3;
- (void)_continueRunningDismissAppSwitcherTestWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)_runAppSwitcherDismissTestOverApp:(BOOL)arg1 rotated:(BOOL)arg2 completion:(id /* CDUnknownBlockType */)arg3;
- (void)_continueRunningScrollAppSwitcherTest:(id)arg1 runColdTest:(BOOL)arg2 completion:(id /* CDUnknownBlockType */)arg3;
- (void)_startScrollAppSwitcherTest:(id)arg1 overApp:(BOOL)arg2 runColdTest:(BOOL)arg3 completion:(id /* CDUnknownBlockType */)arg4;
- (void)_runScrollAppSwitcherLandscapeTest:(id)arg1 overApp:(BOOL)arg2 completion:(id /* CDUnknownBlockType */)arg3;
- (void)_runScrollAppSwitcherTest:(id)arg1 overApp:(BOOL)arg2 completion:(id /* CDUnknownBlockType */)arg3;
- (void)_runToggleSearchTest;
- (void)_runAppSearchDismiss;
- (void)_runAppSearchPresent;
- (void)_runHomeScreenSearchDismiss;
- (void)_runHomeScreenSearchPresent;
- (void)_runLockScreenTodayViewPullDownToSpotlightDismiss;
- (void)_runLockScreenTodayViewPullDownToSpotlight;
- (void)_runTodayViewPullDownToSpotlight;
- (void)_runTodayViewFocusSearchFieldToSpotlight;
- (void)_runHomeScreenIconPullToSpotlightDismiss;
- (void)_dismissSpotlightByHomeButtonEvent:(id /* CDUnknownBlockType */)arg1;
- (void)_pullDownToSpotlightForView:(id)arg1 offset:(double)arg2 duration:(double)arg3 completion:(id /* CDUnknownBlockType */)arg4;
- (void)_runHomeScreenIconPullToSpotlight;
- (id)_homeScreenTodayViewEventStreamWithDismissal:(BOOL)arg1;
- (void)_runHomeScreenSwipeRightFromTodayView;
- (void)_runHomeScreenSwipeLeftToTodayView;
- (void)_handleEndOfScrollingTest;
- (void)_runScrollIconListTestEditing:(BOOL)arg1;
- (void)runFolderRotationTest:(int)arg1;
- (void)runHomeScreenRotationIterationWithRemainingIterations:(int)arg1 completionHandler:(id /* CDUnknownBlockType */)arg2;
- (void)runHomeScreenRotationTest:(int)arg1;
- (void)endLaunchTest;
- (void)startResumeTestNamed:(id)arg1 options:(id)arg2;
- (void)startLaunchTestNamed:(id)arg1 options:(id)arg2 withCompletionBlock:(id /* CDUnknownBlockType */)arg3;
- (void)startLaunchTestNamed:(id)arg1 options:(id)arg2;
- (void)_cleanUpLaunchTestState;
- (void)_retryLaunchTestWithOptions:(id)arg1;
- (void)_unlockAnimationDidFinish:(id)arg1;
- (void)_unscatterWillBegin:(id)arg1;
- (void)_medusaTestWithName:(id)arg1 testOptions:(id)arg2;
- (BOOL)runTest:(id)arg1 options:(id)arg2;
- (id)_appIconsToPutInFolderForTest;
- (void)installNotificationObserverForNotificationName:(id)arg1 forOneNotification:(BOOL)arg2 usingBlock:(id /* CDUnknownBlockType */)arg3;
- (void)prepareForControlCenterPPTHostState:(NSUInteger)arg1 completionHandler:(id /* CDUnknownBlockType */)arg2;

@end

