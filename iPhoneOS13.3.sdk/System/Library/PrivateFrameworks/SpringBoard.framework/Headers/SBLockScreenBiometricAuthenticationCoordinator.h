//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SpringBoard/BSDescriptionProviding-Protocol.h>
#import <SpringBoard/PKPassLibraryDelegate-Protocol.h>
#import <SpringBoard/SBBiometricUnlockBehaviorDelegate-Protocol.h>
#import <SpringBoard/SBUIBiometricResourceObserver-Protocol.h>
#import <SpringBoard/SBUIPasscodeBiometricMatchingAssertionFactory-Protocol.h>
#import <SpringBoard/SBWalletPrearmRecognizerDelegate-Protocol.h>

@class NSHashTable, NSMutableOrderedSet, NSString, PKPassLibrary, SBUIBiometricResource, SBWalletPreArmController, SBWalletPrearmRecognizer, _SBPendingMesaUnlockBehaviorUnlockRequest;
@protocol BSInvalidatable, SBBiometricUnlockBehavior, SBLockScreenBiometricAuthenticationCoordinatorDelegate;

@interface SBLockScreenBiometricAuthenticationCoordinator : NSObject <BSDescriptionProviding, SBUIBiometricResourceObserver, SBBiometricUnlockBehaviorDelegate, SBWalletPrearmRecognizerDelegate, PKPassLibraryDelegate, SBUIPasscodeBiometricMatchingAssertionFactory>
{
    SBUIBiometricResource *_biometricResource;
    id <BSInvalidatable> _fingerDetectEnabledAssertion;
    id <SBLockScreenBiometricAuthenticationCoordinatorDelegate> _delegate;
    id <SBBiometricUnlockBehavior> _autoUnlockBehavior;
    SBWalletPreArmController *_walletPreArmController;
    SBWalletPrearmRecognizer *_walletPrearmRecognizer;
    BOOL _presentingWalletInterface;
    BOOL _didMatchBeforeWalletPrearmRecognizerTimeout;
    PKPassLibrary *_passLibrary;
    NSUInteger _state;
    BOOL _isAuthenticated;
    id <BSInvalidatable> _matchingWantedAssertion;
    NSUInteger _matchingWantedAssertionMode;
    BOOL _bioAuthenticatedWhileMenuButtonDown;
    _SBPendingMesaUnlockBehaviorUnlockRequest *_pendingUnlockRequest;
    NSMutableOrderedSet *_activePasscodeMatchAssertions;
    NSHashTable *_disabledAssertions;
    NSHashTable *_disabledUnlockAssertions;
    NSHashTable *_disabledAutoUnlockAssertions;
}

@property(retain, nonatomic, getter=_getPassLibrary, setter=_setPassLibrary:) PKPassLibrary *passLibrary; // @synthesize passLibrary=_passLibrary;
@property(readonly, nonatomic, getter=_state) NSUInteger state; // @synthesize state=_state;
@property(readonly, nonatomic, getter=_walletPrearmRecognizer) SBWalletPrearmRecognizer *walletPrearmRecognizer; // @synthesize walletPrearmRecognizer=_walletPrearmRecognizer;
@property(retain, nonatomic, getter=_setAutoUnlockBehavior, setter=_setAutoUnlockBehavior:) id <SBBiometricUnlockBehavior> autoUnlockBehavior; // @synthesize autoUnlockBehavior=_autoUnlockBehavior;
@property(nonatomic, getter=isAuthenticated) BOOL authenticated; // @synthesize authenticated=_isAuthenticated;
@property(nonatomic) BOOL bioAuthenticatedWhileMenuButtonDown; // @synthesize bioAuthenticatedWhileMenuButtonDown=_bioAuthenticatedWhileMenuButtonDown;
@property(nonatomic) __weak id <SBLockScreenBiometricAuthenticationCoordinatorDelegate> delegate; // @synthesize delegate=_delegate;
// - (void).cxx_destruct;
- (void)_walletPreArmDisabledDidChange:(id)arg1;
- (void)_clearFingerDetectAssertion;
- (void)_createFingerDetectAssertion;
- (void)_handlePassKitDismissalIfNecessaryWithReason:(id)arg1;
- (BOOL)_isWalletPreArmAllowed;
- (void)_removePasscodeMatchingAssertion:(id)arg1;
- (void)_addPasscodeMatchingAssertion:(id)arg1;
- (BOOL)_hasActivePasscodeViews;
- (BOOL)_isMatchingEffectivelyDisabled;
- (BOOL)_stateWantsMatching:(NSUInteger)arg1 outMatchMode:(NSUInteger )arg2;
- (void)_invalidateWalletPreArmRecognizer;
- (void)_clearPendingUnlockRequest;
- (void)_toggleAutoUnlockBehaviorEnabled:(BOOL)arg1;
- (void)_pendUnlockRequest:(id)arg1;
- (void)_setupPreArmRecognizerIfPossibleForReason:(id)arg1;
- (void)_stateChangedFrom:(NSUInteger)arg1 to:(NSUInteger)arg2;
- (void)_updateMatchingForState:(NSUInteger)arg1 forReason:(id)arg2;
- (void)_setState:(NSUInteger)arg1 forReason:(id)arg2;
- (void)contactlessInterfaceDidDismissFromSource:(long long)arg1;
- (void)passLibraryReceivedInterruption;
- (id)acquireMatchingAssertionWithMode:(NSUInteger)arg1 reason:(id)arg2;
- (BOOL)biometricUnlockBehavior:(id)arg1 requestsUnlock:(id)arg2 withFeedback:(id)arg3;
- (BOOL)biometricUnlockBehavior:(id)arg1 requestsFeedback:(id)arg2;
- (void)walletPrearmRecognizer:(id)arg1 didFailToRecognizeForReason:(NSUInteger)arg2;
- (void)walletPrearmRecognizerDidRecognize:(id)arg1;
- (void)biometricResource:(id)arg1 matchingAllowedDidChange:(BOOL)arg2;
- (void)biometricResource:(id)arg1 observeEvent:(NSUInteger)arg2;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (id)succinctDescriptionBuilder;
- (id)succinctDescription;
@property(readonly, copy) NSString *description;
- (void)_resetStateForReason:(id)arg1;
- (void)_noteMenuButtonDoublePress;
- (void)_noteMenuButtonSinglePress;
@property(readonly, nonatomic, getter=isAutoUnlockingDisabled) BOOL autoUnlockingDisabled;
- (id)acquireDisableAutoUnlockAssertionForReason:(id)arg1;
@property(readonly, nonatomic, getter=isUnlockingDisabled) BOOL isUnlockingDisabled;
- (id)acquireDisableUnlockAssertionForReason:(id)arg1;
@property(readonly, nonatomic, getter=isWalletPreArmDisabled) BOOL walletPreArmDisabled;
- (id)acquireDisableWalletPreArmAssertionForReason:(id)arg1;
@property(readonly, nonatomic, getter=isEnabled) BOOL enabled;
- (id)acquireDisableCoordinatorAssertionForReason:(id)arg1;
- (id)initWithBiometricResource:(id)arg1 walletPreArmController:(id)arg2;

@end

