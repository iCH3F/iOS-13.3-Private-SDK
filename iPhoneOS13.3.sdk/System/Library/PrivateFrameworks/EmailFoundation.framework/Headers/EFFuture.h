//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <EmailFoundation/EFFuture-Protocol.h>
#import <EmailFoundation/EFPromisePrivate-Protocol.h>

@class NSConditionLock, NSError, NSMutableArray;
@protocol EFFutureDelegate, EFObserver;

@interface EFFuture : NSObject <EFPromisePrivate, EFFuture>
{
    NSConditionLock *_stateLock;
    id _result;
    NSError *_error;
    NSMutableArray *_completionBlocks;
    id <EFFutureDelegate> _delegate;
}

+ (id)sequence:(id)arg1;
+ (id)_join:(id)arg1 ignoreFailures:(BOOL)arg2;
+ (id)combine:(id)arg1;
+ (id)join:(id)arg1;
+ (id)chain:(id)arg1;
+ (id)_recover:(id)arg1 withBlock:(id /* CDUnknownBlockType */)arg2 scheduler:(id)arg3;
+ (id)_then:(id)arg1 withBlock:(id /* CDUnknownBlockType */)arg2 scheduler:(id)arg3;
+ (void)_always:(id)arg1 withBlock:(id /* CDUnknownBlockType */)arg2 scheduler:(id)arg3;
+ (id)onScheduler:(id)arg1 lazyFutureWithBlock:(id /* CDUnknownBlockType */)arg2;
+ (id)lazyFutureWithBlock:(id /* CDUnknownBlockType */)arg1;
+ (id)onScheduler:(id)arg1 futureWithBlock:(id /* CDUnknownBlockType */)arg2;
+ (id)futureWithBlock:(id /* CDUnknownBlockType */)arg1;
+ (id)futureWithError:(id)arg1;
+ (id)futureWithResult:(id)arg1;
+ (id)nullFuture;
@property __weak id <EFFutureDelegate> delegate; // @synthesize delegate=_delegate;
// - (void).cxx_destruct;
- (id)onScheduler:(id)arg1 map:(id /* CDUnknownBlockType */)arg2;
- (id)map:(id /* CDUnknownBlockType */)arg1;
- (id)onScheduler:(id)arg1 recover:(id /* CDUnknownBlockType */)arg2;
- (id)recover:(id /* CDUnknownBlockType */)arg1;
- (id)onScheduler:(id)arg1 then:(id /* CDUnknownBlockType */)arg2;
- (id)then:(id /* CDUnknownBlockType */)arg1;
- (void)onScheduler:(id)arg1 always:(id /* CDUnknownBlockType */)arg2;
- (void)always:(id /* CDUnknownBlockType */)arg1;
- (void)_flushCompletionBlocks;
- (void)_addCompletionBlock:(id /* CDUnknownBlockType */)arg1;
- (void)onScheduler:(id)arg1 addFailureBlock:(id /* CDUnknownBlockType */)arg2;
- (void)addFailureBlock:(id /* CDUnknownBlockType */)arg1;
- (void)onScheduler:(id)arg1 addSuccessBlock:(id /* CDUnknownBlockType */)arg2;
- (void)addSuccessBlock:(id /* CDUnknownBlockType */)arg1;
- (BOOL)_nts_isFinished;
@property(readonly) id <EFObserver> resultsObserverAdapter;
@property(readonly) id <EFObserver> firstResultObserverAdapter;
@property(readonly) id /* CDUnknownBlockType */ errorOnlyCompletionHandlerAdapter;
@property(readonly) id /* CDUnknownBlockType */ boolErrorCompletionHandlerAdapter;
@property(readonly) id /* CDUnknownBlockType */ completionHandlerAdapter;
- (void)finishWithFuture:(id)arg1;
- (BOOL)finishWithError:(id)arg1;
- (BOOL)finishWithResult:(id)arg1;
- (void)_finishWithFuture:(id)arg1;
- (BOOL)finishWithResult:(id)arg1 error:(id)arg2;
- (void)didCancel;
- (void)cancel;
- (BOOL)tryCancel;
@property(readonly, getter=isCancelled) BOOL cancelled;
@property(readonly, getter=isFinished) BOOL finished;
- (id)resultBeforeDate:(id)arg1 error:(id )arg2;
- (id)resultIfAvailable:(id )arg1;
- (id)resultWithTimeout:(double)arg1 error:(id )arg2;
- (id)result:(id )arg1;
@property(readonly, nonatomic) id resultIfAvailable;
@property(readonly, nonatomic) id result;
- (id)init;

@end

