//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@interface FLSpring : NSObject
{
    struct FLCompoundSpring _s;
    double _targetVelocity;
    double _previousTarget;
    BOOL _transitioningFromTracking;
    BOOL _tracking;
    double _minimumTarget;
    double _maximumTarget;
    double _rubberbandRange;
    double _rubberbandFactor;
    double _retargetResponseFraction;
    double _projectionDeceleration;
    struct FLSpringParameters _parameters;
    struct FLSpringParameters _trackingParameters;
}

+ (id)springWithValue:(double)arg1;
@property(nonatomic) double projectionDeceleration; // @synthesize projectionDeceleration=_projectionDeceleration;
@property(nonatomic) double retargetResponseFraction; // @synthesize retargetResponseFraction=_retargetResponseFraction;
@property(nonatomic) double rubberbandFactor; // @synthesize rubberbandFactor=_rubberbandFactor;
@property(nonatomic) double rubberbandRange; // @synthesize rubberbandRange=_rubberbandRange;
@property(nonatomic) double maximumTarget; // @synthesize maximumTarget=_maximumTarget;
@property(nonatomic) double minimumTarget; // @synthesize minimumTarget=_minimumTarget;
@property(nonatomic, getter=isTracking) BOOL tracking; // @synthesize tracking=_tracking;
@property(nonatomic) struct FLSpringParameters trackingParameters; // @synthesize trackingParameters=_trackingParameters;
@property(nonatomic) struct FLSpringParameters parameters; // @synthesize parameters=_parameters;
- (void)_updateForEffectiveParameters;
- (struct FLSpringParameters)_effectiveParameters;
- (void)step:(double)arg1;
- (void)setUsesDampingRatioResponseForSmoothing:(BOOL)arg1;
- (BOOL)usesDampingRatioResponseForSmoothing;
- (void)resetImmediatelyToValue:(double)arg1;
- (double)_projectedTargetForVelocity:(double)arg1;
@property(readonly, nonatomic) double projectedTarget; // @dynamic projectedTarget;
@property(nonatomic) double velocity; // @dynamic velocity;
@property(nonatomic) double target; // @dynamic target;
@property(nonatomic) double value; // @dynamic value;
- (id)init;
- (id)initWithValue:(double)arg1;

@end

