//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

#import <AssetViewer/ASVAROnboardingUIUpdateManagerDelegate-Protocol.h>

@class ARSession, ASVGlyphRenderer, ASVRoundedButton, ASVUpdateManager, MISSING_TYPE, NSLayoutConstraint, SensorInterceptor, UILabel, UISelectionFeedbackGenerator;
@protocol ASVAROnboardingUIViewDelegate;

@interface ASVAROnboardingUIView : UIView <ASVAROnboardingUIUpdateManagerDelegate>
{
    NSUInteger _currentTrackingState;
    NSUInteger _previousTrackingState;
    NSUInteger _animationState;
    UIView *_backgroundView;
    UIView *_moveDeviceTextContainer;
    UILabel *_moveDeviceText;
    UILabel *_relocalizeText;
    ASVRoundedButton *_resetButton;
    ARSession *_session;
    SensorInterceptor *_motionSensorInterceptor;
    ASVUpdateManager *_updateManager;
    ASVGlyphRenderer *_renderer;
    UISelectionFeedbackGenerator *_feedbackGenerator;
    NSLayoutConstraint *_resetButtonBottomLayoutConstraint;
    long long _currentResetButtonOrientation;
    MISSING_TYPE *_recentPositions[10];
    float _recentAccelerationValues[30];
    MISSING_TYPE *_initialCameraTranslation;
    MISSING_TYPE *_initialCameraRotation;
    MISSING_TYPE *_lastCameraTranslation;
    MISSING_TYPE *_lastCameraRight;
    MISSING_TYPE *_currentCameraTranslation;
    MISSING_TYPE *_rotationStartCameraTranslation;
    MISSING_TYPE *_rotationStartCameraRight;
    double _showUITime;
    double _lastUpdateTime;
    double _startShutdownTime;
    double _currentStateTime;
    double _lastAccelOverThresholdTime;
    float _lastOrientationRotation;
    float _accelerationBaseline;
    float _accelerationThreshold;
    float _currentCubeAngle;
    BOOL _initialTransformSet;
    BOOL _isAnimating;
    BOOL _isRelocalizing;
    BOOL _accelerationBaselineCalculated;
    BOOL _hasDisplayedPreviously;
    int _currentPositionIndex;
    int _accelOverThresholdCount;
    int _currentAccelerationIndex;
    BOOL _allowRotateAutoDismiss;
    BOOL _showResumeTextAfterFirstDisplay;
    BOOL _showAllAnimationStatesBeforeHiding;
    BOOL _showAnimatedUI;
    BOOL _interceptARKitSensorData;
    BOOL _enableHapticFeedback;
    float _resetButtonLandscapeVerticalOffset;
    float _resetButtonPortraitVerticalOffset;
    float _moveDistanceThreshold;
    id <ASVAROnboardingUIViewDelegate> _delegate;
    double _inactiveTimeBeforeShowUI;
    double _minimumAnimationTime;
}

@property(nonatomic) BOOL enableHapticFeedback; // @synthesize enableHapticFeedback=_enableHapticFeedback;
@property(nonatomic) BOOL interceptARKitSensorData; // @synthesize interceptARKitSensorData=_interceptARKitSensorData;
@property(nonatomic) BOOL showAnimatedUI; // @synthesize showAnimatedUI=_showAnimatedUI;
@property(nonatomic) BOOL showAllAnimationStatesBeforeHiding; // @synthesize showAllAnimationStatesBeforeHiding=_showAllAnimationStatesBeforeHiding;
@property(nonatomic) float moveDistanceThreshold; // @synthesize moveDistanceThreshold=_moveDistanceThreshold;
@property(nonatomic) double minimumAnimationTime; // @synthesize minimumAnimationTime=_minimumAnimationTime;
@property(nonatomic) double inactiveTimeBeforeShowUI; // @synthesize inactiveTimeBeforeShowUI=_inactiveTimeBeforeShowUI;
@property(nonatomic) BOOL showResumeTextAfterFirstDisplay; // @synthesize showResumeTextAfterFirstDisplay=_showResumeTextAfterFirstDisplay;
@property(nonatomic) BOOL allowRotateAutoDismiss; // @synthesize allowRotateAutoDismiss=_allowRotateAutoDismiss;
@property(nonatomic) float resetButtonPortraitVerticalOffset; // @synthesize resetButtonPortraitVerticalOffset=_resetButtonPortraitVerticalOffset;
@property(nonatomic) float resetButtonLandscapeVerticalOffset; // @synthesize resetButtonLandscapeVerticalOffset=_resetButtonLandscapeVerticalOffset;
@property(nonatomic) __weak id <ASVAROnboardingUIViewDelegate> delegate; // @synthesize delegate=_delegate;
// - (void).cxx_destruct;
- (BOOL)_hasHomeButton;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)buttonPress:(id)arg1;
- (void)drawInDrawable:(id)arg1 withCommandBuffer:(id)arg2 timeDelta:(double)arg3;
- (void)updateForCurrentTime:(double)arg1 timeDelta:(double)arg2;
- (void)resizeForDrawable:(id)arg1;
- (void)hideResetButton:(double)arg1;
- (void)hideOrientationUI:(double)arg1;
- (BOOL)isShowingRelocalizeUI;
- (BOOL)isShowingMoveDeviceUI;
- (void)showRelocalizeUI:(double)arg1;
- (void)updateMoveDeviceText:(id)arg1 fadeText:(BOOL)arg2;
- (void)showMoveDeviceUI:(double)arg1;
- (BOOL)isShowingBackground;
- (void)hideBackground:(double)arg1;
- (void)showBackground:(double)arg1;
- (void)hideAll:(double)arg1;
- (void)updatePositionData:(id)arg1 currentTime:(double)arg2;
- (void)resetAccelerationBaseline;
- (float)calculateAverageAcceleration;
- 
- (MISSING_TYPE *)calculateAveragePosition;
- (void)update:(double)arg1;
- (void)clampToNearestQuarterRotation;
- (CDStruct_14d5dc5e)ortho2d:(float)arg1 right:(float)arg2 bottom:(float)arg3 top:(float)arg4 near:(float)arg5 far:(float)arg6;
- 
- (CDStruct_14d5dc5e)perspective_fov:(float)arg1 aspect:(float)arg2 near:(float)arg3 far:(float)arg4;
- (float)radians:(float)arg1;
- (void)shutdown;
- (void)relocalize;
- (void)activate;
- (void)prepare;
- (void)hide;
- (void)orientationChanged;
- (void)updateConstraints;
- (void)createConstraintsForCurrentDeviceOrientation;
- (void)layoutSubviews;
- (void)updateMetalLayer;
- (void)restoreSensorDelegates;
- (void)interceptSensorDelegates;
- (void)shutdownRenderer;
- (void)startupRenderer;
- (void)cleanupAnimatedUI;
- (void)prepareAnimatedUI;
- (void)prepareOnboardingUI;
- (void)updateMoveText:(BOOL)arg1;
- (void)updateResetButtonWithFadeIn:(BOOL)arg1;
- (void)hideOnboardingUI;
- (void)dealloc;
- (id)initWithFrame:(CGRect)arg1;
@property(nonatomic) __weak ARSession *session;
- (BOOL)isRelocalizing;
@property(readonly, nonatomic) BOOL isAnimating;
@property(readonly, nonatomic) NSUInteger animationState;
@property(nonatomic) NSUInteger state;

@end

