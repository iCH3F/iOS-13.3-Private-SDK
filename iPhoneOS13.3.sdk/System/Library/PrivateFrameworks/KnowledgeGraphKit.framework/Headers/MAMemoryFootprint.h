//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class MAGraph, NSMutableSet;

@interface MAMemoryFootprint : NSObject
{
    MAGraph *_graph;
    NSMutableSet *_allKeys;
    NSMutableSet *_allValues;
    NSUInteger _allNodesSize;
    NSUInteger _allEdgesSize;
    NSUInteger _halfEdgeCount;
    NSUInteger _orderedSetCount;
    NSUInteger _arrayCount;
    NSUInteger _dictionaryCount;
    NSUInteger _basicHashCount;
    NSUInteger _basicHashValueStoreCount;
    NSUInteger _graphSize;
    NSUInteger _nodeCount;
    NSUInteger _edgeCount;
    NSUInteger _maximumEdgeCountInNode;
    NSUInteger _countOfNodesWithAtMostEightEdges;
}

@property(readonly, nonatomic) NSUInteger countOfNodesWithAtMostEightEdges; // @synthesize countOfNodesWithAtMostEightEdges=_countOfNodesWithAtMostEightEdges;
@property(readonly, nonatomic) NSUInteger maximumEdgeCountInNode; // @synthesize maximumEdgeCountInNode=_maximumEdgeCountInNode;
@property(readonly, nonatomic) NSUInteger nodeCount; // @synthesize nodeCount=_nodeCount;
@property(readonly, nonatomic) NSUInteger allEdgesSize; // @synthesize allEdgesSize=_allEdgesSize;
@property(readonly, nonatomic) NSUInteger allNodesSize; // @synthesize allNodesSize=_allNodesSize;
@property(readonly, nonatomic) NSUInteger graphSize; // @synthesize graphSize=_graphSize;
// - (void).cxx_destruct;
- (void)dump;
- (void)update;
- (NSUInteger)version;
@property(readonly, nonatomic) NSUInteger optimalValuesSize;
@property(readonly, nonatomic) NSUInteger actualValuesSize;
- (void)_reportValue:(id)arg1;
@property(readonly, nonatomic) NSUInteger optimalKeysSize;
@property(readonly, nonatomic) NSUInteger actualKeysSize;
- (void)_reportKey:(id)arg1;
- (NSUInteger)_reportDictionary:(id)arg1;
- (NSUInteger)_reportArray:(id)arg1;
- (NSUInteger)_reportOrderedSet:(id)arg1;
- (void)_reportEdge:(id)arg1 withSize:(NSUInteger)arg2;
- (void)_reportNode:(id)arg1 withSize:(NSUInteger)arg2 edgeCount:(NSUInteger)arg3;
- (void)_reportGraph:(id)arg1 withSize:(NSUInteger)arg2;
@property(readonly, nonatomic) NSUInteger optimalValueCount;
@property(readonly, nonatomic) NSUInteger optimalKeyCount;
@property(readonly, nonatomic) NSUInteger actualValueCount;
@property(readonly, nonatomic) NSUInteger actualKeyCount;
@property(readonly, nonatomic) float averageEdgeCountPerNode;
@property(readonly, nonatomic) NSUInteger averageEdgeSize;
@property(readonly, nonatomic) NSUInteger edgeCount; // @synthesize edgeCount=_edgeCount;
@property(readonly, nonatomic) NSUInteger averageNodeSize;
@property(readonly, nonatomic) NSUInteger totalSize;
- (id)initWithGraph:(id)arg1;

@end

