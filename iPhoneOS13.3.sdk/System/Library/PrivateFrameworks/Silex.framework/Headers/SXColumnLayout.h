//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>


@protocol SXDocumentLayout;

@interface SXColumnLayout : NSObject <NSCopying>
{
    id <SXDocumentLayout> _documentLayout;
    long long _layoutWidth;
    double _leftMargin;
    double _rightMargin;
    long long _gutter;
    NSUInteger _numberOfColumns;
    double _columnWidth;
    long long _leftColumnOffset;
    long long _rightColumnOffset;
    double _leftInset;
    double _rightInset;
    double _minimumHeight;
    double _minimumViewportWidthForLooseLayout;
    double _leftScreenMargin;
    double _rightScreenMargin;
    double _contentScaleFactor;
    NSUInteger _layoutColumns;
    CGSize _constrainedViewportSize;
    CGSize _viewportSize;
}

@property(readonly, nonatomic) NSUInteger layoutColumns; // @synthesize layoutColumns=_layoutColumns;
@property(readonly, nonatomic) double contentScaleFactor; // @synthesize contentScaleFactor=_contentScaleFactor;
@property(readonly, nonatomic) double rightScreenMargin; // @synthesize rightScreenMargin=_rightScreenMargin;
@property(readonly, nonatomic) double leftScreenMargin; // @synthesize leftScreenMargin=_leftScreenMargin;
@property(nonatomic) double minimumViewportWidthForLooseLayout; // @synthesize minimumViewportWidthForLooseLayout=_minimumViewportWidthForLooseLayout;
@property(nonatomic) double minimumHeight; // @synthesize minimumHeight=_minimumHeight;
@property(nonatomic) double rightInset; // @synthesize rightInset=_rightInset;
@property(nonatomic) double leftInset; // @synthesize leftInset=_leftInset;
@property(nonatomic) long long rightColumnOffset; // @synthesize rightColumnOffset=_rightColumnOffset;
@property(readonly, nonatomic) long long leftColumnOffset; // @synthesize leftColumnOffset=_leftColumnOffset;
@property(readonly, nonatomic) double columnWidth; // @synthesize columnWidth=_columnWidth;
@property(readonly, nonatomic) NSUInteger numberOfColumns; // @synthesize numberOfColumns=_numberOfColumns;
@property(readonly, nonatomic) long long gutter; // @synthesize gutter=_gutter;
@property(readonly, nonatomic) double rightMargin; // @synthesize rightMargin=_rightMargin;
@property(readonly, nonatomic) double leftMargin; // @synthesize leftMargin=_leftMargin;
@property(readonly, nonatomic) long long layoutWidth; // @synthesize layoutWidth=_layoutWidth;
@property(readonly, nonatomic) id <SXDocumentLayout> documentLayout; // @synthesize documentLayout=_documentLayout;
@property(readonly, nonatomic) CGSize viewportSize; // @synthesize viewportSize=_viewportSize;
@property(readonly, nonatomic) CGSize constrainedViewportSize; // @synthesize constrainedViewportSize=_constrainedViewportSize;
// - (void).cxx_destruct;
- (id)description;
// - (id)copyWithZone:(_NSZone )arg1;
- (BOOL)isEqual:(id)arg1;
- (double)widthForColumnRange:(_NSRange)arg1 ignoreMargin:(NSUInteger)arg2 ignoreGutter:(NSUInteger)arg3 ignoreViewportPadding:(NSUInteger)arg4;
- (double)xPositionForColumnIndex:(long long)arg1 ignoreMargin:(NSUInteger)arg2 ignoreGutter:(NSUInteger)arg3 ignoreViewportPadding:(NSUInteger)arg4;
- (_NSRange)convertColumnRange:(_NSRange)arg1 minimumColumnLength:(long long)arg2;
- (id)columnLayoutForComponentBlueprint:(id)arg1 unitConverter:(id)arg2;
- (id)initWithConstrainedViewportSize:(CGSize)arg1 viewportSize:(CGSize)arg2 layoutWidth:(double)arg3 documentLayout:(id)arg4 numberOfLayoutColumns:(NSUInteger)arg5 leftMargin:(double)arg6 rightMargin:(double)arg7 numberOfColumns:(NSUInteger)arg8 columnWidth:(double)arg9 leftScreenMargin:(double)arg10 rightScreenMargin:(double)arg11 contentScaleFactor:(double)arg12;

@end

