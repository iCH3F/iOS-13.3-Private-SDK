//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HMFoundation/HMFObject.h>

#import <HomeKitDaemon/HMDCameraRecordingUploaderDelegate-Protocol.h>
#import <HomeKitDaemon/HMFLogging-Protocol.h>
#import <HomeKitDaemon/HMICameraVideoAnalyzerDelegate-Protocol.h>

@class HMDCameraProfile, HMDCameraRecordingSessionFactory, HMDCameraRecordingSessionTimelineManager, HMDCameraRecordingUploader, HMFActivity, HMICameraVideoAnalyzer, NSDictionary, NSMutableDictionary, NSNumber, NSObject, NSString, NSUUID;
@protocol HMDCameraRecordingSessionDelegate, OS_dispatch_queue;

@interface HMDCameraRecordingSession : HMFObject <HMFLogging, HMICameraVideoAnalyzerDelegate, HMDCameraRecordingUploaderDelegate>
{
    BOOL _noMoreFragmentsAvailable;
    BOOL _active;
    BOOL _didHandleFirstFragment;
    NSDictionary *_homePresenceByPairingIdentity;
    HMDCameraRecordingSessionTimelineManager *_timelineManager;
    NSUInteger _currentFragmentNumber;
    NSUUID *_identifier;
    id <HMDCameraRecordingSessionDelegate> _delegate;
    double _configuredFragmentDuration;
    HMFActivity *_sessionActivity;
    HMDCameraRecordingUploader *_recordingUploader;
    NSUInteger _pendingFragmentsCount;
    NSString *_fragmentDirectoryPath;
    NSObject<OS_dispatch_queue> *_workQueue;
    HMDCameraProfile *_camera;
    HMICameraVideoAnalyzer *_videoAnalyzer;
    HMDCameraRecordingSessionFactory *_factory;
    NSNumber *_remainingRecordingExtensionDuration;
    NSMutableDictionary *_confidenceLevelsByEventReason;
    double _cumulativeFragmentDuration;
    NSMutableDictionary *_analysisEventsBySequenceNumber;
}

+ (id)logCategory;
@property(readonly) NSMutableDictionary *analysisEventsBySequenceNumber; // @synthesize analysisEventsBySequenceNumber=_analysisEventsBySequenceNumber;
@property double cumulativeFragmentDuration; // @synthesize cumulativeFragmentDuration=_cumulativeFragmentDuration;
@property(readonly) NSMutableDictionary *confidenceLevelsByEventReason; // @synthesize confidenceLevelsByEventReason=_confidenceLevelsByEventReason;
@property(retain) NSNumber *remainingRecordingExtensionDuration; // @synthesize remainingRecordingExtensionDuration=_remainingRecordingExtensionDuration;
@property(readonly) HMDCameraRecordingSessionFactory *factory; // @synthesize factory=_factory;
@property BOOL didHandleFirstFragment; // @synthesize didHandleFirstFragment=_didHandleFirstFragment;
@property(retain) HMICameraVideoAnalyzer *videoAnalyzer; // @synthesize videoAnalyzer=_videoAnalyzer;
@property(retain) HMDCameraProfile *camera; // @synthesize camera=_camera;
@property(readonly) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(copy) NSString *fragmentDirectoryPath; // @synthesize fragmentDirectoryPath=_fragmentDirectoryPath;
@property NSUInteger pendingFragmentsCount; // @synthesize pendingFragmentsCount=_pendingFragmentsCount;
@property(retain) HMDCameraRecordingUploader *recordingUploader; // @synthesize recordingUploader=_recordingUploader;
@property(getter=isActive) BOOL active; // @synthesize active=_active;
@property BOOL noMoreFragmentsAvailable; // @synthesize noMoreFragmentsAvailable=_noMoreFragmentsAvailable;
@property(readonly) HMFActivity *sessionActivity; // @synthesize sessionActivity=_sessionActivity;
@property(readonly) double configuredFragmentDuration; // @synthesize configuredFragmentDuration=_configuredFragmentDuration;
@property __weak id <HMDCameraRecordingSessionDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, copy) NSUUID *identifier; // @synthesize identifier=_identifier;
// - (void).cxx_destruct;
- (id)logIdentifier;
- (void)recordingUploaderIsIdle:(id)arg1;
- (void)recordingUploader:(id)arg1 didFinishClip:(id)arg2;
- (void)recordingUploader:(id)arg1 didStartClip:(id)arg2;
- (void)recordingUploader:(id)arg1 willFinishClip:(id)arg2;
- (BOOL)_isValidNonFirstSessionFragment:(id)arg1;
- (BOOL)_isValidFirstSessionFragment:(id)arg1;
- (void)_writeFragment:(id)arg1;
- (BOOL)_shouldEndSession;
- (BOOL)_shouldUploadFragmentWithAnalyzerResult:(id)arg1 sequenceNumber:(NSUInteger)arg2;
@property(readonly) long long videoAnalyzerEventTypes;
- (void)_endSessionWithError:(id)arg1;
- (void)_submitAnalysisEventForSequenceNumber:(long long)arg1;
- (void)_handleDidFailAnalysisForFragment:(id)arg1 withError:(id)arg2;
- (void)analyzer:(id)arg1 didFailAnalysisForFragment:(id)arg2 withError:(id)arg3;
- (void)_submitNotificationSuccessMetricWithRecordingEventTriggers:(NSUInteger)arg1 fragmentNumber:(NSUInteger)arg2;
- (void)_addNotificationForReason:(NSUInteger)arg1 confidenceLevel:(NSUInteger)arg2 dateOfOccurrence:(id)arg3 heroFrameData:(id)arg4 offset:(double)arg5 recordingEventTriggers:(NSUInteger)arg6 fragmentNumber:(NSUInteger)arg7;
- (void)_handleDidFindSignificantEvent:(id)arg1 inFragment:(id)arg2;
- (void)analyzer:(id)arg1 didFindSignificantEvent:(id)arg2 inFragment:(id)arg3;
- (void)_handleAnalyzedFragment:(id)arg1 withResult:(id)arg2;
- (void)analyzer:(id)arg1 didNotAnalyzeFragment:(id)arg2 withResult:(id)arg3;
- (void)analyzer:(id)arg1 didAnalyzeFragment:(id)arg2 withResult:(id)arg3;
@property(readonly) HMDCameraRecordingSessionTimelineManager *timelineManager; // @synthesize timelineManager=_timelineManager;
@property(retain) NSDictionary *homePresenceByPairingIdentity; // @synthesize homePresenceByPairingIdentity=_homePresenceByPairingIdentity;
- (void)handleNoMoreFragmentsAvailable;
- (void)handleFragment:(id)arg1;
@property NSUInteger currentFragmentNumber; // @synthesize currentFragmentNumber=_currentFragmentNumber;
- (id)initWithWorkQueue:(id)arg1 camera:(id)arg2 configuredFragmentDuration:(double)arg3 timelineManager:(id)arg4 factory:(id)arg5;

@end

