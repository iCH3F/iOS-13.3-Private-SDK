//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HomeKitDaemon/HMDEventTriggerSession.h>

#import <HomeKitDaemon/HMDHomeMessageReceiver-Protocol.h>
#import <HomeKitDaemon/HMFDumpState-Protocol.h>
#import <HomeKitDaemon/HMFLogging-Protocol.h>
#import <HomeKitDaemon/HMFTimerDelegate-Protocol.h>

@class HMDEventTriggerDevice, HMDEventTriggerExecutionSession, HMDTriggerConfirmationTimer, HomeKitEventTriggerUserConfirmationReceiverSessionEvent, NSMutableArray;

@interface HMDEventTriggerUserConfirmationSession : HMDEventTriggerSession <HMFDumpState, HMFLogging, HMFTimerDelegate, HMDHomeMessageReceiver>
{
    HMDEventTriggerExecutionSession *_executionSession;
    HMDEventTriggerDevice *_requestingDevice;
    HMDTriggerConfirmationTimer *_userResponseTimer;
    HomeKitEventTriggerUserConfirmationReceiverSessionEvent *_metricEvent;
    NSMutableArray *_metricSendEvents;
}

+ (id)logCategory;
@property(retain, nonatomic) NSMutableArray *metricSendEvents; // @synthesize metricSendEvents=_metricSendEvents;
@property(retain, nonatomic) HomeKitEventTriggerUserConfirmationReceiverSessionEvent *metricEvent; // @synthesize metricEvent=_metricEvent;
@property(retain, nonatomic) HMDTriggerConfirmationTimer *userResponseTimer; // @synthesize userResponseTimer=_userResponseTimer;
@property(readonly, nonatomic) HMDEventTriggerDevice *requestingDevice; // @synthesize requestingDevice=_requestingDevice;
@property(nonatomic) __weak HMDEventTriggerExecutionSession *executionSession; // @synthesize executionSession=_executionSession;
// - (void).cxx_destruct;
- (void)_sessionComplete;
- (void)_handleUserPermissionRemoveDialogRequest:(id)arg1;
- (void)_removeUserDialog:(id)arg1;
- (void)_handleUserPermissionRemoteResponse:(id)arg1;
- (void)_userResponse:(NSUInteger)arg1 completionHandler:(id /* CDUnknownBlockType */)arg2;
- (void)userDidConfirmExecute:(BOOL)arg1 completionHandler:(id /* CDUnknownBlockType */)arg2;
- (void)timerDidFire:(id)arg1;
- (void)_createBulletinNotification;
- (void)createBulletinNotification;
- (void)_askForUserPermissionFromDevice:(id)arg1 executionSessionID:(id)arg2;
- (void)askForUserPermission:(id)arg1;
- (void)_registerForMessages;
- (void)dealloc;
- (id)initWithSessionID:(id)arg1 eventTrigger:(id)arg2 workQueue:(id)arg3 msgDispatcher:(id)arg4 requestingDevice:(id)arg5;

@end

