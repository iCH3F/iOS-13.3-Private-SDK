//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HMFoundation/HMFObject.h>

#import <HomeKitDaemon/HMFLogging-Protocol.h>

@class CKRecord, HMFVersion, NSMutableDictionary, NSSet, NSString, NSUUID;
@protocol HMDBackingStoreObjectProtocol;

@interface HMDBackingStoreModelObject : HMFObject <HMFLogging, NSCopying>
{
    NSMutableDictionary *_reserved;
    BOOL _bsoDataVersionOverride;
    NSUUID *_uuid;
    NSUUID *_parentUUID;
    id <HMDBackingStoreObjectProtocol> _bsoDelegate;
    NSString *_bsoType;
    NSUInteger _bsoLogRowID;
    HMFVersion *_bsoDataVersion;
    NSUInteger _objectChangeType;
    CKRecord *_bsoRecord;
}

+ (BOOL)resolveInstanceMethod:(SEL)arg1;
+ (id)logCategory;
+ (id)formatValue:(id)arg1;
+ (id)objectFromCloud:(id)arg1 error:(id )arg2;
+ (id)objectFromData:(id)arg1 encoding:(NSUInteger)arg2 record:(id)arg3 error:(id )arg4;
+ (id)objectFromData:(id)arg1 encoding:(NSUInteger)arg2 rowID:(NSUInteger)arg3 error:(id )arg4;
+ (id)objectFromData:(id)arg1 encoding:(NSUInteger)arg2 error:(id )arg3;
+ (id)objectFromDictionaryData:(id)arg1 error:(id )arg2;
+ (id)objectFromDictionaryData:(id)arg1 type:(id)arg2 error:(id )arg3;
+ (Class)genericRepresentation;
+ (id)readonlyBefore;
+ (id)bsoSchemaHash;
+ (id)schemaHashRoot;
+ (id)properties;
+ (Class)backedObjectClass;
@property BOOL bsoDataVersionOverride; // @synthesize bsoDataVersionOverride=_bsoDataVersionOverride;
@property(retain, nonatomic) CKRecord *bsoRecord; // @synthesize bsoRecord=_bsoRecord;
@property(nonatomic) NSUInteger objectChangeType; // @synthesize objectChangeType=_objectChangeType;
@property(readonly, nonatomic) HMFVersion *bsoDataVersion; // @synthesize bsoDataVersion=_bsoDataVersion;
@property(readonly) NSUInteger bsoLogRowID; // @synthesize bsoLogRowID=_bsoLogRowID;
@property(retain, nonatomic) NSString *bsoType; // @synthesize bsoType=_bsoType;
@property(nonatomic) __weak id <HMDBackingStoreObjectProtocol> bsoDelegate; // @synthesize bsoDelegate=_bsoDelegate;
@property(retain, nonatomic) NSUUID *parentUUID; // @synthesize parentUUID=_parentUUID;
@property(retain, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
// - (void).cxx_destruct;
// - (id)copyWithZone:(_NSZone )arg1;
- (id)logIdentifier;
- (void)dumpDebug;
- (void)dumpDebug:(id)arg1;
- (void)clearVersionOverride;
- (id)debugString:(BOOL)arg1;
@property(readonly, copy) NSString *description;
- (id)defaultValueForPropertyNamed:(id)arg1 isSet:(BOOL )arg2;
- (void)setPropertyIfNotNil:(id)arg1 named:(id)arg2;
- (BOOL)diff:(id)arg1 differingFields:(id )arg2;
- (BOOL)merge:(id)arg1 error:(id )arg2;
- (id)merge:(id)arg1;
- (id)merge:(id)arg1 from:(NSUInteger)arg2;
- (BOOL)validForStorage;
- (BOOL)propertyIsAvailable:(id)arg1;
- (BOOL)propertyIsReadOnly:(id)arg1;
@property(readonly, nonatomic, getter=isReplayable) BOOL replayable;
@property(readonly, nonatomic, getter=isGenericRepresentation) BOOL isGenericRepresentation; // @dynamic isGenericRepresentation;
@property(readonly, nonatomic, getter=isReadOnly) BOOL isReadOnly; // @dynamic isReadOnly;
- (BOOL)propertyWasSet:(id)arg1;
- (id)setProperties;
- (void)setParentUUIDIfNotNil:(id)arg1;
- (BOOL)isEqual:(id)arg1;
@property(readonly) NSUInteger hash;
- (id)encodeForCloud:(id )arg1;
- (id)encodeWithEncoding:(NSUInteger)arg1 for:(NSUInteger)arg2 error:(id )arg3;
- (id)encodeFor:(NSUInteger)arg1 error:(id )arg2;
- (id)encodeWithEncoding:(NSUInteger)arg1 error:(id )arg2;
- (id)encodeWithError:(id )arg1;
- (id)encodeAsNSDictionaryFor:(NSUInteger)arg1 error:(id )arg2;
- (id)prepareFor:(NSUInteger)arg1;
- (id)validateType:(id)arg1 path:(id)arg2;
- (BOOL)_validateType:(id)arg1 error:(id )arg2;
@property(readonly, nonatomic) NSSet *dependentUUIDs; // @dynamic dependentUUIDs;
@property(readonly, nonatomic) BOOL bsoIgnoreModel;
@property(retain, nonatomic) HMFVersion *bsoIgnoredBefore;
- (id)backedObjectWithParent:(id)arg1 error:(id )arg2;
- (id)initWithUUID:(id)arg1 parentUUID:(id)arg2;
- (id)initWithUUID:(id)arg1;
- (id)initWithObjectChangeType:(NSUInteger)arg1 uuid:(id)arg2 parentUUID:(id)arg3;
- (id)initWithVersion:(id)arg1 changeType:(NSUInteger)arg2 uuid:(id)arg3 parentUUID:(id)arg4;
- (id)typeNameForDebug;

@end

