//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <MusicCarDisplayUI/_MCDNowPlayingContentManager.h>

#import <MusicCarDisplayUI/MPRequestResponseControllerDelegate-Protocol.h>

@class MCDPCModel;

@interface MCDPlayableContentPlaybackManager : _MCDNowPlayingContentManager <MPRequestResponseControllerDelegate, UITableViewDelegate, UITableViewDataSource>
{
    BOOL _seeking;
    MCDPCModel *_model;
    long long _playingItemIndex;
    long long _totalItemCount;
}

@property(nonatomic) long long totalItemCount; // @synthesize totalItemCount=_totalItemCount;
@property(nonatomic) long long playingItemIndex; // @synthesize playingItemIndex=_playingItemIndex;
@property(retain, nonatomic) MCDPCModel *model; // @synthesize model=_model;
@property(nonatomic, getter=isSeeking) BOOL seeking; // @synthesize seeking=_seeking;
// - (void).cxx_destruct;
- (void)nowPlayingViewControllerMore:(id)arg1;
- (BOOL)nowPlayingViewControllerCanShowMore:(id)arg1;
- (void)nowPlayingViewControllerAddToLibrary:(id)arg1;
- (BOOL)nowPlayingViewControllerCanShowAddToLibrary:(id)arg1;
- (id)_alertActionForFeedbackCommand:(id)arg1 fallbackTitle:(id)arg2;
- (void)_handleHamburgerActionSheet;
- (void)nowPlayingViewController:(id)arg1 didSendAction:(long long)arg2 state:(long long)arg3;
- (BOOL)nowPlayingViewController:(id)arg1 buttonShouldBeActive:(long long)arg2;
- (id)_skipIntervalButtonImageForInterval:(double)arg1 size:(long long)arg2;
- (BOOL)nowPlayingViewController:(id)arg1 shouldDisplayButton:(long long)arg2 withImage:(out id )arg3 existingIdentifier:(id)arg4 tinted:(out BOOL )arg5;
- (double)_jumpBackwardInterval;
- (double)_jumpForwardInterval;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)_updateTrackQueueIndex;
- (id)_itemAtIndexPath:(id)arg1;
- (id)_adjustedIndexPathForPlaybackQueue:(id)arg1;
- (long long)_numberOfItemsInPlaybackQueue;
- (void)_processResponse:(id)arg1 error:(id)arg2;
- (id)initWithDelegate:(id)arg1 dataSource:(id)arg2 bundleID:(id)arg3;

@end

