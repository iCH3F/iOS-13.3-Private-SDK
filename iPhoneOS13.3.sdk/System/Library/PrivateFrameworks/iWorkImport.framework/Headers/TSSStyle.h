//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <iWorkImport/TSPObject.h>

#import <iWorkImport/TSKModel-Protocol.h>
#import <iWorkImport/TSKTransformableObject-Protocol.h>
#import <iWorkImport/TSSPropertySource-Protocol.h>
#import <iWorkImport/TSSPropertyValueValidator-Protocol.h>
#import <iWorkImport/TSSStyleClient-Protocol.h>
#import <iWorkImport/TSSStyleObject-Protocol.h>

@class NSString, TSSPropertyMap, TSSStylesheet, TSUColor, TSURetainedPointerSet;

__attribute__((visibility("hidden")))
@interface TSSStyle : TSPObject <NSCopying, TSSPropertyValueValidator, TSSStyleObject, TSSPropertySource, TSSStyleClient, TSKModel, TSKTransformableObject>
{
    TSSPropertyMap *mOverridePropertyMap;
    TSSStylesheet *mStylesheet;
    NSString *mName;
    NSString *mStyleIdentifier;
    TSSStyle *mParent;
    BOOL mIsVariation;
    BOOL mWasUnarchivedAsOrphanVariation;
}

+ (double)fontSizeForFontSize:(double)arg1 scalingFactor:(double)arg2;
+ (BOOL)shouldWarnWithPersistingWithoutStylesheet;
+ (BOOL)validateObjectValue:(id )arg1 withClass:(Class)arg2 forProperty:(int)arg3;
+ (BOOL)validateDoubleValue:(double )arg1 forProperty:(int)arg2;
+ (BOOL)validateFloatValue:(float )arg1 forProperty:(int)arg2;
+ (BOOL)validateIntValueAsBool:(int )arg1 forProperty:(int)arg2;
+ (BOOL)validateIntValue:(int )arg1 forProperty:(int)arg2 min:(int)arg3 max:(int)arg4;
+ (BOOL)validateIntValue:(int )arg1 forProperty:(int)arg2;
+ (id)propertiesAllowingNSNull;
+ (BOOL)needsObjectUUID;
+ (id)defaultPropertyMap;
+ (id)defaultStyleWithContext:(id)arg1;
+ (double)defaultDoubleValueForProperty:(int)arg1;
+ (float)defaultFloatValueForProperty:(int)arg1;
+ (int)defaultIntValueForProperty:(int)arg1;
+ (id)defaultValueForProperty:(int)arg1;
+ (id)boxedDefaultValueForProperty:(int)arg1;
+ (id)description;
+ (id)properties;
+ (int)muxDefaultPropertyForSpecificProperty:(int)arg1;
+ (BOOL)p_isFillAdvanced:(id)arg1;
+ (void)addIgnoreAndPreserveRulesAndDocumentWarningsForPropertyMap:(id)arg1 withArchiver:(id)arg2;
+ (id)adjustPropertyMapForFontColorArchiving:(id)arg1 fallbackColor:(id)arg2;
+ (void)upgradeFontColorToIncludeCharacterFillInPropertyMap:(id)arg1 forOwningTSPObject:(id)arg2;
+ (id)validateFontInPropertyMap:(id)arg1 parentStyle:(id)arg2 checkedFontMap:(id)arg3;
+ (id)validateFontName:(id)arg1 size:(double)arg2 bold:(BOOL)arg3 italic:(BOOL)arg4 checkedFontMap:(id)arg5 newFontName:(id )arg6 newBold:(BOOL )arg7 newItalic:(BOOL )arg8;
+ (struct __CTFont )pCreateFontWithName:(id)arg1 fontSize:(double)arg2;
+ (id)pReplacementForMissingFontName:(id)arg1 outBold:(int )arg2 outItalic:(int )arg3 outQuiet:(BOOL )arg4;
@property(nonatomic) __weak TSSStylesheet *stylesheet; // @synthesize stylesheet=mStylesheet;
@property(readonly, nonatomic) TSSStyle *parent; // @synthesize parent=mParent;
// - (void).cxx_destruct;
- (id)parentStyleForFixingOrphanVariation;
- (void)setObjectUUID:(id)arg1;
- (void)replaceReferencedStylesUsingBlock:(id /* CDUnknownBlockType */)arg1;
- (id)referencedStyles;
- (id)propertyMapThatNeedsToBeTransformedWithTransformedObjects:(id)arg1;
- (id)boxedValueForProperty:(int)arg1 oldBoxedValue:(id)arg2 transformedByTransform:(CGAffineTransform)arg3;
- (BOOL)transformsFontSizes;
- (id)archivableRepresentationOfChangeSet:(id)arg1;
- (BOOL)validateObjectValue:(id )arg1 withClass:(Class)arg2 forProperty:(int)arg3;
- (BOOL)validateDoubleValue:(double )arg1 forProperty:(int)arg2;
- (BOOL)validateFloatValue:(float )arg1 forProperty:(int)arg2;
- (BOOL)validateIntValueAsBool:(int )arg1 forProperty:(int)arg2;
- (BOOL)validateIntValue:(int )arg1 forProperty:(int)arg2 min:(int)arg3 max:(int)arg4;
- (BOOL)validateIntValue:(int )arg1 forProperty:(int)arg2;
- (BOOL)isRelatedTo:(id)arg1;
- (BOOL)isAncestorOf:(id)arg1;
- (BOOL)isDescendentOf:(id)arg1;
- (BOOL)isParentOf:(id)arg1;
- (BOOL)isChildOf:(id)arg1;
@property(readonly, nonatomic) TSURetainedPointerSet *descendants;
@property(readonly, nonatomic) TSURetainedPointerSet *children;
@property(readonly, nonatomic) TSSStyle *rootIdentifiedAncestor;
@property(readonly, nonatomic) TSSStyle *firstNamedAncestor;
@property(readonly, nonatomic) TSSStyle *firstIdentifiedAncestor;
@property(readonly, nonatomic) TSSStyle *baseStyleForVariation;
@property(readonly, nonatomic) TSSStyle *rootAncestor;
- (BOOL)overridePropertyMapIsEqualTo:(id)arg1;
@property(readonly, nonatomic) TSSPropertyMap *overridePropertyMap;
- (BOOL)hasEqualValues:(id)arg1 forProperties:(id)arg2;
- (BOOL)hasEqualValuesToPropertyMap:(id)arg1 forProperties:(id)arg2;
- (BOOL)p_hasEqualValuesTo:(id)arg1 forProperty:(int)arg2;
- (BOOL)hasEqualPropertyValues:(id)arg1;
- (id)additionalPropertiesNeededForVariationWithPropertyMap:(id)arg1;
- (id)newOverridePropertyMapWithPropertyMap:(id)arg1;
- (id)overridePropertyMapWithPropertyMap:(id)arg1 overridePropertyMap:(id)arg2 collapseSourceOverrides:(BOOL)arg3;
- (id)fullPropertyMap;
- (id)copyPropertyMap;
- (id)propertyMapIgnoringStyle:(id)arg1;
- (id)propertyMap;
- (double)overrideCGFloatValueForProperty:(int)arg1;
- (double)overrideDoubleValueForProperty:(int)arg1;
- (float)overrideFloatValueForProperty:(int)arg1;
- (int)overrideIntValueForProperty:(int)arg1;
- (id)overrideValueForProperty:(int)arg1;
- (id)boxedOverrideValueForProperty:(int)arg1;
- (NSUInteger)overrideCount;
- (id)overriddenProperties;
- (BOOL)overridesAnyProperty;
- (BOOL)overridesProperty:(int)arg1;
- (BOOL)containsProperty:(int)arg1;
@property(readonly, nonatomic) NSString *contentTag;
- (BOOL)definesProperty:(int)arg1;
@property(readonly, nonatomic) BOOL isIdentified;
@property(readonly, nonatomic) BOOL isNamed;
- (void)removeAllValues;
- (void)removeValueForProperty:(int)arg1;
- (void)setValuesForProperties:(id)arg1;
- (void)setCGFloatValue:(double)arg1 forProperty:(int)arg2;
- (void)setDoubleValue:(double)arg1 forProperty:(int)arg2;
- (void)setFloatValue:(float)arg1 forProperty:(int)arg2;
- (void)setIntValue:(int)arg1 forProperty:(int)arg2;
- (void)setValue:(id)arg1 forProperty:(int)arg2;
- (void)setBoxedValue:(id)arg1 forProperty:(int)arg2;
- (id)valuesForProperties:(id)arg1;
- (double)CGFloatValueForProperty:(int)arg1;
- (double)doubleValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1;
- (int)intValueForProperty:(int)arg1;
- (id)objectForProperty:(int)arg1;
- (id)valueForProperty:(int)arg1;
- (id)boxedObjectForProperty:(int)arg1;
- (id)boxedValueForProperty:(int)arg1;
- (id)copyWithContext:(id)arg1 includeParentProperties:(BOOL)arg2;
- (id)copyWithContext:(id)arg1;
// - (id)copyWithZone:(_NSZone )arg1;
// - (id)copyWithZone:(_NSZone )arg1 context:(id)arg2;
- (id)copyFlattenedWithContext:(id)arg1;
- (BOOL)isEqualToStyle:(id)arg1 ignoreObjectContext:(BOOL)arg2 ignoreObjectUUID:(BOOL)arg3;
- (BOOL)isEqualToStyle:(id)arg1 ignoreObjectUUID:(BOOL)arg2;
- (BOOL)isEqualToStyle:(id)arg1 ignoreObjectContext:(BOOL)arg2;
- (BOOL)isEqual:(id)arg1;
@property(readonly) NSUInteger hash;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 name:(id)arg2 overridePropertyMap:(id)arg3 isVariation:(BOOL)arg4;
@property(readonly, nonatomic) BOOL isVariation;
@property(readonly, nonatomic) NSString *styleIdentifier;
@property(copy, nonatomic) NSString *name;
- (int)intValueForMUXedProperty:(int)arg1;
- (id)shapeStyleByRemovingShadowFrameAndReflectionForContext:(id)arg1;
- (id)shapeStyleByRemovingTextShadowForContext:(id)arg1;
- (id)constrainShapeStyleForContext:(id)arg1;
- (void)constrainStrokeForSwatchGeneration;
- (void)constrainShadowForSwatchGeneration;
- (void)fadeReflectionForSwatchGeneration;
- (void)saveToArchive:(struct StyleArchive )arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct StyleArchive )arg1 unarchiver:(id)arg2;
- (BOOL)allowsImplicitComponentOwnership;
- (id)componentRootObject;
- (void)saveParagraphStylePropertiesToArchive:(struct ParagraphStylePropertiesArchive )arg1 archiver:(id)arg2;
- (void)saveCharacterStylePropertiesToArchive:(struct CharacterStylePropertiesArchive )arg1 archiver:(id)arg2 archivingForCommand:(BOOL)arg3;
@property(readonly, nonatomic) TSUColor *fallbackFontColorWhenUnableToReadCharacterFillColor;
- (void)loadParagraphStylePropertiesIntoPropertyMap:(id)arg1 fromArchive:(const struct ParagraphStylePropertiesArchive )arg2 unarchiver:(id)arg3;
- (void)p_removeFontColorPropertyInPropertyMap:(id)arg1;
- (void)loadCharacterStylePropertiesIntoPropertyMap:(id)arg1 fromArchive:(const struct CharacterStylePropertiesArchive )arg2 unarchiver:(id)arg3;
- (void)upgradeOutlinesToStrokesForcingUpgradeForUnderspecifiedCharacterStyles:(BOOL)arg1;
- (void)p_upgradeOutlinesToStrokesInPropertyMap:(id)arg1 forcingUpgradeForUnderspecifiedCharacterStyles:(BOOL)arg2;
- (void)setBoolValue:(BOOL)arg1 forProperty:(int)arg2;
- (BOOL)boolValueForProperty:(int)arg1 defaultValue:(BOOL)arg2;
- (id)resolvedValueForProperty:(int)arg1 inStyles:(id)arg2;
- (BOOL)wantsCustomResolveLogicForProperty:(int)arg1 forStyles:(id)arg2;
- (id)validateFontWithCheckedFontMap:(id)arg1;
- (BOOL)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;

@end

