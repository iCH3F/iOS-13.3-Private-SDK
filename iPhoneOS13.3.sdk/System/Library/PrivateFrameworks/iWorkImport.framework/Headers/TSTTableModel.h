//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <iWorkImport/TSPObject.h>

#import <iWorkImport/TSCECalculationEngineRegistration-Protocol.h>
#import <iWorkImport/TSCEColumnRowUIDMapping-Protocol.h>
#import <iWorkImport/TSCEFormulaOwning-Protocol.h>
#import <iWorkImport/TSCEReferenceResolving-Protocol.h>
#import <iWorkImport/TSDMixing-Protocol.h>
#import <iWorkImport/TSTCustomStrokeProviding-Protocol.h>
#import <iWorkImport/TSTStyleProviding-Protocol.h>
#import <iWorkImport/TSTTableStrokeProviding-Protocol.h>
#import <iWorkImport/TSTTableTileCreating-Protocol.h>

@class NSArray, NSMapTable, NSString, NSUUID, TSCECalculationEngine, TSCEOwnerUidMapper, TSDStroke, TSTCategoryOwner, TSTCellDictionary, TSTCellStyle, TSTCellWillChangeDistributor, TSTColumnRowUIDMap, TSTConcurrentMutableCellUIDSet, TSTConditionalStyleFormulaOwner, TSTHiddenStateFormulaOwner, TSTHiddenStatesOwner, TSTMergeOwner, TSTPencilAnnotationOwner, TSTSortRuleReferenceTracker, TSTStrokeSidecar, TSTStructuredTextImportRecord, TSTTableDataStore, TSTTableFilterSet, TSTTableInfo, TSTTableSortOrder, TSTTableStyle, TSTTableStylePreset, TSWPParagraphStyle, TSWPShapeStyle, TSWPStorage;

__attribute__((visibility("hidden")))
@interface TSTTableModel : TSPObject <TSCEReferenceResolving, TSCEColumnRowUIDMapping, TSCECalculationEngineRegistration, TSCEFormulaOwning, TSDMixing, TSTCustomStrokeProviding, TSTStyleProviding, TSTTableStrokeProviding, TSTTableTileCreating>
{
    TSTHiddenStateFormulaOwner *_hiddenStateFormulaOwnerForRows;
    TSTHiddenStateFormulaOwner *_hiddenStateFormulaOwnerForColumns;
    TSTStrokeSidecar *_strokeSidecar;
    struct TSCECellRefSet _clearErrorCells;
//     struct os_unfair_lock_s _clearErrorLock;
    BOOL _wasCut;
    BOOL _headerRowsFrozen;
    BOOL _headerColumnsFrozen;
    BOOL _tableNameEnabled;
    BOOL _tableNameBorderEnabled;
    BOOL _repeatingHeaderRowsEnabled;
    BOOL _repeatingHeaderColumnsEnabled;
    BOOL _styleApplyClearsAll;
    BOOL _presetNeedsStrongOwnership;
    BOOL _wasUnarchivedFromAProvidedTable;
    struct TSUModelColumnIndex _numberOfHeaderColumns;
    struct TSUModelRowIndex _numberOfHeaderRows;
    struct TSUModelRowIndex _numberOfFooterRows;
    NSUInteger _versionAtUnarchive;
    TSCECalculationEngine *_calcEngine;
    TSTTableDataStore *_dataStore;
    double _defaultRowHeight;
    double _defaultColumnWidth;
    NSString *_tableName;
    double _tableNameHeight;
    NSUInteger _presetIDForUpgrade;
    TSTTableStylePreset *_tableStylePreset;
    TSTTableStyle *_tableStyle;
    TSTTableInfo *_tableInfo;
    TSTCellStyle *_bodyCellStyle;
    TSTCellStyle *_headerRowCellStyle;
    TSTCellStyle *_headerColumnCellStyle;
    TSTCellStyle *_footerRowCellStyle;
    TSTCellStyle *_categoryLevel1CellStyle;
    TSTCellStyle *_categoryLevel2CellStyle;
    TSTCellStyle *_categoryLevel3CellStyle;
    TSTCellStyle *_categoryLevel4CellStyle;
    TSTCellStyle *_categoryLevel5CellStyle;
    TSTCellStyle *_labelLevel1CellStyle;
    TSTCellStyle *_labelLevel2CellStyle;
    TSTCellStyle *_labelLevel3CellStyle;
    TSTCellStyle *_labelLevel4CellStyle;
    TSTCellStyle *_labelLevel5CellStyle;
    TSWPParagraphStyle *_bodyTextStyle;
    TSWPParagraphStyle *_headerRowTextStyle;
    TSWPParagraphStyle *_headerColumnTextStyle;
    TSWPParagraphStyle *_footerRowTextStyle;
    TSWPParagraphStyle *_categoryLevel1TextStyle;
    TSWPParagraphStyle *_categoryLevel2TextStyle;
    TSWPParagraphStyle *_categoryLevel3TextStyle;
    TSWPParagraphStyle *_categoryLevel4TextStyle;
    TSWPParagraphStyle *_categoryLevel5TextStyle;
    TSWPParagraphStyle *_labelLevel1TextStyle;
    TSWPParagraphStyle *_labelLevel2TextStyle;
    TSWPParagraphStyle *_labelLevel3TextStyle;
    TSWPParagraphStyle *_labelLevel4TextStyle;
    TSWPParagraphStyle *_labelLevel5TextStyle;
    TSWPParagraphStyle *_tableNameStyle;
    TSWPShapeStyle *_tableNameShapeStyle;
    TSTCellDictionary *_cellsPendingWrite;
    TSTConcurrentMutableCellUIDSet *_cellsToInvalidateAfterRecalc;
    TSTConcurrentMutableCellUIDSet *_cellsToInvalidateNonoverflowingAfterRecalc;
    TSTConditionalStyleFormulaOwner *_conditionalStyleFormulaOwner;
    TSTMergeOwner *_mergeOwner;
    TSTCategoryOwner *_categoryOwner;
    TSTHiddenStatesOwner *_hiddenStatesOwner;
    TSTTableSortOrder *_sortOrder;
    TSTSortRuleReferenceTracker *_sortRuleReferenceTracker;
    TSTColumnRowUIDMap *_columnRowUIDMap;
    TSTCellWillChangeDistributor *_cellWillChangeDistributor;
    TSWPStorage *_deprecatedProvider;
    NSMapTable *_commentHostingMap;
    TSTStructuredTextImportRecord *_textImportRecord;
    TSTTableFilterSet *_upgradeFilterSet;
    TSTPencilAnnotationOwner *_pencilAnnotationOwner;
    UUIDData_5fbc143e _tableUID;
    UUIDData_5fbc143e _fromTableUID;
    UUIDData_5fbc143e _fromGroupByUID;
}

+ (BOOL)needsObjectUUID;
+ (id)tableModelForTableUID:(const UUIDData_5fbc143e )arg1 withCalcEngine:(id)arg2;
@property(readonly, nonatomic) TSTPencilAnnotationOwner *pencilAnnotationOwner; // @synthesize pencilAnnotationOwner=_pencilAnnotationOwner;
@property(nonatomic) UUIDData_5fbc143e fromGroupByUID; // @synthesize fromGroupByUID=_fromGroupByUID;
@property(retain, nonatomic) TSTTableFilterSet *upgradeFilterSet; // @synthesize upgradeFilterSet=_upgradeFilterSet;
@property(retain, nonatomic) TSTStructuredTextImportRecord *textImportRecord; // @synthesize textImportRecord=_textImportRecord;
@property(nonatomic) BOOL wasUnarchivedFromAProvidedTable; // @synthesize wasUnarchivedFromAProvidedTable=_wasUnarchivedFromAProvidedTable;
@property(retain, nonatomic) TSWPStorage *deprecatedProvider; // @synthesize deprecatedProvider=_deprecatedProvider;
@property(readonly, nonatomic) TSTSortRuleReferenceTracker *sortRuleReferenceTracker; // @synthesize sortRuleReferenceTracker=_sortRuleReferenceTracker;
@property(readonly, nonatomic) TSTHiddenStatesOwner *hiddenStatesOwner; // @synthesize hiddenStatesOwner=_hiddenStatesOwner;
@property(readonly, nonatomic) TSTCategoryOwner *categoryOwner; // @synthesize categoryOwner=_categoryOwner;
@property(readonly, nonatomic) TSTMergeOwner *mergeOwner; // @synthesize mergeOwner=_mergeOwner;
@property(retain, nonatomic) TSTConditionalStyleFormulaOwner *conditionalStyleFormulaOwner; // @synthesize conditionalStyleFormulaOwner=_conditionalStyleFormulaOwner;
@property(readonly, nonatomic) TSTConcurrentMutableCellUIDSet *cellsToInvalidateNonoverflowingAfterRecalc; // @synthesize cellsToInvalidateNonoverflowingAfterRecalc=_cellsToInvalidateNonoverflowingAfterRecalc;
@property(readonly, nonatomic) TSTConcurrentMutableCellUIDSet *cellsToInvalidateAfterRecalc; // @synthesize cellsToInvalidateAfterRecalc=_cellsToInvalidateAfterRecalc;
@property(readonly, nonatomic) TSTCellDictionary *cellsPendingWrite; // @synthesize cellsPendingWrite=_cellsPendingWrite;
@property(retain, nonatomic) TSWPParagraphStyle *labelLevel5TextStyle; // @synthesize labelLevel5TextStyle=_labelLevel5TextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *labelLevel4TextStyle; // @synthesize labelLevel4TextStyle=_labelLevel4TextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *labelLevel3TextStyle; // @synthesize labelLevel3TextStyle=_labelLevel3TextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *labelLevel2TextStyle; // @synthesize labelLevel2TextStyle=_labelLevel2TextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *labelLevel1TextStyle; // @synthesize labelLevel1TextStyle=_labelLevel1TextStyle;
@property(retain, nonatomic) TSTCellStyle *labelLevel5CellStyle; // @synthesize labelLevel5CellStyle=_labelLevel5CellStyle;
@property(retain, nonatomic) TSTCellStyle *labelLevel4CellStyle; // @synthesize labelLevel4CellStyle=_labelLevel4CellStyle;
@property(retain, nonatomic) TSTCellStyle *labelLevel3CellStyle; // @synthesize labelLevel3CellStyle=_labelLevel3CellStyle;
@property(retain, nonatomic) TSTCellStyle *labelLevel2CellStyle; // @synthesize labelLevel2CellStyle=_labelLevel2CellStyle;
@property(retain, nonatomic) TSTCellStyle *labelLevel1CellStyle; // @synthesize labelLevel1CellStyle=_labelLevel1CellStyle;
@property(nonatomic) NSUInteger presetIDForUpgrade; // @synthesize presetIDForUpgrade=_presetIDForUpgrade;
@property(nonatomic) double defaultColumnWidth; // @synthesize defaultColumnWidth=_defaultColumnWidth;
@property(nonatomic) double defaultRowHeight; // @synthesize defaultRowHeight=_defaultRowHeight;
@property(nonatomic) UUIDData_5fbc143e fromTableUID; // @synthesize fromTableUID=_fromTableUID;
@property(nonatomic) UUIDData_5fbc143e tableUID; // @synthesize tableUID=_tableUID;
@property(retain, nonatomic) TSTTableDataStore *dataStore; // @synthesize dataStore=_dataStore;
@property(nonatomic) TSCECalculationEngine *calcEngine; // @synthesize calcEngine=_calcEngine;
@property(readonly, nonatomic) NSUInteger versionAtUnarchive; // @synthesize versionAtUnarchive=_versionAtUnarchive;
- (id).cxx_construct;
// - (void).cxx_destruct;
- (void)didApplyConcurrentCellMap:(id)arg1;
- (void)prepareToApplyConcurrentCellMap:(id)arg1;
- (int)shouldAllowApplyConcurrentCellMap:(id)arg1;
- (void)setCellsConcurrently:(id)arg1 ignoreFormula:(BOOL)arg2 clearImportWarnings:(BOOL)arg3;
- (void)accumulateCurrentCellsConcurrently:(id)arg1 suppressCellBorder:(BOOL)arg2;
- (BOOL)auditRowInfoCellCountsReturningResult:(id )arg1;
- (BOOL)auditDatalistDuplicationReturningResult:(id )arg1;
- (BOOL)confirmRefCountsReturningResult:(id )arg1;
- (BOOL)auditTilesForRowOverlapAndExtensionPastTableBounds:(struct TSUCellCoord)arg1 result:(id )arg2;
- (void)enumerateDataStoreCellsWithBlock:(id /* CDUnknownBlockType */)arg1;
- (void)p_iterateDataStoreCellsInRegion:(id)arg1 searchFlags:(NSUInteger)arg2 usingBlock:(id /* CDUnknownBlockType */)arg3;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1 context:(id)arg2;
- (struct TSUModelCellCoord)baseCellCoordForCellContainingRichTextStorage:(id)arg1;
- (id)allRichTextStorages;
- (BOOL)hasControls;
- (BOOL)hasImportWarnings;
- (void)p_upgradeMerges;
- (void)upgradeFromPreUFF;
- (void)upgradeFormatsForCustomFormatListU2_0;
- (void)assertCollaborationConvergence;
- (void)_removeAnnotationsFromDeleteRange:(struct TSUModelCellRect)arg1;
- (void)validate;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)updateTableRowColumnStylesWithBlock:(id /* CDUnknownBlockType */)arg1;
- (void)mapTableStylesToStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)clearErrors;
- (void)addCellRefToClearError:(const struct TSCECellRef )arg1;
- (struct TSCECellCoordSet)cellsModifiedInCurrentRecalcCycle;
- (BOOL)hasFormulas;
- (void)prepareForPasteWithCalculationEngine:(id)arg1 sourceOffset:(struct TSUColumnRowOffset)arg2 bakeFormulas:(BOOL)arg3;
- (void)registerAllFormulasWithCalculationEngine:(id)arg1 wasCrossDocumentPaste:(BOOL)arg2 infoIsCategorized:(BOOL)arg3 wasUndo:(BOOL)arg4;
- (void)copyPasteboardCustomFormatsFromTableModel:(id)arg1;
- (void)makePasteboardCustomFormatList;
- (void)reassignPasteboardCustomFormatKeys;
- (void)addPasteboardCustomFormatsToDocumentAndUpdateCells;
- (void)remapTableUIDsInFormulasWithMap:(const UUIDMap_b66c2694 )arg1 calcEngine:(id)arg2 bakeForBadRefs:(BOOL)arg3;
- (void)setFormulaOwnerUIDsWithMap:(id)arg1 shouldStealReferences:(BOOL)arg2;
- (int)getValue:(out struct TSCEValue )arg1 atBaseCellCoord:(struct TSUModelCellCoord)arg2 fetchRichTextAttributesIfPlainText:(BOOL)arg3;
- (id)cellValueAtBaseCellCoord:(struct TSUModelCellCoord)arg1;
- (id)cellValueFromCell:(id)arg1 atBaseCellCoord:(struct TSUModelCellCoord)arg2;
- (struct TSCEValue)tsceValueFromCell:(id)arg1 atBaseCellCoord:(struct TSUModelCellCoord)arg2 fetchRichTextAttributesIfPlainText:(BOOL)arg3;
- (id)strokeLayerForBottomOfRow:(unsigned int)arg1;
- (id)strokeLayerForTopOfRow:(unsigned int)arg1;
- (id)strokeLayerForRightSideOfColumn:(unsigned short)arg1;
- (id)strokeLayerForLeftSideOfColumn:(unsigned short)arg1;
- (void)setStroke:(id)arg1 forRightOfColumn:(unsigned short)arg2 order:(int)arg3 rowRange:(struct TSTSimpleRange)arg4;
- (void)setStroke:(id)arg1 forLeftOfColumn:(unsigned short)arg2 order:(int)arg3 rowRange:(struct TSTSimpleRange)arg4;
- (void)setStroke:(id)arg1 forBottomOfRow:(unsigned int)arg2 order:(int)arg3 columnRange:(struct TSTSimpleRange)arg4;
- (void)setStroke:(id)arg1 forTopOfRow:(unsigned int)arg2 order:(int)arg3 columnRange:(struct TSTSimpleRange)arg4;
- (void)setStroke:(id)arg1 forRightOfColumn:(unsigned short)arg2 order:(int)arg3;
- (void)setStroke:(id)arg1 forLeftOfColumn:(unsigned short)arg2 order:(int)arg3;
- (void)setStroke:(id)arg1 forBottomOfRow:(unsigned int)arg2 order:(int)arg3;
- (void)setStroke:(id)arg1 forTopOfRow:(unsigned int)arg2 order:(int)arg3;
- (id)cellBorderAtCellID:(struct TSUCellCoord)arg1;
- (int)maxStrokeOrder;
@property(readonly, nonatomic) TSDStroke *categoryLevel5InteriorStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel4InteriorStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel3InteriorStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel2InteriorStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel1InteriorStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel5BottomStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel4BottomStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel3BottomStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel2BottomStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel1BottomStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel5LabelSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel4LabelSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel3LabelSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel2LabelSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel1LabelSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel5TopStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel4TopStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel3TopStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel2TopStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel1TopStroke;
@property(readonly, nonatomic) TSDStroke *footerRowSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBorderStroke;
@property(readonly, nonatomic) TSDStroke *headerRowSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBorderStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBorderStroke;
@property(readonly, nonatomic) TSDStroke *bodyRowStrokeEvenIfNotVisible;
@property(readonly, nonatomic) TSDStroke *bodyRowStroke;
@property(readonly, nonatomic) TSDStroke *bodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *defaultHorizontalBorderStrokeEvenIfNotVisible;
@property(readonly, nonatomic) TSDStroke *defaultVerticalBorderStroke;
@property(readonly, nonatomic) TSDStroke *defaultHorizontalBorderStroke;
- (id)fillForColumn:(struct TSUModelColumnIndex)arg1;
- (id)fillForRow:(struct TSUModelRowIndex)arg1;
- (id)regionForValueOrCommentCellsInBaseCellRect:(struct TSUModelCellRect)arg1;
- (id)characterFillAtBaseCellCoord:(struct TSUModelCellCoord)arg1 optionalCell:(id)arg2;
- (id)stringAtBaseCellCoord:(struct TSUModelCellCoord)arg1 optionalCell:(id)arg2;
- (void)setHidingState:(unsigned char)arg1 atColumnIndex:(const struct TSUModelColumnIndex )arg2;
- (void)setHidingState:(unsigned char)arg1 atRowIndex:(const struct TSUModelRowIndex )arg2;
- (id)hiddenStateFormulaOwnerForColumns;
- (id)hiddenStateFormulaOwnerForRows;
@property(readonly, nonatomic) BOOL upgradeNeedsToUpdateFilterSetForImport;
@property(readonly, nonatomic) UUIDData_5fbc143e upgradeHiddenFormulaOwnerForRowsUID;
@property(readonly, nonatomic) UUIDData_5fbc143e upgradeHiddenFormulaOwnerForColumnsUID;
- (void)upgradeHiddenStates;
- (unsigned char)headerInfo_hidingActionForColumnAtIndex:(struct TSUModelColumnIndex)arg1;
- (unsigned char)headerInfo_hidingActionForRowAtIndex:(struct TSUModelRowIndex)arg1;
- (void)swapRowAtIndex:(struct TSUModelRowIndex)arg1 withRowAtIndex:(struct TSUModelRowIndex)arg2;
- (void)moveBaseColumnRange:(_NSRange)arg1 toColumnIndex:(struct TSUModelColumnIndex)arg2;
- (void)moveBaseRowRange:(_NSRange)arg1 toRowIndex:(struct TSUModelRowIndex)arg2;
- (void)removeAnnotationsFromColumnsAtBaseIndexes:(id)arg1;
- (void)removeAnnotationsFromRowsAtBaseIndexes:(id)arg1;
- (void)removeColumnsAtBaseIndexes:(id)arg1;
- (void)removeRowsAtBaseIndexes:(id)arg1;
- (void)removeColumnsAtIndex:(struct TSUModelColumnIndex)arg1 count:(struct TSUModelColumnIndex)arg2;
- (void)removeRowsAtIndex:(struct TSUModelRowIndex)arg1 count:(struct TSUModelRowIndex)arg2;
- (int)insertRowsAtIndex:(struct TSUModelRowIndex)arg1 uids:(const vector_4dc5f307 )arg2 metadatas:(id)arg3 tableArea:(NSUInteger)arg4 unsetFilterHidingAction:(BOOL)arg5;
- (int)insertColumnsAtIndex:(struct TSUModelColumnIndex)arg1 uids:(const vector_4dc5f307 )arg2 metadatas:(id)arg3 tableArea:(NSUInteger)arg4;
- (int)insertRowsInBaseRange:(_NSRange)arg1 uids:(const vector_4dc5f307 )arg2 metadata:(id)arg3 unsetFilterHidingAction:(BOOL)arg4;
- (struct TSUModelCellRect)mergedRangeForBaseCellCoord:(struct TSUModelCellCoord)arg1;
- (BOOL)hasNamesInHeaders;
- (struct TSUModelCellRect)bottomCornerRange;
- (struct TSUModelCellRect)topCornerRange;
- (struct TSUModelCellRect)footerRowRange;
- (struct TSUModelCellRect)actualHeaderColumnRange;
- (struct TSUModelCellRect)headerColumnRange;
- (struct TSUModelCellRect)headerRowRange;
- (struct TSUModelCellRect)bodyRowRange;
- (struct TSUModelCellRect)bodyColumnRange;
- (struct TSUModelCellRect)bodyRange;
- (struct TSUModelCellRect)range;
- (double)computeDefaultFontHeightForTableStyleArea:(NSUInteger)arg1;
- (void)computeDefaultRowHeight;
@property(readonly, retain, nonatomic) NSArray *columnWidths;
@property(readonly, retain, nonatomic) NSArray *rowHeights;
- (void)setWidth:(double)arg1 ofColumn:(struct TSUModelColumnIndex)arg2;
- (void)setHeight:(double)arg1 ofRow:(struct TSUModelRowIndex)arg2;
- (void)setWidth:(double)arg1 ofColumnAtIndex:(struct TSUModelColumnIndex)arg2;
- (void)setHeight:(double)arg1 ofRowAtIndex:(struct TSUModelRowIndex)arg2;
- (double)widthOfColumnAtIndex:(struct TSUModelColumnIndex)arg1 isDefault:(out BOOL )arg2;
- (double)heightOfRowAtIndex:(struct TSUModelRowIndex)arg1 isDefault:(out BOOL )arg2;
- (NSUInteger)numberOfPopulatedCells;
- (id)conditionalStyleSetAtBaseCellCoord:(struct TSUModelCellCoord)arg1;
- (id)textStyleAtBaseCellCoord:(struct TSUModelCellCoord)arg1 isDefault:(out BOOL )arg2;
- (id)cellStyleAtBaseCellCoord:(struct TSUModelCellCoord)arg1 isDefault:(out BOOL )arg2;
- (int)setTextStyle:(id)arg1 atBaseCellCoord:(struct TSUModelCellCoord)arg2;
- (int)setCellStyle:(id)arg1 atBaseCellCoord:(struct TSUModelCellCoord)arg2;
- (BOOL)textStyle:(id)arg1 isEqualToDefaultTextStyleForBaseCellCoord:(struct TSUModelCellCoord)arg2;
- (BOOL)cellStyle:(id)arg1 isEqualToDefaultCellStyleForBaseCellCoord:(struct TSUModelCellCoord)arg2;
- (id)textStyleForCellWithEmptyStyleAtBaseCellCoord:(struct TSUModelCellCoord)arg1 isDefault:(out BOOL )arg2;
- (id)defaultTextStyleForTableStyleArea:(NSUInteger)arg1;
- (id)defaultTextStyleForBaseCellCoord:(struct TSUModelCellCoord)arg1;
- (id)cellStyleForCellWithEmptyStyleAtBaseCellCoord:(struct TSUModelCellCoord)arg1 isDefault:(out BOOL )arg2;
- (id)defaultCellStyleForTableStyleArea:(NSUInteger)arg1;
- (id)defaultCellStyleForBaseCellCoord:(struct TSUModelCellCoord)arg1;
- (id)textStyleOfColumnAtIndex:(struct TSUModelColumnIndex)arg1 isDefault:(out BOOL )arg2;
- (id)cellStyleOfColumnAtIndex:(struct TSUModelColumnIndex)arg1 isDefault:(out BOOL )arg2;
- (int)setTextStyle:(id)arg1 ofColumnAtIndex:(struct TSUModelColumnIndex)arg2;
- (int)setCellStyle:(id)arg1 ofColumnAtIndex:(struct TSUModelColumnIndex)arg2;
- (id)textStyleOfRowAtIndex:(struct TSUModelRowIndex)arg1 isDefault:(out BOOL )arg2;
- (id)cellStyleOfRowAtIndex:(struct TSUModelRowIndex)arg1 isDefault:(out BOOL )arg2;
- (int)setTextStyle:(id)arg1 ofRowAtIndex:(struct TSUModelRowIndex)arg2;
- (int)setCellStyle:(id)arg1 ofRowAtIndex:(struct TSUModelRowIndex)arg2;
- (void)postCommentNotificationForStorage:(id)arg1 baseCellCoord:(struct TSUModelCellCoord)arg2 notificationKey:(id)arg3;
- (int)removeCommentStorageAtBaseCellCoord:(struct TSUModelCellCoord)arg1;
- (int)setCommentStorage:(id)arg1 atBaseCellCoord:(struct TSUModelCellCoord)arg2;
- (id)commentHostingAtBaseCellCoord:(struct TSUModelCellCoord)arg1;
- (id)commentHostingAtBaseCellCoord:(struct TSUModelCellCoord)arg1 forCommentStorage:(id)arg2;
- (void)clearCommentHostingMapForCommentStorage:(id)arg1;
- (BOOL)hasCommentStorageAtBaseCellCoord:(struct TSUModelCellCoord)arg1;
- (BOOL)hasCommentAtBaseCellCoord:(struct TSUModelCellCoord)arg1;
- (NSUInteger)numberOfComments;
- (int)cellValueTypeAtBaseCellCoord:(struct TSUModelCellCoord)arg1;
- (id)formatAtBaseCellCoord:(struct TSUModelCellCoord)arg1 formatIsExplicitOut:(BOOL )arg2;
- (int)setCellsWithBaseCellMap:(id)arg1 ignoreFormulas:(BOOL)arg2 skipDirtyingNonFormulaCells:(BOOL)arg3;
- (int)p_shouldAllowApplyBaseCellMap:(id)arg1;
- (struct TSCEFormula )formulaAtBaseCellCoord:(struct TSUModelCellCoord)arg1;
- (int)setCell:(id)arg1 atBaseCellCoord:(struct TSUModelCellCoord)arg2 ignoreFormula:(BOOL)arg3 clearImportWarnings:(BOOL)arg4;
- (int)p_shouldAllowSetCell:(id)arg1 atBaseCellCoord:(struct TSUModelCellCoord)arg2;
- (BOOL)hasFormulaAtBaseCellCoord:(struct TSUModelCellCoord)arg1;
- (void)updateCalculationEngineForFormula:(struct TSCEFormula )arg1 inBaseCellCoord:(struct TSUModelCellCoord)arg2;
- (id)cellAtBaseCellCoord:(struct TSUModelCellCoord)arg1;
- (int)getCell:(id)arg1 atBaseCellCoord:(struct TSUModelCellCoord)arg2;
- (int)getCell:(id)arg1 atBaseCellCoord:(struct TSUModelCellCoord)arg2 suppressCellBorder:(BOOL)arg3;
- (BOOL)cellExistsAtBaseCellCoord:(struct TSUModelCellCoord)arg1;
- (int)getDefaultCell:(out id)arg1 forBaseCellCoord:(struct TSUModelCellCoord)arg2;
- (int)getDefaultCell:(out id)arg1 forTableStyleArea:(NSUInteger)arg2;
- (id)tableAreasForBaseCellRect:(struct TSUModelCellRect)arg1;
- (NSUInteger)tableStyleAreaForRow:(struct TSUModelRowIndex)arg1;
- (NSUInteger)tableStyleAreaForBaseCellCoord:(struct TSUModelCellCoord)arg1;
- (NSUInteger)tableAreaForColumn:(struct TSUModelColumnIndex)arg1;
- (NSUInteger)tableAreaForRow:(struct TSUModelRowIndex)arg1;
- (NSUInteger)tableAreaForBaseCellCoord:(struct TSUModelCellCoord)arg1;
- (struct TSUModelCellRect)cellRangeForTableArea:(NSUInteger)arg1;
- (id)unnamedTableString;
- (void)setStorageParentToInfo:(id)arg1;
@property(readonly, copy) NSString *description;
@property(nonatomic) BOOL wasCut; // @synthesize wasCut=_wasCut;
- (void)clearFromGroupByUID;
- (void)clearFromTableUID;
@property(readonly, nonatomic) NSUUID *nsTableUID;
@property(readonly, nonatomic) TSTCellWillChangeDistributor *cellWillChangeDistributor; // @synthesize cellWillChangeDistributor=_cellWillChangeDistributor;
- (void)resetSortRuleReferenceTrackerForInsert;
@property(copy, nonatomic) TSTTableSortOrder *sortOrder; // @synthesize sortOrder=_sortOrder;
@property(readonly, retain, nonatomic) NSMapTable *commentHostingMap; // @synthesize commentHostingMap=_commentHostingMap;
- (id)metadataForColumnIndex:(struct TSUModelColumnIndex)arg1 hidingAction:(unsigned char)arg2;
- (id)metadataForRowIndex:(struct TSUModelRowIndex)arg1 hidingAction:(unsigned char)arg2;
@property(readonly, nonatomic) TSDStroke *tableNameBorderStroke;
@property(readonly, nonatomic) int tableWritingDirection;
@property(readonly, nonatomic) BOOL hasAlternatingRows;
@property(readonly, nonatomic) BOOL hasTableBorder;
@property(readonly, nonatomic) TSCEOwnerUidMapper *identityOwnerUIDMapper;
@property(readonly, nonatomic) TSCEOwnerUidMapper *ownerUIDMapper;
@property(retain, nonatomic) TSTColumnRowUIDMap *columnRowUIDMap; // @synthesize columnRowUIDMap=_columnRowUIDMap;
@property(retain, nonatomic) TSWPShapeStyle *tableNameShapeStyle; // @synthesize tableNameShapeStyle=_tableNameShapeStyle;
@property(retain, nonatomic) TSWPParagraphStyle *tableNameStyle; // @synthesize tableNameStyle=_tableNameStyle;
- (void)setlabelLevel5TextStyle:(id)arg1;
- (void)setlabelLevel4TextStyle:(id)arg1;
- (void)setlabelLevel3TextStyle:(id)arg1;
- (void)setlabelLevel2TextStyle:(id)arg1;
- (void)setlabelLevel1TextStyle:(id)arg1;
@property(retain, nonatomic) TSWPParagraphStyle *categoryLevel5TextStyle; // @synthesize categoryLevel5TextStyle=_categoryLevel5TextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *categoryLevel4TextStyle; // @synthesize categoryLevel4TextStyle=_categoryLevel4TextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *categoryLevel3TextStyle; // @synthesize categoryLevel3TextStyle=_categoryLevel3TextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *categoryLevel2TextStyle; // @synthesize categoryLevel2TextStyle=_categoryLevel2TextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *categoryLevel1TextStyle; // @synthesize categoryLevel1TextStyle=_categoryLevel1TextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *footerRowTextStyle; // @synthesize footerRowTextStyle=_footerRowTextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *headerColumnTextStyle; // @synthesize headerColumnTextStyle=_headerColumnTextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *headerRowTextStyle; // @synthesize headerRowTextStyle=_headerRowTextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *bodyTextStyle; // @synthesize bodyTextStyle=_bodyTextStyle;
- (void)setlabelLevel5CellStyle:(id)arg1;
- (void)setlabelLevel4CellStyle:(id)arg1;
- (void)setlabelLevel3CellStyle:(id)arg1;
- (void)setlabelLevel2CellStyle:(id)arg1;
- (void)setlabelLevel1CellStyle:(id)arg1;
@property(retain, nonatomic) TSTCellStyle *categoryLevel5CellStyle; // @synthesize categoryLevel5CellStyle=_categoryLevel5CellStyle;
@property(retain, nonatomic) TSTCellStyle *categoryLevel4CellStyle; // @synthesize categoryLevel4CellStyle=_categoryLevel4CellStyle;
@property(retain, nonatomic) TSTCellStyle *categoryLevel3CellStyle; // @synthesize categoryLevel3CellStyle=_categoryLevel3CellStyle;
@property(retain, nonatomic) TSTCellStyle *categoryLevel2CellStyle; // @synthesize categoryLevel2CellStyle=_categoryLevel2CellStyle;
@property(retain, nonatomic) TSTCellStyle *categoryLevel1CellStyle; // @synthesize categoryLevel1CellStyle=_categoryLevel1CellStyle;
@property(retain, nonatomic) TSTCellStyle *footerRowCellStyle; // @synthesize footerRowCellStyle=_footerRowCellStyle;
@property(retain, nonatomic) TSTCellStyle *headerColumnCellStyle; // @synthesize headerColumnCellStyle=_headerColumnCellStyle;
@property(retain, nonatomic) TSTCellStyle *headerRowCellStyle; // @synthesize headerRowCellStyle=_headerRowCellStyle;
@property(retain, nonatomic) TSTCellStyle *bodyCellStyle; // @synthesize bodyCellStyle=_bodyCellStyle;
@property(retain, nonatomic) TSTTableStyle *tableStyle; // @synthesize tableStyle=_tableStyle;
@property(retain, nonatomic) TSTTableStylePreset *tableStylePreset; // @synthesize tableStylePreset=_tableStylePreset;
@property(nonatomic) struct TSUModelColumnIndex numberOfHeaderColumns; // @synthesize numberOfHeaderColumns=_numberOfHeaderColumns;
@property(nonatomic) struct TSUModelRowIndex numberOfFooterRows; // @synthesize numberOfFooterRows=_numberOfFooterRows;
@property(nonatomic) struct TSUModelRowIndex numberOfHeaderRows; // @synthesize numberOfHeaderRows=_numberOfHeaderRows;
@property(nonatomic) TSTTableInfo *tableInfo; // @synthesize tableInfo=_tableInfo;
@property(nonatomic) BOOL headerColumnsFrozen; // @synthesize headerColumnsFrozen=_headerColumnsFrozen;
@property(nonatomic) BOOL headerRowsFrozen; // @synthesize headerRowsFrozen=_headerRowsFrozen;
@property(nonatomic) BOOL styleApplyClearsAll; // @synthesize styleApplyClearsAll=_styleApplyClearsAll;
@property(nonatomic) BOOL repeatingHeaderColumnsEnabled; // @synthesize repeatingHeaderColumnsEnabled=_repeatingHeaderColumnsEnabled;
@property(nonatomic) BOOL repeatingHeaderRowsEnabled; // @synthesize repeatingHeaderRowsEnabled=_repeatingHeaderRowsEnabled;
@property(nonatomic) double tableNameHeight; // @synthesize tableNameHeight=_tableNameHeight;
@property(nonatomic) BOOL tableNameBorderEnabled; // @synthesize tableNameBorderEnabled=_tableNameBorderEnabled;
@property(nonatomic) BOOL tableNameEnabled; // @synthesize tableNameEnabled=_tableNameEnabled;
@property(retain, nonatomic) NSString *tableName; // @synthesize tableName=_tableName;
@property(readonly, nonatomic) UUIDData_5fbc143e conditionalStyleFormulaOwnerUID;
@property(nonatomic) BOOL presetNeedsStrongOwnership; // @synthesize presetNeedsStrongOwnership=_presetNeedsStrongOwnership;
- (CDStruct_c0454aff)p_tableSize;
@property(readonly, nonatomic) struct TSUModelColumnIndex numberOfColumns;
@property(readonly, nonatomic) struct TSUModelRowIndex numberOfRows;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromUnarchiver:(id)arg1;
- (void)upgradeDuringDocumentUpgradeIfNeeded:(NSUInteger)arg1 tableInfo:(id)arg2;
- (BOOL)p_auditTableHealthUpgradingFromVersion:(NSUInteger)arg1;
- (BOOL)p_auditTilesForRowOverlapAndExtensionPastTableBoundsWithVersion:(NSUInteger)arg1;
- (void)p_rebuildTheTable:(id)arg1;
- (void)p_upgradeDefaultCellStylesForStrokeSidecar;
- (void)dealloc;
- (id)initWithContext:(id)arg1 fromSourceModel:(id)arg2 region:(id)arg3 tableInfo:(id)arg4 waitForCalcEngine:(BOOL)arg5 formulaCoordSpace:(long long)arg6;
- (id)initWithContext:(id)arg1 fromSourceModel:(id)arg2 region:(id)arg3 tableInfo:(id)arg4 waitForCalcEngine:(BOOL)arg5;
- (id)initWithContext:(id)arg1 rows:(unsigned int)arg2 columns:(unsigned int)arg3 styles:(id)arg4 stylePreset:(id)arg5 tableInfo:(id)arg6;
- (id)initWithContext:(id)arg1 rowUids:(const vector_4dc5f307 )arg2 columnUids:(const vector_4dc5f307 )arg3 styles:(id)arg4 stylePreset:(id)arg5 tableInfo:(id)arg6;
- (id)initWithContext:(id)arg1 tableUID:(UUIDData_5fbc143e)arg2 columnRowUIDMap:(id)arg3 styles:(id)arg4 stylePreset:(id)arg5 tableInfo:(id)arg6;
- (id)newCell;
- (void)setStyleNetwork:(id)arg1;
- (void)p_clearDefaultStyles;
- (void)setStylesheetForUpgradeToSingleStylesheet:(id)arg1;
- (void)willClose;
@property(retain, nonatomic) TSTStrokeSidecar *strokeSidecar;
- (id)UIDSetForRange:(_NSRange)arg1 isRows:(BOOL)arg2;
- (vector_4dc5f307)UIDsForRange:(_NSRange)arg1 isRows:(BOOL)arg2;
- (id)mutableIndexesForUIDs:(const vector_4dc5f307 )arg1 isRows:(BOOL)arg2;
- (vector_4dc5f307)UIDsForIndexes:(id)arg1 isRows:(BOOL)arg2;
- (UUIDData_5fbc143e)UIDForIndex:(unsigned int)arg1 isRows:(BOOL)arg2;
- (UUIDRect_d701734b)cellUIDRangeForCellRange:(struct TSUCellRect)arg1;
- (struct TSUCellRect)cellRangeForUIDRange:(const UUIDRect_d701734b )arg1;
- (id)mutableIndexesForUIDSet:(id)arg1 isRows:(BOOL)arg2 notFoundUIDs:(id)arg3;
- (id)mutableIndexesForUIDSet:(id)arg1 isRows:(BOOL)arg2;
- (id)UIDSetForIndexes:(id)arg1 isRows:(BOOL)arg2;
- (vector_4dc5f307)prunedRowUIDsFromRowUIDs:(const vector_4dc5f307 )arg1;
- (vector_4dc5f307)prunedColumnUIDsFromColumnUIDs:(const vector_4dc5f307 )arg1;
- (vector_4dc5f307)columnUIDs;
- (_NSRange)columnRangeForUIDs:(const vector_4dc5f307 )arg1;
- (vector_4dc5f307)columnUIDsForColumnRange:(_NSRange)arg1;
- (id)mutableColumnIndexesForUIDs:(const vector_4dc5f307 )arg1;
- (id)columnIndexesForUIDs:(const vector_4dc5f307 )arg1;
- (vector_4dc5f307)columnUIDsForColumnIndexes:(id)arg1;
- (unsigned short)columnIndexForColumnUID:(const UUIDData_5fbc143e )arg1;
- (UUIDData_5fbc143e)columnUIDForColumnIndex:(unsigned short)arg1;
- (vector_4dc5f307)rowUIDs;
- (_NSRange)rowRangeForUIDs:(const vector_4dc5f307 )arg1;
- (vector_4dc5f307)rowUIDsForRowRange:(_NSRange)arg1;
- (id)mutableRowIndexesForUIDs:(const vector_4dc5f307 )arg1;
- (id)rowIndexesForUIDs:(const vector_4dc5f307 )arg1;
- (vector_4dc5f307)rowUIDsForRowIndexes:(id)arg1;
- (unsigned int)rowIndexForRowUID:(const UUIDData_5fbc143e )arg1;
- (UUIDData_5fbc143e)rowUIDForRowIndex:(unsigned int)arg1;
- (void)resetDependenciesForCell:(struct TSUCellCoord)arg1;
- (struct TSCERangeCoordinate)tableRangeCoordinate;
- (BOOL)hasCellID:(struct TSUCellCoord)arg1;
- (id)sheetName;
- (UUIDData_5fbc143e)groupByUID;
- (UUIDData_5fbc143e)resolverUID;
- (id)drawableInfo;
- (id)objectToArchiveInDependencyTracker;
- (void)invalidateForCalcEngine:(id)arg1;
- (void)writeResultsForCalcEngine:(id)arg1;
- (CDStruct_2a4d9400)recalculateForCalcEngine:(id)arg1 atFormulaCoord:(struct TSUCellCoord)arg2 recalcOptions:(CDStruct_3d581f42)arg3;
- (id)linkedResolver;
- (UUIDData_5fbc143e)ownerUID;
- (unsigned short)ownerKind;
- (void)notifyTableOfNewResults;
- (void)performReadForOneOffFormulaEvaluation:(id)arg1 forCellCoord:(struct TSUCellCoord)arg2;
- (void)unregisterFromCalcEngine:(id)arg1;
- (int)registerWithCalcEngine:(id)arg1;
- (BOOL)isRegisteredWithCalcEngine:(id)arg1;
- (BOOL)registerLast;
- (UUIDData_5fbc143e)formulaOwnerUID;
- (id)formulaOwner;
- (void)registerWithCalcEngineForDocumentLoad:(id)arg1;
- (void)setNewFormulaOwnerUIDsForDuplicatesWithCalcEngine:(id)arg1;

@end

