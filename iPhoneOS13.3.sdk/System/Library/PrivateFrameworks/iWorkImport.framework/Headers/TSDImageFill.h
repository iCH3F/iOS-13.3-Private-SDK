//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <iWorkImport/TSDFill.h>

#import <iWorkImport/TSDMixing-Protocol.h>
#import <iWorkImport/TSSPresetSource-Protocol.h>

@class NSObject, TSDImageFillCachedImage, TSPData, TSUColor;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface TSDImageFill : TSDFill <TSDMixing, TSSPresetSource, NSCopying, NSMutableCopying>
{
    TSPData *mImageData;
    NSUInteger mTechnique;
    TSUColor *mTintColor;
    TSDImageFillCachedImage *mStandardSizeTintedImage;
    TSDImageFillCachedImage *mHalfSizeTintedImage;
    TSDImageFillCachedImage *mQuarterSizeTintedImage;
    TSUColor *mReferenceColor;
    TSUColor *mCachedReferenceColor;
    BOOL mShouldSkipFurtherAttemptsToCalculateReferenceColor;
    CGSize mFillSize;
    BOOL mHasIndicatedInterestInProvider;
    NSObject<OS_dispatch_queue> *mTempRenderLock;
    CGImage mTempRenderCopy;
    CGImage mSourceOfTempRenderCopy;
    long long mTempRenderCount;
}

+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)presetKinds;
+ (id)instanceWithArchive:(const struct FillArchive )arg1 unarchiver:(id)arg2;
@property(readonly, copy, nonatomic) TSUColor *tintColor; // @synthesize tintColor=mTintColor;
@property(nonatomic) NSUInteger technique; // @synthesize technique=mTechnique;
@property(readonly, retain, nonatomic) TSPData *imageData; // @synthesize imageData=mImageData;
// - (void).cxx_destruct;
- (void)p_drawPDFWithProvider:(id)arg1 inContext:(CGContext )arg2 bounds:(CGRect)arg3;
- (void)p_drawBitmapImage:(CGImage )arg1 withOrientation:(long long)arg2 inContext:(CGContext )arg3 bounds:(CGRect)arg4;
- (CGRect)p_drawnRectForImageSize:(CGSize)arg1 destRect:(CGRect)arg2 inContext:(CGContext )arg3;
- (id)p_validatedImageProvider;
- (id)presetKind;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1 context:(id)arg2;
- (id)p_quarterSizeCachedImage;
- (id)p_halfSizeCachedImage;
- (id)p_standardSizeCachedImage;
- (id)p_tintedImageWithScale:(double)arg1;
- (void)paintPath:(CGPath )arg1 naturalBounds:(CGRect)arg2 inContext:(CGContext )arg3 isPDF:(BOOL)arg4;
- (void)drawFillInContext:(CGContext )arg1 rect:(CGRect)arg2 clippingToPath:(CGPath )arg3;
- (void)paintPath:(CGPath )arg1 inContext:(CGContext )arg2;
- (void)p_paintPath:(CGPath )arg1 inContext:(CGContext )arg2 rectForFill:(CGRect)arg3;
- (CGSize)p_sizeOfFillImageForDestRect:(CGRect)arg1 inContext:(CGContext )arg2;
- (void)drawSwatchInRect:(CGRect)arg1 inContext:(CGContext )arg2;
- (CGSize)renderedImageSizeForObjectSize:(CGSize)arg1;
- (id)p_cachedImageForSize:(CGSize)arg1 inContext:(CGContext )arg2 orContentsScaleProvider:(id)arg3;
- (BOOL)p_shouldApplyTintedImage;
- (long long)fillType;
- (BOOL)canApplyToRenderableByAddingSubrenderables;
- (BOOL)canApplyToRenderable;
- (BOOL)drawsInOneStep;
- (BOOL)isEqual:(id)arg1;
- (NSUInteger)hash;
- (void)p_updateCachedReferenceColorIfNeeded;
- (void)i_updateStoredReferenceColorIfNeeded;
- (id)p_calculateReferenceColor;
@property(readonly, nonatomic) TSUColor *storedReferenceColor;
- (id)referenceColorForFontArchiving;
- (id)referenceColor;
- (void)i_setStoredReferenceColor:(id)arg1;
- (id)imageDataAtFillSize;
- (void)p_setFillSizeForApplicationData;
- (BOOL)isOpaque;
@property(readonly, nonatomic) CGSize fillSize; // @synthesize fillSize=mFillSize;
@property(readonly, nonatomic) double scale;
- (CGSize)p_imageDataNaturalSize;
@property(readonly, nonatomic) BOOL canCopyData;
- (id)copyWithNewImageData:(id)arg1;
@property(nonatomic, setter=p_setFillSize:) CGSize p_fillSize;
@property(retain, nonatomic, setter=p_setTintColor:) TSUColor *p_tintColor;
@property(nonatomic, setter=p_setTechnique:) NSUInteger p_technique;
@property(retain, nonatomic, setter=p_setImageData:) TSPData *p_imageData;
- (void)flushImageCache;
// - (id)copyWithZone:(_NSZone )arg1;
- (id)mutableCopyWithZone:(_NSZone )arg1;
- (void)p_clearTintedImageCache;
- (void)dealloc;
- (void)i_commonInit;
- (id)initForUnarchiving;
- (id)initWithImageData:(id)arg1 technique:(NSUInteger)arg2 tintColor:(id)arg3 size:(CGSize)arg4;
- (id)initWithImageData:(id)arg1 technique:(NSUInteger)arg2 tintColor:(id)arg3 size:(CGSize)arg4 referenceColor:(id)arg5;
- (BOOL)tsch_hasAllResources;
- (void)saveToArchive:(struct FillArchive )arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct FillArchive )arg1 unarchiver:(id)arg2;

@end

