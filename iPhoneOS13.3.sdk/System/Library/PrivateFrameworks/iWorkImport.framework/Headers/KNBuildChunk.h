//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <iWorkImport/TSPObject.h>

#import <iWorkImport/KNInspectableAnimation-Protocol.h>
#import <iWorkImport/TSKModel-Protocol.h>

@class KNBuild, KNBuildChunkIdentifier, KNSlide, NSArray, NSSet, NSString, NSUUID, TSPLazyReference;

__attribute__((visibility("hidden")))
@interface KNBuildChunk : TSPObject <KNInspectableAnimation, NSCopying, TSKModel>
{
    NSUUID *_buildId;
    KNBuildChunkIdentifier *_buildChunkIdentifier;
    double _delay;
    double _duration;
    BOOL _automatic;
    NSUInteger _referent;
    NSUInteger _cachedIndexOnSlide;
    NSUInteger _cachedActiveIndexOnSlide;
    NSUInteger _cachedIndexInBuild;
    TSPLazyReference *_buildReference;
    BOOL _needsAutomaticFromBuildAttributes;
    BOOL _needsReferentFromBuildAttributes;
    BOOL _needsDelayFromBuildAttributes;
    BOOL _needsDurationFromBuildAttributes;
}

+ (BOOL)needsObjectUUID;
+ (void)i_validateBuildReferencesForChunks:(id)arg1;
+ (void)i_repairChunkToBuildReferencesFromUUIDsForChunks:(id)arg1 builds:(id)arg2 context:(id)arg3;
@property(nonatomic) double delay; // @synthesize delay=_delay;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(readonly, nonatomic) KNBuildChunkIdentifier *chunkIdentifier; // @synthesize chunkIdentifier=_buildChunkIdentifier;
// - (void).cxx_destruct;
@property(readonly, nonatomic) BOOL canEditAnimations;
@property(readonly, nonatomic) NSSet *inspectableAttributes;
@property(readonly, nonatomic) NSString *title;
- (id)localizedNameForEventTrigger:(NSUInteger)arg1 includeLineBreaks:(BOOL)arg2;
@property(readonly, nonatomic) KNBuildChunk *previousActiveChunkWithReferentRelativeToEnd;
- (id)p_stringRepresentationWithNotAvailableForIndex:(NSUInteger)arg1;
@property(readonly, copy) NSString *description;
- (id)p_stringForReferent:(NSUInteger)arg1;
- (BOOL)isComplementOfBuildChunk:(id)arg1;
@property(readonly, nonatomic) BOOL hasComplement;
@property(readonly, nonatomic) NSUInteger activeIndexOnSlide;
@property(readonly, nonatomic, getter=isActive) BOOL active;
@property(readonly, nonatomic) BOOL isFirstInDeliveryGroup;
@property(readonly, nonatomic) BOOL isFirstOnSlide;
@property(readonly, nonatomic) BOOL isFirstInBuild;
@property(readonly, nonatomic) NSUInteger deliveryGroupIndex;
@property(readonly, nonatomic) NSUInteger indexOnSlide;
@property(readonly, nonatomic) NSUInteger indexInBuild;
@property(readonly, nonatomic) KNSlide *slide;
@property(readonly, nonatomic) NSUInteger eventTrigger;
@property(readonly, nonatomic) NSArray *availableEventTriggers;
@property(readonly, nonatomic) KNBuildChunk *nextChunkOnSlide;
@property(readonly, nonatomic) KNBuildChunk *previousChunkOnSlide;
@property(readonly, nonatomic, getter=isAutomaticWithPreviousChunkOnSameDrawable) BOOL automaticWithPreviousChunkOnSameDrawable;
@property(readonly, nonatomic, getter=isAutomaticWithPreviousChunk) BOOL automaticWithPreviousChunk;
@property(nonatomic) NSUInteger referent;
@property(nonatomic, getter=isAutomatic) BOOL automatic;
@property(readonly, nonatomic) KNBuild *build;
- (void)didInitFromSOS;
// - (id)copyWithZone:(_NSZone )arg1;
- (id)initWithBuild:(id)arg1 referent:(NSUInteger)arg2 copyingRemainingAttributesFromChunk:(id)arg3;
- (id)initWithBuild:(id)arg1 copyingAttributesFromChunk:(id)arg2;
- (id)initWithBuild:(id)arg1;
- (void)i_updateChunkUUIDReferencesToBuild:(id)arg1;
- (void)i_clearChunkIdentifier;
- (void)i_setChunkIdentifier:(id)arg1;
- (void)i_setBuildId:(id)arg1;
@property(readonly, nonatomic) NSUUID *i_buildId;
@property(readonly, nonatomic) KNBuild *i_buildFromReference;
- (void)i_setBuildPointer:(id)arg1 forUnarchive:(BOOL)arg2;
- (void)i_invalidateCaches;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromUnarchiver:(id)arg1;
- (void)saveToArchive:(struct BuildChunkArchive )arg1 archiver:(id)arg2;
- (void)p_setDurationFromBuildAttributes:(id)arg1;
- (void)p_setDelayFromBuildAttributes:(id)arg1 withReferent:(NSUInteger)arg2 automatic:(BOOL)arg3;
- (void)i_didLoadBuild:(id)arg1;
- (void)loadFromArchive:(const struct BuildChunkArchive )arg1 unarchiver:(id)arg2;

@end

