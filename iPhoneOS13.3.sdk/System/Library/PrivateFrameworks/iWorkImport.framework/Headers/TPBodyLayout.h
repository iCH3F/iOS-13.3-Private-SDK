//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <iWorkImport/TSDLayout.h>

#import <iWorkImport/TPAttachmentLayoutParent-Protocol.h>
#import <iWorkImport/TPFootnotePageDelegate-Protocol.h>
#import <iWorkImport/TSWPLayoutTarget-Protocol.h>

@class NSMutableArray, NSMutableSet, NSObject, TPFootnoteHeightMeasurer, TSDCanvas, TSPObject, TSWPStorage;
@protocol TSDHint, TSWPFootnoteHeightMeasurer, TSWPFootnoteMarkProvider, TSWPOffscreenColumn, TSWPTopicNumberHints;

__attribute__((visibility("hidden")))
@interface TPBodyLayout : TSDLayout <TSWPLayoutTarget, TPAttachmentLayoutParent, TPFootnotePageDelegate>
{
    NSMutableArray *_columns;
    TPFootnoteHeightMeasurer *_footnoteHeightMeasurer;
    NSMutableArray *_anchoredDrawablesForRelayout;
    NSMutableSet *_inlineDrawableLayouts;
    NSMutableSet *_markedHiddenInlineDrawableLayouts;
}

+ (CGSize)minimumBodySize;
@property(readonly, nonatomic) NSMutableArray *columns; // @synthesize columns=_columns;
@property(retain, nonatomic) NSMutableArray *anchoredDrawablesForRelayout; // @synthesize anchoredDrawablesForRelayout=_anchoredDrawablesForRelayout;
// - (void).cxx_destruct;
@property(readonly, nonatomic) BOOL textIsVertical;
- (BOOL)invalidateForPageCountChange;
@property(readonly, nonatomic) NSUInteger pageCount;
@property(readonly, nonatomic) NSUInteger pageNumber;
- (CGPoint)anchoredAttachmentPositionFromLayoutPosition:(CGPoint)arg1;
- (CGPoint)layoutPositionFromAnchoredAttachmentPosition:(CGPoint)arg1;
- (BOOL)isLayoutOffscreen;
@property(readonly, nonatomic) double maxAnchorInBlockDirection;
- (id)currentAnchoredDrawableLayouts;
- (id)currentInlineDrawableLayouts;
- (id)validatedLayoutForAnchoredDrawable:(id)arg1;
- (id)validatedLayoutForInlineDrawable:(id)arg1;
- (id)p_validatedLayoutForDrawable:(id)arg1 inContainingLayout:(id)arg2;
- (BOOL)excludeFromNearestVisibleRectSearchForSelectionPath:(id)arg1;
- (CGPoint)activityLineUnscaledEndPointForSearchReference:(id)arg1;
- (CGPoint)calculatePointFromSearchReference:(id)arg1;
- (void)addAttachmentLayout:(id)arg1;
- (id)existingAttachmentLayoutForInfo:(id)arg1;
- (void)markHiddenInlineDrawableLayout:(id)arg1;
- (void)clearHiddenInlineDrawableLayoutMarks;
- (BOOL)canHaveFootnotesFromPreviousTarget:(id)arg1;
- (BOOL)isFootnoteContainerOnSamePageAsTarget:(id)arg1;
- (id)interiorClippingPath;
@property(readonly, nonatomic) BOOL shouldWrapAroundExternalDrawables;
@property(readonly, nonatomic) BOOL layoutIsValid;
@property(readonly, nonatomic) TSDLayout *parentLayoutForInlineAttachments;
@property(readonly, nonatomic) TSDCanvas *canvas;
- (CGRect)targetRectForCanvasRect:(CGRect)arg1;
- (void)setNeedsDisplayInTargetRect:(CGRect)arg1;
@property(readonly, nonatomic) BOOL wantsLineFragments;
@property(readonly, nonatomic) int naturalDirection;
@property(readonly, nonatomic) int naturalAlignment;
@property(readonly, nonatomic) int verticalAlignment;
@property(readonly, nonatomic) NSUInteger autosizeFlags;
@property(readonly, nonatomic) CGPoint anchorPoint;
@property(readonly, nonatomic) CGPoint position;
@property(readonly, nonatomic) CGSize currentSize;
@property(readonly, nonatomic) CGSize maxSize;
@property(readonly, nonatomic) CGSize minSize;
@property(readonly, nonatomic) BOOL isInstructional;
- (BOOL)isLastTarget;
@property(readonly, nonatomic) TSPObject<TSDHint> *nextTargetFirstChildHint;
@property(readonly, nonatomic) id <TSWPFootnoteMarkProvider> footnoteMarkProvider;
- (void)resetFootnoteHeightMeasurer;
@property(readonly, nonatomic) id <TSWPFootnoteHeightMeasurer> footnoteHeightMeasurer;
@property(readonly, nonatomic) NSObject<TSWPTopicNumberHints> *nextTargetTopicNumbers;
@property(readonly, nonatomic) id <TSWPOffscreenColumn> nextTargetFirstColumn;
@property(readonly, nonatomic) NSObject<TSWPTopicNumberHints> *previousTargetTopicNumbers;
@property(readonly, nonatomic) id <TSWPOffscreenColumn> previousTargetLastColumn;
@property(readonly, nonatomic) TSWPStorage *storage;
@property(readonly, nonatomic) BOOL marginsAreMirrored;
- (double)textScaleForChild:(id)arg1;
- (id)columnMetricsForCharIndex:(NSUInteger)arg1 outRange:(_NSRange )arg2;
- (void)unregisterFromLayoutController;
- (BOOL)shouldProvideSizingGuides;
- (void)p_addLayoutIfAttached:(id)arg1;
- (void)setChildren:(id)arg1;
- (void)insertChild:(id)arg1 atIndex:(NSUInteger)arg2;
- (void)replaceChild:(id)arg1 with:(id)arg2;
- (void)parentWillChangeTo:(id)arg1;
- (void)invalidateSize;
- (void)validate;
- (CGPoint)capturedInfoPositionForAttachment;
- (id)computeLayoutGeometry;
- (BOOL)childLayoutIsCurrentlyHiddenWhileManipulating:(id)arg1;
- (CGSize)maximumFrameSizeForChild:(id)arg1;
- (double)contentBlockHeight;
- (BOOL)processWidowAndInflation;
- (void)updateStartCharIndexWithDirtyRanges:(id)arg1;
- (void)setNeedsInflation;
- (void)p_killDrawableLayouts:(id)arg1;
- (BOOL)needsInflation;
- (CGRect)p_rectForSelection:(id)arg1 useParagraphModeRects:(BOOL)arg2;
- (CGRect)rectForPresentingAnnotationPopoverForSelectionPath:(id)arg1;
- (BOOL)containsStartOfRange:(_NSRange)arg1;
- (BOOL)containsStartOfPencilAnnotation:(id)arg1;
- (id)pageAnchorDetailsForPencilAnnotationAtSelectionPath:(id)arg1 attachedType:(long long)arg2;
- (id)unscaledContentRectsToAvoidPencilAnnotationOverlap;
- (id)containedPencilAnnotations;
- (CGRect)rectInRootForPresentingAnnotationPopoverForSelectionPath:(id)arg1;
- (CGRect)rectForSelection:(id)arg1;
- (BOOL)selectionMustBeEntirelyOnscreenToCountAsVisibleInSelectionPath:(id)arg1;
- (CGRect)rectInRootForSelectionPath:(id)arg1;
- (CGRect)rectInRootOfAutoZoomContextOfSelectionPath:(id)arg1;
- (double)viewScaleForZoomingToSelectionPath:(id)arg1 targetPointSize:(double)arg2;
- (BOOL)descendersCannotClip;

@end

