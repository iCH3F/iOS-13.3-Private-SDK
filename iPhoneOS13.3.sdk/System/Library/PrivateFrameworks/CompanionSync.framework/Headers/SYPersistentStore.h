//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSDate, NSDictionary, NSError, NSMutableDictionary, NSMutableSet, NSSet, NSString, _SYSharedServiceDB;
@protocol OS_dispatch_queue, OS_os_transaction;

@interface SYPersistentStore : NSObject
{
    NSString *_path;
    struct __CFString _loggingFacility;
    double _timeToLiveCache;
    NSObject<OS_os_transaction> *_transaction;
    BOOL _changeTrackingEnabled;
    NSString *_peerID;
    NSMutableDictionary *_peerSeqnoSets;
    NSMutableSet *_ignoringMessageIDs;
    NSObject<OS_dispatch_queue> *_syncQ;
    struct sqlite3 _db;
    struct sqlite3_stmt _getInFullSync;
    struct sqlite3_stmt _getChangeCount;
    struct sqlite3_stmt _getNextExpireTime;
    struct sqlite3_stmt _purgeExpiredChanges;
    struct sqlite3_stmt _insertChange;
    struct sqlite3_stmt _getFullsyncSent;
    struct sqlite3_stmt _setFullsyncSent;
    struct sqlite3_stmt _logSyncComplete;
    struct sqlite3_stmt _getChangeIDsSinceVersion;
    struct sqlite3_stmt _getLocalVersion;
    struct sqlite3_stmt _getOldestVersion;
    struct sqlite3_stmt _setVectorClock;
    struct sqlite3_stmt _setPeerSeqNo;
    struct sqlite3_stmt _getPeerSeqNo;
    struct sqlite3_stmt _setPeerSeqNoSet;
    struct sqlite3_stmt _enterFullSync;
    struct sqlite3_stmt _exitFullSync;
    struct sqlite3_stmt _getIgnoringSyncID;
    struct sqlite3_stmt _getCurrentSyncID;
    struct sqlite3_stmt _getCurrentSyncStartTime;
    struct sqlite3_stmt _getLastEndedSyncID;
    struct sqlite3_stmt _getWaitingForSyncID;
    struct sqlite3_stmt _setWaitingForSyncID;
    struct sqlite3_stmt _setAllSentForSyncID;
    struct sqlite3_stmt _getAllSentForCurrentSync;
    struct sqlite3_stmt _getLastSyncError;
    struct sqlite3_stmt _setSyncUserInfo;
    struct sqlite3_stmt _getSyncUserInfo;
    struct sqlite3_stmt _setSyncIDSOptions;
    struct sqlite3_stmt _getSyncIDSOptions;
    BOOL _cachedVersionStale;
    double _unfinishedSyncTimeout;
    NSSet *_cachedChangedSyncIDs;
    NSUInteger _cachedChangedSyncIDsVersion;
    _SYSharedServiceDB *_sharedDB;
}

+ (id)_loadOrCreatePeerIDForDB:(struct sqlite3 )arg1;
+ (BOOL)_tableEmpty:(id)arg1 db:(struct sqlite3 )arg2;
+ (id)sharedPersistentStoreForService:(id)arg1;
@property(retain, nonatomic) _SYSharedServiceDB *sharedDB; // @synthesize sharedDB=_sharedDB;
@property(nonatomic) BOOL cachedVersionStale; // @synthesize cachedVersionStale=_cachedVersionStale;
@property(nonatomic) NSUInteger cachedChangedSyncIDsVersion; // @synthesize cachedChangedSyncIDsVersion=_cachedChangedSyncIDsVersion;
@property(retain, nonatomic) NSSet *cachedChangedSyncIDs; // @synthesize cachedChangedSyncIDs=_cachedChangedSyncIDs;
@property(nonatomic) double unfinishedSyncTimeout; // @synthesize unfinishedSyncTimeout=_unfinishedSyncTimeout;
// - (void).cxx_destruct;
- (void)changeTrackingToggled:(BOOL)arg1;
- (void)clearAllChanges;
- (BOOL)objectChanged:(id)arg1 sinceVersion:(NSUInteger)arg2;
- (NSUInteger)_oldestVersion;
- (BOOL)logSyncCompletionToRemoteVersion:(NSUInteger)arg1;
- (BOOL)logChanges:(id)arg1 error:(id )arg2;
@property(readonly, nonatomic) NSUInteger lastSeenRemoteVersion;
@property(readonly, nonatomic) NSUInteger currentLocalVersion;
@property(readonly, nonatomic) double durationOfLastFullSync;
@property(nonatomic) BOOL completedSync;
@property(copy, nonatomic) NSDictionary *fullSyncIDSOptions;
@property(copy, nonatomic) NSDictionary *fullSyncUserInfo;
@property(copy, nonatomic) NSString *waitingForSyncEndID;
@property(readonly, nonatomic) NSString *lastSyncEndID;
@property(readonly, nonatomic) BOOL inFullSync;
@property(readonly, nonatomic) NSString *currentFullSyncID;
- (void)_verifyInTransactionForFullSync;
@property(readonly, nonatomic) NSError *lastSyncError;
@property(readonly, nonatomic) BOOL lastSyncFailed;
@property(readonly, nonatomic) BOOL currentSyncSendComplete;
- (void)sendCompletedForSyncWithID:(id)arg1;
- (BOOL)ignoringFullSyncWithID:(id)arg1;
- (BOOL)reassignCurrentSyncID:(id)arg1;
- (void)exitFullSyncWithID:(id)arg1 error:(id)arg2;
- (void)enterFullSyncWithID:(id)arg1 ignoring:(BOOL)arg2;
@property(readonly, nonatomic) BOOL canStartNewSyncSession;
@property(copy, nonatomic) NSDate *lastMessageReceived;
@property(copy, nonatomic) NSDate *overflowResyncTime;
@property(retain, nonatomic) NSString *vectorClockJSON;
@property(readonly, nonatomic) NSUInteger changeCount;
@property(nonatomic) double timeToLive;
@property(readonly, nonatomic) NSString *path;
- (void)removeMessageIDFromIgnoreList:(id)arg1;
- (BOOL)shouldIgnoreMessageID:(id)arg1;
- (void)addMessageIDsToIgnore:(id)arg1;
- (void)_saveIgnoreList_LOCKED:(struct sqlite3 )arg1;
- (void)_loadIgnoreList_LOCKED:(struct sqlite3 )arg1;
@property(nonatomic, getter=isPerformingDeltaSync) BOOL performingDeltaSync;
- (void)resetSequenceNumbersForPeer:(id)arg1;
- (BOOL)sequenceNumberIsDuplicate:(NSUInteger)arg1 forPeer:(id)arg2;
- (NSUInteger)lastSequenceNumberForPeerID:(id)arg1;
- (NSUInteger)_lastSequenceNumberForPeerID_LOCKED:(id)arg1 db:(struct sqlite3 )arg2;
- (void)setLastSequenceNumber:(NSUInteger)arg1 fromPeer:(id)arg2;
- (BOOL)setLastSequenceNumber:(NSUInteger)arg1 fromPeer:(id)arg2 error:(id )arg3;
- (NSUInteger)nextSequenceNumber;
- (void)resetSequenceNumber:(NSUInteger)arg1;
- (void)_cacheTTL;
- (void)_storeSequenceNumberSet:(id)arg1 forPeerID:(id)arg2;
- (BOOL)_LOCKED_storeSequenceNumberSet:(id)arg1 forPeerID:(id)arg2 db:(struct sqlite3 )arg3 error:(id )arg4;
- (id)_sequenceNumberSetForPeerID:(id)arg1 inDB:(struct sqlite3 )arg2;
- (id)_decodeIndexSet:(id)arg1;
- (id)_encodeIndexSet:(id)arg1;
- (void)_fixPeerInfo;
- (BOOL)_inTransaction:(BOOL)arg1 do:(id /* CDUnknownBlockType */)arg2;
- (void)_withDB:(id /* CDUnknownBlockType */)arg1;
- (void)_convertTimestamps;
- (void)_prepareStatements;
- (void)_setupSharedDB;
@property(readonly, nonatomic) NSString *peerID;
- (BOOL)_openDBAtPath:(id)arg1;
- (int)_getSchemaVersion;
- (struct sqlite3 )_dbRef;
- (void)dealloc;
- (id)initWithPath:(id)arg1 loggingFacility:(const struct __CFString )arg2 changeTrackingEnabled:(BOOL)arg3;
- (id)initWithSharedDatabase:(id)arg1;
- (id)init;
- (id)dbPath;
- (id)lastDBErrorInfo;

@end

