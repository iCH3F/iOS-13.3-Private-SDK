//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSDate, NSString, _SYSharedServiceDB;
@protocol OS_dispatch_queue;

@interface NMSWindowData : NSObject
{
    NSString *_path;
    struct __CFString _loggingFacility;
    NSObject<OS_dispatch_queue> *_syncQ;
    struct sqlite3 _db;
    _SYSharedServiceDB *_sharedDB;
    struct sqlite3_stmt _addMessageInFlight;
    struct sqlite3_stmt _getMessageLength;
    struct sqlite3_stmt _removeMessageInFlight;
    struct sqlite3_stmt _getNextExpireDate;
    struct sqlite3_stmt _getExpiredMessageIDs;
    struct sqlite3_stmt _getBytesInFlight;
    struct sqlite3_stmt _getCountInFlight;
    struct sqlite3_stmt _pushPendingMessage;
    struct sqlite3_stmt _getPendingMessage;
    struct sqlite3_stmt _popPendingMessage;
    struct sqlite3_stmt _countPendingMessages;
}

// - (void).cxx_destruct;
- (struct sqlite3 )dbRef;
@property(readonly, nonatomic) NSUInteger countOfPendingMessages;
- (id)popPendingMessage;
- (void)pushPendingMessageData:(id)arg1 timeToLive:(double)arg2;
@property(readonly, nonatomic) NSDate *dateOfNextMessageExpiry;
@property(readonly, nonatomic) NSUInteger countOfAllMessagesInFlight;
@property(readonly, nonatomic) NSUInteger lengthOfAllMessagesInFlight;
@property(readonly, nonatomic) NSArray *expiredMessageIDs;
- (NSUInteger)removeAndReturnLengthOfMessagesWithIDs:(id)arg1;
- (NSUInteger)removeAndReturnLengthOfMessageWithID:(id)arg1;
- (void)addMessageWithID:(id)arg1 ofLength:(NSUInteger)arg2 timeoutTime:(double)arg3;
- (void)removeAllMessages;
- (void)_prepareStatements;
- (void)_ensureSchema;
- (BOOL)_openDBForceRecreate:(BOOL)arg1;
- (int)_getSchemaVersion;
- (BOOL)_syncTransaction:(BOOL)arg1 block:(id /* CDUnknownBlockType */)arg2;
- (void)_withDB:(id /* CDUnknownBlockType */)arg1;
- (void)dealloc;
- (id)initWithSharedDBForServiceName:(id)arg1;
- (id)initWithPath:(id)arg1 logFacility:(struct __CFString )arg2;
- (id)init;

@end

