//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CoreUI/CUIThemeImageSource-Protocol.h>

@class NSString;

@interface CUIThemeFacet : NSObject <CUIThemeImageSource, NSCopying, NSCoding>
{
    struct _renditionkeytoken _renditionKeyList;
    NSUInteger _themeIndex;
    long long _renditionType;
    CGSize _thumbnailSize;
    CGPoint _hotSpot;
    int _isTintable;
    struct {
        unsigned int hasCheckedButtonGlyph:1;
        unsigned int isButtonGlyph:1;
        unsigned int reserved:14;
    } _fFlags;
}

+ (BOOL)assetExistsForRenditionKey:(id)arg1 fromTheme:(NSUInteger)arg2;
+ (id)cursorFacetWithName:(id)arg1 fromTheme:(NSUInteger)arg2;
+ (id)_facetWithKeyList:(const struct _renditionkeytoken )arg1 andRenditionKeyClass:(Class)arg2 orRenditionKey:(id)arg3 fromTheme:(NSUInteger)arg4;
+ (id)facetWithRenditionKey:(id)arg1 fromTheme:(NSUInteger)arg2;
+ (id)facetWithElement:(long long)arg1 part:(long long)arg2 dimension1:(long long)arg3 dimension2:(long long)arg4 fromTheme:(NSUInteger)arg5;
+ (id)facetWithElement:(long long)arg1 part:(long long)arg2 fromTheme:(NSUInteger)arg3;
+ (id)debug_bundleIdentifierForThemeRef:(NSUInteger)arg1;
+ (void)themeUnregisterThemeRef:(NSUInteger)arg1;
+ (NSUInteger)themeWithBytes:(const void )arg1 length:(NSUInteger)arg2 error:(id )arg3;
+ (NSUInteger)themeWithContentsOfURL:(id)arg1 error:(id )arg2;
+ (NSUInteger)themeForBundleIdentifier:(id)arg1 error:(id )arg2;
+ (NSUInteger)themeNamed:(id)arg1 forBundleIdentifier:(id)arg2 error:(id )arg3;
+ (void)initialize;
+ (id)_themeStoreForThemeIndex:(NSUInteger)arg1;
+ (void)_invalidateArtworkCaches;
- (id)maskWithSize:(CGSize)arg1 keyAdjustment:(id)arg2;
- (id)highlightWithSize:(CGSize)arg1 keyAdjustment:(id)arg2;
- (id)imageWithSize:(CGSize)arg1 keyAdjustment:(id)arg2;
- (id)imageForSlice:(long long)arg1 withKeyAdjustment:(id)arg2;
- (id)maskForSlice:(long long)arg1 withKeyAdjustment:(id)arg2;
@property(readonly, copy) NSString *description;
- (long long)_sliceIndexForSlice:(long long)arg1 ofRendition:(id)arg2;
- (void)_applyFixedAttributesToKey:(id)arg1;
- (CGSize)topLeftCapSize;
- (CGSize)thumbnailSize;
- (id)thumbnail;
- (id)displayName;
- (id)properties;
- (BOOL)isTintable;
- (long long)renditionType;
- (id)renditionKey;
- (id)themeRendition;
- (NSUInteger)themeIndex;
- (void)_setThemeIndex:(NSUInteger)arg1;
- (id)gradientWithKeyAdjustment:(id)arg1 angle:(double )arg2 style:(NSUInteger )arg3;
- (CGSize)sizeForSegmentOfType:(int)arg1;
- (CGSize)imageSize;
- (id)blendModeAsCAFilterString;
- (id)blendModeAsCAFilterStringWithKeyAjustment:(id)arg1;
- (int)blendMode;
- (int)blendModeWithKeyAdjustment:(id)arg1;
- (double)alpha;
- (double)alphaWithKeyAdjustment:(id)arg1;
- (id)image;
- (id)imageForSliceIndex:(long long)arg1;
- (id)imageWithKeyAdjustment:(id)arg1;
- (id)imageForState:(long long)arg1 value:(long long)arg2 size:(NSUInteger)arg3;
- (id)imageForState:(long long)arg1 value:(long long)arg2;
- (BOOL)isValidButtonImageSource;
- (BOOL)isValidButtonImageSourceForSize:(NSUInteger)arg1;
- (BOOL)hasValueSlices;
- (id)imageForState:(long long)arg1 withValue:(long long)arg2;
- (id)imageForState:(long long)arg1;
- (id)renditionSliceInformationForRect:(CGRect)arg1 keyAdjustment:(id)arg2;
- (id)renditionMetricsWithKeyAdjustment:(id)arg1;
- (void)_drawSlice:(long long)arg1 inFrame:(CGRect)arg2 withKeyAdjustment:(id)arg3 context:(CGContext )arg4;
- (void)_drawSpecificRenditionKey:(id)arg1 rendition:(id)arg2 inFrame:(CGRect)arg3 context:(CGContext )arg4 alpha:(double)arg5 operation:(int)arg6 isFocused:(int)arg7 isFlipped:(BOOL)arg8 effects:(id)arg9;
- (void)_drawSpecificRenditionKey:(id)arg1 inFrame:(CGRect)arg2 context:(CGContext )arg3 alpha:(double)arg4 operation:(int)arg5 isFocused:(int)arg6 isFlipped:(BOOL)arg7 effects:(id)arg8;
- (void)_drawSpecificRenditionKey:(id)arg1 inFrame:(CGRect)arg2 context:(CGContext )arg3 isFocused:(int)arg4 isFlipped:(BOOL)arg5 effects:(id)arg6;
- (void)_drawAsMaskSpecificRenditionKey:(id)arg1 inFrame:(CGRect)arg2 context:(CGContext )arg3 alpha:(double)arg4 operation:(int)arg5 isFocused:(int)arg6;
- (id)renditionForSpecificKeyWrapper:(id)arg1;
- (void)_drawMaskFromSpecificRenditionKey:(id)arg1 inFrame:(CGRect)arg2 alpha:(double)arg3 operation:(int)arg4 isFocused:(int)arg5 context:(CGContext )arg6;
- (void)drawPulseInFrame:(CGRect)arg1 pulseValue:(double)arg2 isFocused:(int)arg3 keyAdjustment:(id)arg4 context:(CGContext )arg5;
- (void)drawMaskInFrame:(CGRect)arg1 alpha:(double)arg2 operation:(int)arg3 isFocused:(int)arg4 keyAdjustment:(id)arg5 context:(CGContext )arg6;
- (void)drawMaskInFrame:(CGRect)arg1 alpha:(double)arg2 isFocused:(int)arg3 keyAdjustment:(id)arg4 context:(CGContext )arg5;
- (void)drawHighlightInFrame:(CGRect)arg1 alpha:(double)arg2 operation:(int)arg3 keyAdjustment:(id)arg4 context:(CGContext )arg5;
- (void)drawHighlightInFrame:(CGRect)arg1 alpha:(double)arg2 keyAdjustment:(id)arg3 context:(CGContext )arg4;
- (void)drawInFrame:(CGRect)arg1 alpha:(double)arg2 operation:(int)arg3 isFocused:(int)arg4 keyAdjustment:(id)arg5 context:(CGContext )arg6;
- (void)drawInFrame:(CGRect)arg1 alpha:(double)arg2 isFocused:(int)arg3 keyAdjustment:(id)arg4 context:(CGContext )arg5;
- (void)drawGradientInFrame:(CGRect)arg1 angle:(double)arg2 alpha:(double)arg3 operation:(int)arg4 isFocused:(int)arg5 keyAdjustment:(id)arg6 context:(CGContext )arg7 effects:(id)arg8;
- (void)drawHighlightInFrame:(CGRect)arg1 alpha:(double)arg2 operation:(int)arg3 owner:(id)arg4 userInfo:(id)arg5 context:(CGContext )arg6;
- (void)drawInFrame:(CGRect)arg1 alpha:(double)arg2 operation:(int)arg3 owner:(id)arg4 userInfo:(id)arg5 context:(CGContext )arg6;
- (void)drawPulseInFrame:(CGRect)arg1 pulseValue:(double)arg2 owner:(id)arg3 userInfo:(id)arg4 context:(CGContext )arg5;
- (void)drawMaskInFrame:(CGRect)arg1 alpha:(double)arg2 owner:(id)arg3 userInfo:(id)arg4 context:(CGContext )arg5;
- (void)drawHighlightInFrame:(CGRect)arg1 alpha:(double)arg2 owner:(id)arg3 userInfo:(id)arg4 context:(CGContext )arg5;
- (void)drawInFrame:(CGRect)arg1 alpha:(double)arg2 owner:(id)arg3 userInfo:(id)arg4 context:(CGContext )arg5;
- (BOOL)hitTestAtPoint:(CGPoint)arg1 inFrame:(CGRect)arg2 owner:(id)arg3 userInfo:(id)arg4;
- (BOOL)_canGetRenditionForKey:(id)arg1 withDrawingLayer:(long long)arg2;
- (void)drawMaskInFrame:(CGRect)arg1 owner:(id)arg2 userInfo:(id)arg3 context:(CGContext )arg4;
- (void)drawHighlightInFrame:(CGRect)arg1 owner:(id)arg2 userInfo:(id)arg3 context:(CGContext )arg4;
- (void)drawInFrame:(CGRect)arg1 owner:(id)arg2 userInfo:(id)arg3 context:(CGContext )arg4;
- (CGImage )copySegmentLayerContents:(int)arg1 andCenter:(CGRect )arg2 leftSeparatorWidth:(double)arg3 rightSeparatorWidth:(double)arg4 renditionKey:(id)arg5 effects:(id)arg6;
- (void)drawSegmentInFrame:(CGRect)arg1 isFocused:(int)arg2 segmentType:(int)arg3 context:(CGContext )arg4 effects:(id)arg5;
- (void)drawAnimationFrameMappedFrom0_1RangedValue:(double)arg1 destinationFrame:(CGRect)arg2 isFocused:(int)arg3 context:(CGContext )arg4;
- (void)drawAbsoluteAnimationFrame:(double)arg1 destinationFrame:(CGRect)arg2 isFocused:(int)arg3 context:(CGContext )arg4;
- (void)drawAsOnePartWithSlice:(int)arg1 inFrame:(CGRect)arg2 isFocused:(int)arg3 context:(CGContext )arg4 effects:(id)arg5;
- (void)drawInFrame:(CGRect)arg1 alpha:(double)arg2 operation:(int)arg3 isFocused:(int)arg4 context:(CGContext )arg5 effects:(id)arg6;
- (void)drawInFrame:(CGRect)arg1 isFocused:(int)arg2 context:(CGContext )arg3 effects:(id)arg4;
- (void)drawInFrame:(CGRect)arg1 alpha:(double)arg2 isFocused:(int)arg3 context:(CGContext )arg4;
- (void)drawInFrame:(CGRect)arg1 alpha:(double)arg2 isFocused:(int)arg3 context:(CGContext )arg4 effects:(id)arg5;
- (void)drawInFrame:(CGRect)arg1 isFocused:(int)arg2 context:(CGContext )arg3;
- (void)updateLayer:(id)arg1 effects:(id)arg2;
- (void)updateLayer:(id)arg1;
- (id)makeLayer;
- (id)_makeLayerFromCAPackageData;
- (CGImage )copyLayerImageContentsAndCenter:(CGRect )arg1;
- (CGImage )copyLayerImageContentsAndCenter:(CGRect )arg1 renditionKey:(id)arg2;
- (void)setControlSize:(long long)arg1;
- (long long)controlSize;
- (void)dealloc;
// - (id)copyWithZone:(_NSZone )arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (id)initWithRenditionKey:(id)arg1 fromTheme:(NSUInteger)arg2;
- (void)_initWithRenditionKey:(id)arg1;
- (id)_imageForRenditionFromKey:(id)arg1 withSize:(CGSize)arg2 isMask:(BOOL)arg3;
- (BOOL)_isButtonGlyph;
- (void)_setIsButtonGlyph:(BOOL)arg1;
- (void)_setHasCheckedButtonGlyph:(BOOL)arg1;
- (CGSize)_thumbnailSizeForRendition:(id)arg1;
- (id)_rendition;
- (id)_renditionForSpecificKey:(id)arg1;
- (id)_approximateRenditionForRenditionKey:(id)arg1;
- (void)_updateSpecificRenditionKey:(id)arg1 isFocused:(BOOL )arg2 owner:(id)arg3 userInfo:(id)arg4;
- (CGPoint)_hotSpot;
- (id)_themeStore;

@end

