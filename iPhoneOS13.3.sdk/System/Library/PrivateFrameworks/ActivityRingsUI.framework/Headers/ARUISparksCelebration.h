//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <ActivityRingsUI/ARUICelebration.h>

@class ARUIAngularSparkEmitter, CAMediaTimingFunction, MISSING_TYPE, NSArray;
@protocol MTLBuffer;

__attribute__((visibility("hidden")))
@interface ARUISparksCelebration : ARUICelebration
{
    float _angularRotationDuration;
    float _angularTime;
    float _angularAlpha;
    float _angularAlphaAnimationBeginTime;
    float _angularAlphaAnimationEndTime;
    float _angularAlphaFadeFraction;
    CAMediaTimingFunction *_angularAlphaTimingFunction;
    CAMediaTimingFunction *_angularTimingFunction;
    ARUIAngularSparkEmitter *_angularSparkEmitter;
    NSArray *_kineticSparkEmitters;
    CAMediaTimingFunction *_kineticEasingFunction;
    float _kineticEasingTarget;
    NSUInteger _numberOfEmitters;
    NSUInteger _tangentalParticleCount;
    NSUInteger _burstParticleCount;
    float _completionTime;
    id /* CDUnknownBlockType */ _completion;
    id <MTLBuffer> _angularVertexBuffer;
    id <MTLBuffer> _angularIndexBuffer;
    NSUInteger _numAngularIndicies;
    NSUInteger _angularParticleCount;
    id <MTLBuffer> _angularSparks;
    id <MTLBuffer> _kineticVertexBuffer;
    id <MTLBuffer> _kineticIndexBuffer;
    NSUInteger _numKineticIndicies;
    NSUInteger _kineticParticleCount;
    id <MTLBuffer> _kineticSparks;
    id <MTLBuffer> _uniformsBuffer;
}

@property(readonly, nonatomic) id <MTLBuffer> uniformsBuffer; // @synthesize uniformsBuffer=_uniformsBuffer;
@property(readonly, nonatomic) id <MTLBuffer> kineticSparks; // @synthesize kineticSparks=_kineticSparks;
@property(readonly, nonatomic) NSUInteger kineticParticleCount; // @synthesize kineticParticleCount=_kineticParticleCount;
@property(readonly, nonatomic) NSUInteger numKineticIndicies; // @synthesize numKineticIndicies=_numKineticIndicies;
@property(readonly, nonatomic) id <MTLBuffer> kineticIndexBuffer; // @synthesize kineticIndexBuffer=_kineticIndexBuffer;
@property(readonly, nonatomic) id <MTLBuffer> kineticVertexBuffer; // @synthesize kineticVertexBuffer=_kineticVertexBuffer;
@property(readonly, nonatomic) float angularTime; // @synthesize angularTime=_angularTime;
@property(readonly, nonatomic) id <MTLBuffer> angularSparks; // @synthesize angularSparks=_angularSparks;
@property(readonly, nonatomic) NSUInteger angularParticleCount; // @synthesize angularParticleCount=_angularParticleCount;
@property(readonly, nonatomic) NSUInteger numAngularIndicies; // @synthesize numAngularIndicies=_numAngularIndicies;
@property(readonly, nonatomic) id <MTLBuffer> angularIndexBuffer; // @synthesize angularIndexBuffer=_angularIndexBuffer;
@property(readonly, nonatomic) id <MTLBuffer> angularVertexBuffer; // @synthesize angularVertexBuffer=_angularVertexBuffer;
// - (void).cxx_destruct;
- (void)storeCelebration:(id)arg1 withRing:(id)arg2;
- (void)_applyKineticSparkUpdate:(id)arg1;
- (void)_setupKineticSparkEmitters;
- (void)_applyAngularSparkUpdate:(id)arg1;
- (void)_generateAngularSparks;
- 
- (NSUInteger)uniformsBufferOffsetForType:(NSUInteger)arg1;
- 
- (NSUInteger)type;
- (void)endWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)update:(double)arg1;
- (void )angularAlphaBytes;
- (void )angularTimeBytes;
- (id)init;

@end

