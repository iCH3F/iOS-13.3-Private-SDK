//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class CIContext, MISSING_TYPE, PKLinedPaper, PKMetalFramebuffer, PKMetalRenderState, PKMetalResourceHandler, PKMetalShader;
@protocol MTLBuffer, MTLCommandQueue, MTLCommandQueueSPI, MTLDevice, MTLTexture;

@interface PKMetalRenderer : NSObject
{
    PKMetalRenderState *_currentRenderState;
    NSUInteger _currentCacheSize;
    id <MTLDevice> _device;
    id <MTLCommandQueueSPI> _commandQueue;
    PKMetalFramebuffer *_originalBackFramebuffer;
    BOOL _shouldClearOriginalBackFramebuffer;
    PKMetalFramebuffer *_paintFramebuffer;
    PKMetalFramebuffer *_alwaysMemorylessPaintFramebuffer;
    PKMetalFramebuffer *_paintFramebufferAccumulator;
    PKMetalFramebuffer *_maskMSAAFramebuffer;
    PKMetalResourceHandler *_resourceHandler;
    PKMetalFramebuffer *_dummyPaintFramebuffer;
    PKMetalFramebuffer *_dummyColorFramebuffer;
    CGSize _drawingPixelSize;
    CGColor _backgroundColor;
    CGSize _actualSize;
    double _fromStrokeSpaceScale;
    CGAffineTransform _strokeTransform;
    CGRect _viewScissor;
    BOOL _lastPointForEraserIsValid;
    struct _PKStrokePoint _lastPointForEraser;
    struct vector<(anonymous namespace)::StrokeVertex, std::__1::allocator<(anonymous namespace)::StrokeVertex>> _strokeBuffer;
    NSUInteger _strokeBufferCount;
    CIContext *_coreImageContext;
    id <MTLTexture> _paperTexture;
    CGSize _paperTextureSize;
    NSUInteger _pixelFormat;
    NSUInteger _paintAndParticlePixelFormat;
    struct vector<PKMetalParticleStrokePoint, std::__1::allocator<PKMetalParticleStrokePoint>> _particleStrokePointBuffer;
    struct vector<PKMetalPaintStrokePoint, std::__1::allocator<PKMetalPaintStrokePoint>> _paintStrokePointBuffer;
    struct vector<PKMetalLiveStrokePaintStrokePoint, std::__1::allocator<PKMetalLiveStrokePaintStrokePoint>> _liveStrokeStrokePointBuffer;
    struct vector<(anonymous namespace)::AnimatingStroke, std::__1::allocator<(anonymous namespace)::AnimatingStroke>> _animatingStrokes;
    CGRect _paintFramebufferDirtyRect;
    PKMetalShader *_paintShader;
    PKMetalShader *_particleShader;
    PKMetalShader *_particleShaderWithAspectRatioSupport;
    id <MTLBuffer> _particleIndexBuffer;
    id <MTLBuffer> _randomNumberBuffer;
    NSUInteger _renderMaskMSAASampleCount;
    BOOL _needRestartWorkaroundForOldIntelDrivers;
    BOOL _useComputeRenderCaches;
    BOOL _solidColorBackboard;
    BOOL _oneRenderPassForLiveRendering;
    BOOL _liveStrokeMode;
    BOOL _invertColors;
    PKLinedPaper *_linedPaper;
    CGColor _liveRenderingOverrideColor;
    double _backboardPaperMultiply;
    double _inputScale;
    double _eraserIndicatorAlpha;
    double _liveStrokeElapsedTime;
    double _liveStrokeDuration;
    CGAffineTransform _paperTransform;
}

+ (BOOL)useBlitEncoder;
@property(nonatomic) BOOL invertColors; // @synthesize invertColors=_invertColors;
@property(nonatomic) double liveStrokeDuration; // @synthesize liveStrokeDuration=_liveStrokeDuration;
@property(nonatomic) double liveStrokeElapsedTime; // @synthesize liveStrokeElapsedTime=_liveStrokeElapsedTime;
@property(nonatomic) BOOL liveStrokeMode; // @synthesize liveStrokeMode=_liveStrokeMode;
@property(nonatomic) double eraserIndicatorAlpha; // @synthesize eraserIndicatorAlpha=_eraserIndicatorAlpha;
@property(nonatomic) double inputScale; // @synthesize inputScale=_inputScale;
@property(readonly, nonatomic) PKMetalResourceHandler *resourceHandler; // @synthesize resourceHandler=_resourceHandler;
@property(nonatomic) double backboardPaperMultiply; // @synthesize backboardPaperMultiply=_backboardPaperMultiply;
@property(nonatomic) CGSize actualSize; // @synthesize actualSize=_actualSize;
@property(nonatomic) CGAffineTransform strokeTransform; // @synthesize strokeTransform=_strokeTransform;
@property(nonatomic) CGRect viewScissor; // @synthesize viewScissor=_viewScissor;
@property(nonatomic) BOOL oneRenderPassForLiveRendering; // @synthesize oneRenderPassForLiveRendering=_oneRenderPassForLiveRendering;
@property(nonatomic) BOOL solidColorBackboard; // @synthesize solidColorBackboard=_solidColorBackboard;
@property(nonatomic) CGColor liveRenderingOverrideColor; // @synthesize liveRenderingOverrideColor=_liveRenderingOverrideColor;
@property(nonatomic) CGColor backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) CGAffineTransform paperTransform; // @synthesize paperTransform=_paperTransform;
@property(retain, nonatomic) PKLinedPaper *linedPaper; // @synthesize linedPaper=_linedPaper;
@property(readonly, nonatomic) id <MTLDevice> device; // @synthesize device=_device;
@property(readonly, nonatomic) id <MTLCommandQueue> commandQueue; // @synthesize commandQueue=_commandQueue;
- (id).cxx_construct;
// - (void).cxx_destruct;
- (void)renderImage:(CGImage )arg1 andMask:(CGImage )arg2 clippedToStrokeSpaceRect:(CGRect)arg3;
- (void)renderImage:(CGImage )arg1 andMask:(CGImage )arg2;
- (void)renderImage:(CGImage )arg1 intoFramebuffer:(id)arg2 clipRect:(CGRect)arg3;
- (void)renderTexture:(id)arg1;
- (void)clearNowWithStrokeSpaceClipRect:(CGRect)arg1 strokeTransform:(CGAffineTransform)arg2;
- (void)clear;
- (void)clearAndRenderTiles:(id)arg1 tileTransform:(CGAffineTransform)arg2 waitUntilCompleted:(BOOL)arg3;
- (void)setShouldClearOriginalFramebuffer;
- (void)clearTile:(id)arg1 waitUntilCompleted:(BOOL)arg2;
- (id)framebufferForTile:(id)arg1 createIfNeeded:(BOOL)arg2;
- (void)renderTiles:(id)arg1 intoTile:(id)arg2 waitUntilCompleted:(BOOL)arg3;
- (void)renderTile:(id)arg1 tileTransform:(CGAffineTransform)arg2 renderState:(id)arg3;
- (void)copyIntoTile:(id)arg1 tileTransform:(CGAffineTransform)arg2 waitUntilCompleted:(BOOL)arg3;
- (void)purgeOriginalBackFramebuffer;
- (void)clearFramebuffer:(id)arg1 waitUntilCompleted:(BOOL)arg2;
- (void)addBufferForRenderCache:(id)arg1 strokeVertices:(struct StrokeVertex )arg2 numVertices:(NSUInteger)arg3;
- (id)generateCacheForParticleStroke:(struct AnimatingStroke )arg1 points:(struct _PKStrokePointSlice)arg2 startPt:(BOOL)arg3 endPt:(BOOL)arg4;
- (id)generateCacheForMask:(id)arg1;
- (id)cacheForMask:(id)arg1 strokeRenderCache:(id)arg2 purgeableResources:(id)arg3;
- (id)generateCacheForPenStroke:(struct AnimatingStroke )arg1 points:(struct _PKStrokePointSlice)arg2;
- (id)generateCacheForStroke:(struct AnimatingStroke )arg1 points:(struct _PKStrokePointSlice)arg2 segmentSteps:(const vector_3203cf93 )arg3;
- (void)generateLiveStrokeCachesForStrokes:(id)arg1 destinationLocations:(const vector_9d39b153 )arg2 strokeInterval:(float)arg3 liveStrokeFrame:(CGRect)arg4 liveStrokeTexture:(id)arg5;
- (void)buildRenderCacheForStrokes:(id)arg1;
- (NSUInteger)clearAndRenderStrokes:(id)arg1 clippedToStrokeSpaceRect:(CGRect)arg2 strokeTransform:(CGAffineTransform)arg3 stopBlock:(id /* CDUnknownBlockType */)arg4;
- (NSUInteger)_renderStrokes:(id)arg1 clippedToStrokeSpaceRect:(CGRect)arg2 strokeTransform:(CGAffineTransform)arg3 stopBlock:(id /* CDUnknownBlockType */)arg4;
- (void)setupRenderState:(id)arg1 needCompute:(BOOL)arg2 clearPaint:(BOOL)arg3;
- (void)setupRenderState:(id)arg1 needCompute:(BOOL)arg2;
- (void)restartRenderStateForSimulator:(id)arg1;
- (BOOL)canRenderStroke:(id)arg1 combinedWith:(id)arg2;
- (id)renderCacheItemForStroke:(struct AnimatingStroke )arg1 bsplineFilter:(struct PKBSplineFilter )arg2 purgeableResources:(id)arg3 strokeRenderCache:(id)arg4;
- (id)renderCommandEncoderForCommandBuffer:(id)arg1 backBufferLoadAction:(NSUInteger)arg2 backBufferStoreAction:(NSUInteger)arg3 paintBufferLoadAction:(NSUInteger)arg4 accumulatorBufferLoadAction:(NSUInteger)arg5 accumulatorBufferStoreAction:(NSUInteger)arg6 destinationLoadAction:(NSUInteger)arg7;
- (id)dummyColorFramebuffer;
- (id)dummyPaintFramebuffer;
- (NSUInteger)renderParticleStroke:(struct _PKStrokePointSlice)arg1 animatingStroke:(struct AnimatingStroke )arg2 starts:(BOOL)arg3 ends:(BOOL)arg4 combinedRendering:(BOOL)arg5 renderEncoder:(id)arg6;
- (id)generateParticleCacheForStroke:(struct _PKStrokePointSlice)arg1 animatingStroke:(struct AnimatingStroke )arg2 starts:(BOOL)arg3 ends:(BOOL)arg4;
- (id)generatePaintCacheForStroke:(struct _PKStrokePointSlice)arg1 animatingStroke:(struct AnimatingStroke )arg2 segmentSteps:(const vector_3203cf93 )arg3 liveStrokePoints:(const MISSING_TYPE *)arg4 liveStrokeStartTime:(float)arg5 strokeInterval:(float)arg6;
- (void)setupRenderEncoder:(id)arg1 forParticleStroke:(struct AnimatingStroke )arg2;
- (void)renderMaskForStroke:(id)arg1 renderCache:(id)arg2;
- (NSUInteger)renderVerticies:(struct StrokeVertex )arg1 size:(NSUInteger)arg2 numRenderedVertices:(NSUInteger)arg3 numIndices:(NSUInteger)arg4 localClipRect:(CGRect)arg5 animatingStroke:(struct AnimatingStroke )arg6 combinedRendering:(BOOL)arg7 renderEncoder:(id)arg8;
- (NSUInteger)renderPenStroke:(struct _PKStrokePointSlice)arg1 animatingStroke:(struct AnimatingStroke )arg2 combinedRendering:(BOOL)arg3 renderEncoder:(id)arg4;
- (void)setupRenderEncoder:(id)arg1 forPenStroke:(struct AnimatingStroke )arg2;
- (void)renderStrokeVertices:(const struct StrokeVertex )arg1 numVertices:(NSUInteger)arg2 numIndices:(NSUInteger)arg3 renderEncoder:(id)arg4;
- (void)setVertexBuffersForVertices:(const struct StrokeVertex )arg1 numVertices:(NSUInteger)arg2 renderEncoder:(id)arg3;
- (NSUInteger)renderStroke:(struct _PKStrokePointSlice)arg1 animatingStroke:(struct AnimatingStroke )arg2 accumulating:(BOOL)arg3 combinedRendering:(BOOL)arg4 renderEncoder:(id)arg5 computeEncoder:(id)arg6 renderCache:(id)arg7;
- (NSUInteger)renderParticleRenderCache:(id)arg1 renderEncoder:(id)arg2 computeEncoder:(id)arg3 animatingStroke:(struct AnimatingStroke )arg4;
- (NSUInteger)renderLiveStrokePaintRenderCache:(id)arg1 renderEncoder:(id)arg2 computeEncoder:(id)arg3 animatingStroke:(struct AnimatingStroke )arg4;
- (NSUInteger)renderPaintRenderCache:(id)arg1 renderEncoder:(id)arg2 computeEncoder:(id)arg3 animatingStroke:(struct AnimatingStroke )arg4;
- (NSUInteger)renderStrokeRenderCache:(id)arg1 renderEncoder:(id)arg2 animatingStroke:(struct AnimatingStroke )arg3 indexed:(BOOL)arg4;
- (void)renderStroke:(id)arg1 withTransform:(CGAffineTransform)arg2 mode:(long long)arg3 flipped:(BOOL)arg4 renderBufferSize:(CGSize)arg5 renderEncoder:(id)arg6 currentClipRect:(CGRect)arg7 needRenderMask:(BOOL)arg8;
- (double)alphaForStroke:(id)arg1;
- (void)renderLinesRenderBufferSize:(CGSize)arg1 renderEncoder:(id)arg2;
- (void)renderPaperTransform:(CGAffineTransform)arg1 paperTransform:(CGAffineTransform)arg2 flipped:(BOOL)arg3 multiply:(double)arg4 renderEncoder:(id)arg5;
- (void)setPaperTextureOnRenderEncoder:(id)arg1 fragmentUniforms:(struct PKMetalUberFragmentUniforms )arg2;
- (void)clearPaintFramebuffersWithRenderEncoder:(id)arg1;
- (void)clearPaintFramebuffers;
- (void)purgePaintFramebuffers;
- (void)finishRenderingNoTeardownForStroke:(struct AnimatingStroke )arg1 clippedToPixelSpaceRect:(CGRect)arg2 renderEncoder:(id)arg3;
- (BOOL)setupClippingForStrokeClipRect:(CGRect)arg1 clippedToPixelSpaceRect:(CGRect)arg2 renderEncoder:(id)arg3 outNewClipRect:(CGRect )arg4;
- (void)debugFramebuffers;
- (void)finishRendering;
- (void)finishRenderingClippedToStrokeSpaceRect:(CGRect)arg1 forStroke:(struct AnimatingStroke )arg2 renderEncoder:(id)arg3;
- (void)teardownDrawingFramebuffers;
- (void)renderEraserIndicator:(struct _PKStrokePoint)arg1 withTransform:(CGAffineTransform)arg2;
- (void)renderBrushIndicatorForStroke:(id)arg1 withTransform:(CGAffineTransform)arg2 mode:(long long)arg3;
- (void)setupDrawingFramebuffersIfNecessaryLiveRendering:(BOOL)arg1;
- (void)setupOriginalBackFramebufferIfNecessary;
- (BOOL)ensureOriginalBackFramebufferHasContents;
- (void)setupCachedResourcesIfNecessary;
- (CGRect)clipRectForVertices:(const struct StrokeVertex )arg1 numVertices:(NSUInteger)arg2;
- (CGAffineTransform)strokeRenderTransformForFramebufferSize:(CGSize)arg1 flipped:(BOOL)arg2;
- (CGAffineTransform)strokeRenderTransform;
- (void)setupStrokeBufferIfNecessary;
- (void)renderFullscreenQuadWithShader:(id)arg1 renderEncoder:(id)arg2;
- (void)setupUberVertexShaderWithTransform:(CGAffineTransform)arg1 paperTransform:(CGAffineTransform)arg2 renderEncoder:(id)arg3;
- (void)setupForDefaultUberVertexShaderInRenderEncoder:(id)arg1;
- (void)setPaperTextureImage:(CGImage )arg1;
- (CGImage )newCGImageWithClipRect:(CGRect)arg1;
- (CGImage )newCGImageWithClipRect:(CGRect)arg1 copyImage:(BOOL)arg2;
- (CGImage )newCGImageFromTexture:(id)arg1 clipRect:(CGRect)arg2 copyImage:(BOOL)arg3;
- (id)CIImageFromTexture:(id)arg1;
- (CGImage )newCGImage;
- (void)renderTexture:(id)arg1 intoFramebuffer:(id)arg2 sourceRect:(CGRect)arg3 destinationRect:(CGRect)arg4 renderState:(id)arg5;
- (void)renderTexture:(id)arg1 intoFramebuffer:(id)arg2 sourceRect:(CGRect)arg3 destinationPosition:(CGPoint)arg4 renderState:(id)arg5;
- (void)renderTexture:(id)arg1 intoFramebuffer:(id)arg2 clipRect:(CGRect)arg3 renderState:(id)arg4;
- (void)copyIntoPaintFromTexture:(id)arg1 clipRect:(CGRect)arg2 renderEncoder:(id)arg3;
- (void)copyFromFramebuffer:(id)arg1 toFramebuffer:(id)arg2 clipRect:(CGRect)arg3 renderEncoder:(id)arg4;
- (NSUInteger)colorAttachmentIndexFromFramebuffer:(id)arg1;
- (void)resetPaintFramebufferAccumulate:(BOOL)arg1;
- (BOOL)shouldAccumulateLiveStroke;
- (void)disableClippingForRenderEncoder:(id)arg1;
- (void)renderWithTransform:(CGAffineTransform)arg1 animatingStroke:(struct AnimatingStroke )arg2 mode:(long long)arg3 clipped:(BOOL)arg4 renderBufferSize:(CGSize)arg5 renderEncoder:(id)arg6;
- (void)renderAnimatingStrokesWithTransform:(CGAffineTransform)arg1 renderBufferSize:(CGSize)arg2;
- (void)finishStroke;
@property(readonly, nonatomic) BOOL isFinishedRendering;
- (void)cancelLiveStroke;
- (void)finishLiveStrokeAndPresentDrawable:(id)arg1 waitUntilScheduled:(BOOL)arg2;
- (void)renderLiveStrokeWithTransform:(CGAffineTransform)arg1 renderBufferSize:(CGSize)arg2;
- (void)restartLiveRenderingForSimulator;
- (void)renderAheadWithTransform:(CGAffineTransform)arg1 onPaper:(BOOL)arg2 renderBufferSize:(CGSize)arg3 destinationTexture:(id)arg4;
- (void)teardownRenderStateIfNecessary;
- (void)setupRenderStateForStrokeRenderingNeedPaintBuffer:(BOOL)arg1 needRenderMask:(BOOL)arg2;
- (void)setupRenderStateForRenderingStrokes:(id)arg1;
- (void)setupRenderStateForLiveRenderingDestinationTexture:(id)arg1 destinationLoadAction:(NSUInteger)arg2 accumLoadAction:(NSUInteger)arg3 accumStoreAction:(NSUInteger)arg4 backBufferLoadAction:(NSUInteger)arg5 backBufferStoreAction:(NSUInteger)arg6;
- (NSUInteger)renderStrokes:(id)arg1 stopBlock:(id /* CDUnknownBlockType */)arg2;
- (NSUInteger)renderStrokes:(id)arg1 clippedToStrokeSpaceRect:(CGRect)arg2 strokeTransform:(CGAffineTransform)arg3 stopBlock:(id /* CDUnknownBlockType */)arg4;
- (BOOL)applyStrokeSpaceClipRect:(CGRect)arg1 strokeTransform:(CGAffineTransform)arg2;
- (void)drawNewPointsAt:(double)arg1;
- (void)drawingCancelled;
- (void)drawingEnded:(id)arg1 finishStrokeBlock:(id /* CDUnknownBlockType */)arg2;
- (void)getAndRenderNewPoints:(id)arg1;
- (void)drawingBeganWithStroke:(id)arg1;
@property(readonly, nonatomic) double latestTimestamp;
- (void)flushMemoryIfPossible;
- (BOOL)generateBSplineInComputeForStroke:(id)arg1;
- (void)setup;
- (void)dealloc;
- (id)initWithDrawingPixelSize:(CGSize)arg1 actualSize:(CGSize)arg2 device:(id)arg3 resourceHandler:(id)arg4;

@end

