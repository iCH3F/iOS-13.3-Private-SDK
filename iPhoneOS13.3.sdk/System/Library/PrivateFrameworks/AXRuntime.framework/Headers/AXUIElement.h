//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>


@class NSMutableDictionary;

@interface AXUIElement : NSObject <UIElementProtocol, NSCopying>
{
    struct __AXUIElement _axElement;
    long long _cachedRefCount;
    NSMutableDictionary *_cachedAttributes;
    BOOL _isValid;
}

+ (id)uiApplicationForContext:(unsigned int)arg1;
+ (id)uiApplicationAtCoordinate:(CGPoint)arg1;
+ (id)uiElementAtCoordinate:(CGPoint)arg1 startWithElement:(id)arg2;
+ (id)uiElementAtCoordinate:(CGPoint)arg1;
+ (id)uiElementAtCoordinate:(CGPoint)arg1 forApplication:(struct __AXUIElement )arg2 contextId:(unsigned int)arg3;
+ (id)uiElementWithAXElement:(struct __AXUIElement )arg1 cache:(id)arg2;
+ (id)uiElementWithAXElement:(struct __AXUIElement )arg1;
+ (void)initialize;
+ (void)applyElementAttributeCacheScheme:(NSUInteger)arg1;
+ (id)uiSystemWideApplication;
+ (struct __AXUIElement )systemWideAXUIElement;
// - (void).cxx_destruct;
- (_NSRange)nextCursorRangeInDirection:(NSUInteger)arg1 unit:(NSUInteger)arg2 outputRange:(_NSRange )arg3 currentCursorRange:(_NSRange)arg4;
- (_NSRange)nextCursorRangeInDirection:(NSUInteger)arg1 unit:(NSUInteger)arg2 outputRange:(_NSRange )arg3;
- (_NSRange)_lineRangeForPosition:(NSUInteger)arg1;
- (long long)_lineEndPosition;
- (long long)_lineStartPosition;
- (id)_valueForRange:(_NSRange)arg1;
- (id)_attributedValueForRange:(_NSRange)arg1;
- (id)_objectForRange:(_NSRange)arg1 withParameterizedAttribute:(long long)arg2;
- (_NSRange)_selectedTextRange;
- (void)setAXAttribute:(long long)arg1 withObject:(id)arg2;
- (BOOL)isMockElement;
- (void)setAXAttribute:(long long)arg1 withObject:(id)arg2 synchronous:(BOOL)arg3;
- (void)setAXAttribute:(long long)arg1 withArray:(id)arg2;
- (void)setAXAttribute:(long long)arg1 withUIElementArray:(id)arg2;
- (void)setAXAttribute:(long long)arg1 withUIElement:(id)arg2;
- (void)setAXAttribute:(long long)arg1 withRange:(_NSRange)arg2;
- (void)setAXAttribute:(long long)arg1 withSize:(CGSize)arg2;
- (void)setAXAttribute:(long long)arg1 withPoint:(CGPoint)arg2;
- (void)setAXAttribute:(long long)arg1 withNumber:(id)arg2;
- (void)setAXAttribute:(long long)arg1 withFloat:(float)arg2;
- (void)setAXAttribute:(long long)arg1 withLong:(long long)arg2;
- (void)setAXAttribute:(long long)arg1 withString:(id)arg2;
- (void)setAXAttribute:(long long)arg1 withBOOL:(BOOL)arg2;
- (id)_elementsWithParameter:(long long)arg1 count:(NSUInteger)arg2 prefetchAttributes:(BOOL)arg3;
- (id)previousElementsWithCount:(NSUInteger)arg1;
- (id)nextElementsIncludingPrefetchedAttributesWithCount:(NSUInteger)arg1;
- (id)nextElementsWithCount:(NSUInteger)arg1;
- (id)uiElementsWithAttribute:(long long)arg1;
- (id)uiElementsWithAttribute:(long long)arg1 parameter:(void )arg2 fetchAttributes:(BOOL)arg3;
- (id)uiElementsWithAttribute:(long long)arg1 parameter:(void )arg2;
- (BOOL)performAXAction:(int)arg1;
- (BOOL)canPerformAXAction:(int)arg1;
- (BOOL)performAXAction:(int)arg1 withValue:(id)arg2 fencePort:(unsigned int)arg3;
- (BOOL)performAXAction:(int)arg1 withValue:(id)arg2;
- (id)valueArrayWithAXAttributes:(struct __CFArray )arg1;
- (id)objectWithAXAttribute:(long long)arg1 parameter:(void )arg2;
- (id)objectWithAXAttribute:(long long)arg1;
- (CGColor )colorWithAXAttribute:(long long)arg1;
- (_NSRange)rangeWithAXAttribute:(long long)arg1;
- (CGRect)rectWithAXAttribute:(long long)arg1;
- (CGPath )pathWithAXAttribute:(long long)arg1;
- (CGPoint)pointWithAXAttribute:(long long)arg1;
- (id)numberWithAXAttribute:(long long)arg1;
- (BOOL)boolWithAXAttribute:(long long)arg1;
- (id)stringWithAXAttribute:(long long)arg1;
- (id)arrayWithAXAttribute:(long long)arg1;
- (void)updateCache:(long long)arg1;
- (id)_outputCache;
- (BOOL)isValid;
- (BOOL)isValidForApplication:(id)arg1;
- (void)updateCacheWithAttributes:(id)arg1;
- (void)_createCache:(BOOL)arg1;
- (void)disableCache;
- (void)enableCache:(BOOL)arg1;
- (void )modifyStaticCacheValue:(void )arg1;
- (void)_invalidate;
- (void)setAXElement:(struct __AXUIElement )arg1;
@property(readonly, nonatomic) struct __AXUIElement axElement; // @synthesize axElement=_axElement;
- (BOOL)isEqual:(id)arg1;
@property(readonly) NSUInteger hash;
- (int)pid;
- (void)_setCachedValue:(void )arg1 forAttribute:(long long)arg2;
- (void )_cachedValueForAttribute:(long long)arg1;
@property(readonly, copy, nonatomic) NSMutableDictionary *cachedAttributes; // @dynamic cachedAttributes;
- (void)dealloc;
- (id)initWithAXElement:(struct __AXUIElement )arg1;
- (id)initWithAXElement:(struct __AXUIElement )arg1 cache:(id)arg2;
// - (id)copyWithZone:(_NSZone )arg1;

@end

