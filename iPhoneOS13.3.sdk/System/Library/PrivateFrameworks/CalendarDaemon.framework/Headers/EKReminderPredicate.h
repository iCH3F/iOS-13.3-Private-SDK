//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <CalendarDaemon/EKPredicate.h>

#import <CalendarDaemon/EKDefaultPropertiesLoading-Protocol.h>

@class NSArray, NSDate, NSString;

@interface EKReminderPredicate : EKPredicate <EKDefaultPropertiesLoading>
{
    BOOL _limitToCompletedOrIncomplete;
    BOOL _completed;
    BOOL _useCompletionDateAsAlternate;
    BOOL _useDueDateAsCompletionDate;
    BOOL _shouldLoadDefaultProperties;
    int _sortOrder;
    NSString *_listTitle;
    NSDate *_dueAfter;
    NSDate *_dueBefore;
    NSString *_searchTerm;
    NSUInteger _maxResults;
    NSArray *_defaultPropertiesToLoad;
}

+ (id)predicateWithCalendars:(id)arg1;
+ (BOOL)supportsSecureCoding;
@property(retain, nonatomic) NSArray *defaultPropertiesToLoad; // @synthesize defaultPropertiesToLoad=_defaultPropertiesToLoad;
@property(nonatomic) BOOL shouldLoadDefaultProperties; // @synthesize shouldLoadDefaultProperties=_shouldLoadDefaultProperties;
@property(nonatomic) NSUInteger maxResults; // @synthesize maxResults=_maxResults;
@property(nonatomic) int sortOrder; // @synthesize sortOrder=_sortOrder;
@property(retain, nonatomic) NSString *searchTerm; // @synthesize searchTerm=_searchTerm;
@property(nonatomic) BOOL useDueDateAsCompletionDate; // @synthesize useDueDateAsCompletionDate=_useDueDateAsCompletionDate;
@property(nonatomic) BOOL useCompletionDateAsAlternate; // @synthesize useCompletionDateAsAlternate=_useCompletionDateAsAlternate;
@property(retain, nonatomic) NSDate *dueBefore; // @synthesize dueBefore=_dueBefore;
@property(retain, nonatomic) NSDate *dueAfter; // @synthesize dueAfter=_dueAfter;
@property(nonatomic) BOOL completed; // @synthesize completed=_completed;
@property(nonatomic) BOOL limitToCompletedOrIncomplete; // @synthesize limitToCompletedOrIncomplete=_limitToCompletedOrIncomplete;
@property(retain, nonatomic) NSString *listTitle; // @synthesize listTitle=_listTitle;
// - (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
// - (id)copyWithZone:(_NSZone )arg1;
- (id)initWithCalendars:(id)arg1;
- (id)copyMatchingItemsWithDatabase:(struct CalDatabase )arg1;

@end

