//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class IDSWRMMetricContainer;
@protocol OS_dispatch_queue, OS_xpc_object;

@interface IDSWRMExchange : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_xpc_object> *_connection;
    NSUInteger _recommendedLinkType;
    NSUInteger _activeLinkType;
    NSUInteger _activeRecommendationType;
    BOOL _registered;
    BOOL _subscribed;
    NSUInteger _reportInterval;
    BOOL _shouldSendReport;
    IDSWRMMetricContainer *_metrics;
    unsigned short _connectCount;
    NSUInteger _nearbyOverWiFi;
    BOOL _isPaired;
    BOOL _isNearby;
    BOOL _isConnected;
    int _isPairedNotifyToken;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    id /* CDUnknownBlockType */ _delegateBlock;
}

+ (id)sharedInstance;
// - (void).cxx_destruct;
- (void)handleNetworkStateChangeUpdate:(BOOL)arg1 nearby:(BOOL)arg2;
- (void)handleActiveLinkChange:(NSUInteger)arg1;
- (void)_resetLocalMetric;
- (void)_updateLocalMetric:(id)arg1;
- (void)submitMetric:(id)arg1;
- (void)_sendMetricReportPeriodically;
- (void)_sendMetricReport;
- (id)_newMetricReportMessage;
- (BOOL)_processMetricsConfigEvent:(id)arg1;
- (void)_setReportInterval:(NSUInteger)arg1;
- (void)_notifyDelegate;
- (BOOL)_setRecommendedLinkType:(NSUInteger)arg1;
- (NSUInteger)recommendedLinkType;
- (BOOL)isBTRecommended;
- (BOOL)isWiFiRecommended;
- (BOOL)_processLinkPreferenceNotificationEvent:(id)arg1;
- (BOOL)_processXPCMessage:(id)arg1;
- (void)unsubscribeForRecommendation;
- (void)_restartSubscriptionIfNeeded;
- (void)subscribeForRecommendation:(id)arg1 recommendationType:(NSUInteger)arg2 block:(id /* CDUnknownBlockType */)arg3;
- (void)_registerWithWRM;
- (id)_newUnsubscribeMessage;
- (id)_newPrefSubscribeMessage:(BOOL)arg1;
- (id)_newSubscribeStatusUpdateMessage:(BOOL)arg1 nearby:(BOOL)arg2;
- (id)_newSubscribeStatusUpdateMessage;
- (id)_newSubscribeMessage;
- (id)_newRegisterMessage;
- (BOOL)_isXPCDictionary:(id)arg1;
- (void)_sendXPCMessage:(id)arg1;
- (void)_reconnectUntilTimeout;
- (void)_processXPCEvent:(id)arg1;
- (void)_restartClient;
- (void)_stopXPCConnection;
- (void)_startXPCConnection;
- (void)_dispatchAfter:(double)arg1 block:(id /* CDUnknownBlockType */)arg2;
- (void)_submitBlockAsync:(id /* CDUnknownBlockType */)arg1;
- (void)dealloc;
- (id)init;

@end

