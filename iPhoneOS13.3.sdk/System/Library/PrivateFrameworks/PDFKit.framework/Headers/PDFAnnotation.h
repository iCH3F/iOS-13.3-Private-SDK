//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>


@class NSArray, NSDate, NSDictionary, NSString, NSURL, PDFAction, PDFAnnotationPrivateVars, PDFBorder, PDFDestination, PDFPage, UIColor, UIFont;

@interface PDFAnnotation : NSObject <NSCopying, NSCoding>
{
    PDFAnnotationPrivateVars *_private;
}

+ (id)PDFAnnotationKeysWithStringValues;
+ (id)PDFMarkupStyleLabels;
+ (id)PDFTextBorderColors;
+ (id)PDFTextColors;
+ (id)PDFMarkupColors;
+ (id)SubtypeForPDFMarkupStyle:(NSUInteger)arg1;
+ (long long)MarkupTypeForMarkupStyle:(NSUInteger)arg1;
+ (id)PDFKitBorderStyleArray;
+ (id)PDFKitAppearanceDictionaryArray;
+ (id)PDFKitSubtypeArray;
+ (id)PDFKitHighlightingModeArray;
+ (id)PDFKitFieldTypeArray;
+ (id)PDFKitAnnotationKeysIgnored;
+ (id)PDFKitAnnotationKeys;
+ (BOOL)annotationPageLayerEffectIsFlipped;
+ (void)setAnnotationPageLayerEffectIsFlipped:(BOOL)arg1;
+ (BOOL)PDFAnnotationIsHandledByPDFKit:(id)arg1;
+ (id)getProperNameStringFromString:(id)arg1;
+ (id)nameForLineStyle:(long long)arg1;
+ (long long)lineStyleFromName:(id)arg1;
// - (void).cxx_destruct;
- (void)discardTextStorageAndLayoutManager;
- (id)_getAttributedStringForTextWidget;
- (void)createTextStorageAndLayoutManager;
- (void)setTextInsets:(UIEdgeInsets)arg1;
- (UIEdgeInsets)textInsets;
- (void)setTextStorage:(id)arg1;
- (id)textStorage;
- (void)setLayoutManager:(id)arg1;
- (id)layoutManager;
- (id)scaledFontForTextWidget;
- (id)akAnnotationAdaptor;
- (id)formData;
- (void)updateFormData;
- (CGPoint)_pointOutsetFrom:(CGPoint)arg1 startPoint1:(CGPoint)arg2 startPoint2:(CGPoint)arg3 lineWidth:(double)arg4;
- (CGRect)_drawingRectForLineStyle:(long long)arg1 from:(CGPoint)arg2 to:(CGPoint)arg3 borderWidth:(double)arg4;
- (CDStruct_e3b9714e)_calculatePDFAnnotationLayerOutsetForAction:(int)arg1;
- (CGRect)extendedBoundsForAction:(int)arg1;
- (void)postAnnotationsChangedNotification;
- (void)updateAnnotationEffect;
- (void)removeFromPageView;
- (void)addToPageView;
- (struct __CFDictionary )gcCreateAttributesForFont:(id)arg1 color:(id)arg2;
- (id)debugQuickLookObject;
- (id)description;
- (void)_drawAnnotationWithBox:(long long)arg1 inContext:(CGContext )arg2;
- (void)drawWithBox:(long long)arg1 inContext:(CGContext )arg2;
- (void)drawAppearance:(CGPDFForm )arg1 withBox:(long long)arg2 inContext:(CGContext )arg3 inRect:(CGRect)arg4 scaleProportional:(BOOL)arg5;
- (void)drawAppearance:(CGPDFForm )arg1 withBox:(long long)arg2 inContext:(CGContext )arg3 scaleProportional:(BOOL)arg4;
- (void)drawAppearance:(CGPDFForm )arg1 withBox:(long long)arg2 inContext:(CGContext )arg3;
- (struct __CFDictionary )commonCreateDictionaryRef;
- (void)setDictionaryRef:(struct __CFDictionary )arg1;
- (BOOL)_shouldReadAppearanceStreams;
- (id)getColorFromAppearanceNSString:(id)arg1;
- (id)getFontFromAppearanceNSString:(id)arg1;
- (id)getColorFromAppearanceString:(CGPDFString )arg1;
- (id)getFontFromAppearanceString:(CGPDFString )arg1;
- (id)colorFromAppearanceTokens:(id)arg1;
- (id)fontNameFromAppearanceTokens:(id)arg1;
- (double)pointSizeFromAppearanceTokens:(id)arg1;
- (id)tokenizeAppearanceString:(id)arg1;
- (void)getAppearancesFromDictionary:(CGPDFDictionary )arg1 ofType:(int)arg2;
- (void)setAppearance:(CGPDFForm )arg1 forType:(int)arg2;
- (BOOL)savesAppearanceStream;
- (void)setSavesAppearanceStream:(BOOL)arg1;
- (CGPDFForm )appearance:(int)arg1;
- (id)replaceTextWidgetWithString:(id)arg1;
- (id)pathLock;
- (void)releaseCGPathArray;
- (void)setCGPathArray:(CGPath )arg1;
- (CGPath )cgPathArray;
- (void)setPopupDrawsText:(BOOL)arg1;
- (BOOL)popupDrawsText;
- (void)setPopupDrawsCloseWidget:(BOOL)arg1;
- (BOOL)popupDrawsCloseWidget;
- (void)setWidgetOnStateString:(id)arg1;
- (id)widgetOnStateString;
- (void)setPDFAnnotationDictionary:(id)arg1;
- (CGPDFDictionary )popupDictionary;
- (CGPDFDictionary )sourceDictionary;
- (NSUInteger)flags;
- (id)createDefaultAppearanceStringWithFont:(id)arg1 fontColor:(id)arg2;
- (void)_addUnknownPropertiesToDictionaryRef:(struct __CFDictionary )arg1;
- (void )_sanitizeValue:(id)arg1 forKey:(id)arg2;
- (void)addOptionsToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addMaxLenToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addFieldFlagsToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addAlternateFieldNameToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addFieldNameToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addDefaultFieldValueToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addFieldValueToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addFieldTypeToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addAppearanceCharacteristicsToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addNormalAndDownAppearanceWithStateToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addNormalAppearanceWithStateToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addNormalAndDownAppearanceToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addInkListToDictionaryRef:(struct __CFDictionary )arg1;
- (BOOL)addDestinationToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addHighlightingModeToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addOpenToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addNameToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addLineEndingStylesToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addLineToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addAdditionalActionsToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addActionToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addQuadPointsToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addQuaddingToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addDefaultAppearanceDictionaryRef:(struct __CFDictionary )arg1;
- (void)addBorderStyleToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addBorderToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addAppearanceForKey:(struct __CFString )arg1 toDictionaryRef:(struct __CFDictionary )arg2;
- (void)addNormalAppearanceToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addColor:(id)arg1 forKey:(struct __CFString )arg2 toDictionaryRef:(struct __CFDictionary )arg3;
- (id)_createArrayForColor:(id)arg1;
- (void)addPopupToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addTextLabelToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addModificationDateToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addFlagsToDictionaryRef:(struct __CFDictionary )arg1;
- (void)addRect:(CGRect)arg1 forKey:(struct __CFString )arg2 toDictionaryRef:(struct __CFDictionary )arg3;
- (id)_createArrayForCGRect:(CGRect)arg1;
- (void)addPageReferenceToDictionaryRef:(struct __CFDictionary )arg1;
- (id)_accessibilityTypeString;
- (BOOL)isTextWidget;
- (BOOL)isMarkupAnnotationSubtype;
- (void)setParent:(id)arg1;
- (id)parent;
@property(nonatomic, getter=isHighlighted) BOOL highlighted;
- (BOOL)isWidgetOrMarkupAnnotation;
- (id)_getFullFieldNameFromDictionary:(CGPDFDictionary )arg1;
- (void)setMouseDownAction:(id)arg1;
- (id)mouseDownAction;
- (BOOL)isMarkupAnnotation;
- (void)setForExport:(BOOL)arg1;
- (BOOL)shouldExport;
- (BOOL)containsPoint:(CGPoint)arg1;
- (long long)priority;
- (id)pdfAnnotationUUID;
- (id)_PDFTextColorForColor:(id)arg1;
- (id)_PDFMarkupColorForColor:(id)arg1;
- (id)initWithAnnotationDictionary:(CGPDFDictionary )arg1 forPage:(id)arg2;
- (void)setPopupInternal:(id)arg1 scanPage:(BOOL)arg2;
- (BOOL)isSelected;
- (void)setIsSelected:(BOOL)arg1;
- (void)setCGPDFAnnotation:(CGPDFAnnotation )arg1;
- (CGPDFAnnotation )CGPDFAnnotation;
- (void)_addAKAnnotationToDictionary:(struct __CFDictionary )arg1;
- (struct __CFDictionary )dictionaryRefExcludingParentOrPopup;
- (struct __CFDictionary )dictionaryRef;
- (id)getPDFKeyMappingDictionary;
- (void)_didRemoveValueForAnnotationKey:(id)arg1;
- (void)_didSetValue:(id)arg1 forAnnotationKey:(id)arg2;
- (void)removeValueForAnnotationKey:(id)arg1;
- (id)valueForAnnotationKey:(id)arg1;
@property(readonly, copy, nonatomic) NSDictionary *annotationKeyValues;
- (BOOL)_setVarious:(id)arg1 forAnnotationKey:(id)arg2;
- (BOOL)_setInteger:(id)arg1 forAnnotationKey:(id)arg2;
- (BOOL)_setDictionary:(id)arg1 forAnnotationKey:(id)arg2;
- (BOOL)_setArray:(id)arg1 forAnnotationKey:(id)arg2;
- (BOOL)_setString:(id)arg1 forAnnotationKey:(id)arg2;
- (BOOL)setRect:(CGRect)arg1 forAnnotationKey:(id)arg2;
- (BOOL)setBoolean:(BOOL)arg1 forAnnotationKey:(id)arg2;
- (BOOL)setValue:(id)arg1 forAnnotationKey:(id)arg2;
- (BOOL)_isValidAnnotationKey:(id)arg1;
- (BOOL)_annotationAllowsCommenting:(id)arg1;
- (void)removeAllAppearanceStreams;
@property(readonly, nonatomic) BOOL hasAppearanceStream;
- (id)toolTip;
- (void)setContents:(id)arg1 withUndo:(BOOL)arg2;
@property(copy, nonatomic) NSString *contents;
- (void)setMouseUpAction:(id)arg1;
- (id)mouseUpAction;
@property(retain, nonatomic) PDFAction *action;
@property(copy, nonatomic) UIColor *color;
@property(retain, nonatomic) PDFBorder *border;
- (void)printDictionaryKeyValues;
- (void)_printDictionary:(id)arg1 atDepth:(int)arg2;
- (void)setIsFullyConstructed:(BOOL)arg1;
- (BOOL)isFullyConstructed;
- (void)setScaleFactor:(double)arg1;
- (double)scaleFactor;
- (void)setAccessibilityNode:(id)arg1;
- (id)accessibilityNode;
- (id)_selectionForMarkupAnnotation;
- (id)textMarkupString;
- (id)displayName;
- (BOOL)isNoteAnnotation;
- (BOOL)isTextMarkupAnnotation;
- (BOOL)isTextMarkupOrNoteAnnotation;
- (void)setQuadPointsForIndexSet:(id)arg1 withUndo:(BOOL)arg2;
- (id)indexSetForQuadPoints;
- (BOOL)noteContainsPoint:(CGPoint)arg1;
- (CGRect)noteBounds;
- (NSUInteger)markupStyle;
- (BOOL)shouldComb;
- (void)setMouseHoverBackgroundColor:(id)arg1;
- (id)mouseHoverBackgroundColor;
- (void)setControl:(id)arg1;
- (id)control;
- (void)setShouldBurnIn:(BOOL)arg1;
- (BOOL)shouldBurnIn;
- (void)setIsSignature:(BOOL)arg1;
- (BOOL)isSignature;
@property(retain, nonatomic) PDFAnnotation *popup;
@property(copy, nonatomic) NSString *userName;
@property(copy, nonatomic) NSDate *modificationDate;
- (void)_restorePropertiesAfterSetBounds;
- (void)_savePropertiesBeforeSetBounds;
- (void)setBoundsWithUndo:(CGRect)arg1;
@property(nonatomic) CGRect bounds;
@property(copy, nonatomic) NSString *type;
@property(nonatomic) __weak PDFPage *page;
- (void)removeAKAnnotationAdaptor;
- (void)setupAKAnnotationAdaptorIfNecessary;
- (void)_releaseDictionaryRef;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
// - (id)copyWithZone:(_NSZone )arg1;
- (void)_generateFormFieldName;
- (void)secondaryInit;
- (void)commonInit;
- (id)initWithDictionary:(id)arg1 forPage:(id)arg2;
- (id)initWithBounds:(CGRect)arg1 forType:(id)arg2 withProperties:(id)arg3;
- (id)initCommonWithBounds:(CGRect)arg1;
- (id)init;
- (void)removeBezierPath:(id)arg1;
- (void)addBezierPath:(id)arg1;
@property(copy, nonatomic) NSString *stampName;
@property(copy, nonatomic) UIColor *backgroundColor;
@property(copy, nonatomic) NSString *caption;
@property(copy, nonatomic) NSString *fieldName;
@property(copy, nonatomic) NSURL *URL;
@property(retain, nonatomic) PDFDestination *destination;
@property(readonly, nonatomic) NSArray *paths;
@property(nonatomic, getter=isOpen) BOOL open;
@property(copy, nonatomic) NSString *buttonWidgetStateString;
@property(nonatomic) long long buttonWidgetState;
- (id)_textForValue:(id)arg1;
@property(copy, nonatomic) NSArray *values;
@property(copy, nonatomic) NSArray *choices;
@property(nonatomic, getter=isListChoice) BOOL listChoice;
@property(nonatomic, getter=isReadOnly) BOOL readOnly;
@property(nonatomic) BOOL radiosInUnison;
@property(nonatomic) BOOL allowsToggleToOff;
@property(copy, nonatomic) NSString *widgetDefaultStringValue;
@property(copy, nonatomic) NSString *widgetStringValue;
@property(nonatomic) long long maximumLength;
@property(nonatomic, getter=hasComb) BOOL comb;
@property(readonly, nonatomic) BOOL isPasswordField;
@property(nonatomic, getter=isMultiline) BOOL multiline;
- (void)_setBoolValue:(BOOL)arg1 forWidgetFieldFlag:(NSUInteger)arg2;
- (BOOL)_boolValueForWidgetFieldFlag:(NSUInteger)arg1;
- (void)setContentsLocked:(BOOL)arg1;
- (BOOL)contentsLocked;
- (void)setShouldToggleNoView:(BOOL)arg1;
- (BOOL)shouldToggleNoView;
- (void)setLocked:(BOOL)arg1;
- (BOOL)isLocked;
- (void)setReadOnlyAnnotation:(BOOL)arg1;
- (BOOL)isReadOnlyAnnotation;
@property(nonatomic) BOOL shouldDisplay; // @dynamic shouldDisplay;
- (void)setShouldNotRotate:(BOOL)arg1;
- (BOOL)shouldNotRotate;
- (void)setShouldNotZoom:(BOOL)arg1;
- (BOOL)shouldNotZoom;
@property(nonatomic) BOOL shouldPrint; // @dynamic shouldPrint;
- (void)setHidden:(BOOL)arg1;
- (BOOL)isHidden;
- (void)setInvisible:(BOOL)arg1;
- (BOOL)isInvisible;
- (void)_setBoolValue:(BOOL)arg1 forAnnotationFlag:(NSUInteger)arg2;
- (BOOL)_boolValueForAnnotationFlag:(NSUInteger)arg1 withDefaultValue:(BOOL)arg2;
@property(nonatomic) long long widgetControlType;
@property(copy, nonatomic) NSString *widgetFieldType;
@property(nonatomic) long long markupType;
@property(copy, nonatomic) NSArray *quadrilateralPoints;
@property(nonatomic) long long iconType;
@property(nonatomic) long long endLineStyle;
@property(nonatomic) long long startLineStyle;
@property(nonatomic) CGPoint endPoint;
@property(nonatomic) CGPoint startPoint;
@property(nonatomic) long long alignment;
@property(copy, nonatomic) UIColor *interiorColor;
@property(copy, nonatomic) UIColor *fontColor;
@property(copy, nonatomic) UIFont *font;

@end

