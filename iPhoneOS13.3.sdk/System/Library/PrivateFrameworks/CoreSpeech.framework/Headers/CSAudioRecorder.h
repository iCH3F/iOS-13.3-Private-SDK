//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CoreSpeech/AVVoiceControllerRecordDelegate-Protocol.h>
#import <CoreSpeech/CSAudioDecoderDelegate-Protocol.h>
#import <CoreSpeech/CSAudioFileReaderDelegate-Protocol.h>

@class AVVoiceController, CSAudioFileReader, CSRemoteRecordClient, NSDictionary, NSHashTable, NSMutableDictionary;
@protocol OS_dispatch_queue;

@interface CSAudioRecorder : NSObject <AVVoiceControllerRecordDelegate, CSAudioDecoderDelegate, CSAudioFileReaderDelegate>
{
    AVVoiceController *_voiceController;
    struct OpaqueAudioConverter _deinterleaver;
    struct AudioBufferList _interleavedABL;
    struct AudioBufferList _pNonInterleavedABL;
    CSRemoteRecordClient *_remoteRecordClient;
    NSDictionary *_latestContext;
    BOOL _shouldUseRemoteRecord;
    NSMutableDictionary *_opusDecoders;
    CSAudioFileReader *_audioFileReader;
    NSUInteger _audioFilePathIndex;
    BOOL _waitingForDidStart;
    NSObject<OS_dispatch_queue> *_queue;
    NSHashTable *_observers;
}

+ (void)createSharedAudioSession;
+ (NSUInteger)_convertDeactivateOption:(NSUInteger)arg1;
@property(retain, nonatomic) NSHashTable *observers; // @synthesize observers=_observers;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
// - (void).cxx_destruct;
- (id)_getRecordSettingsWithRequest:(id)arg1;
- (void)audioFileReaderDidStopRecording:(id)arg1 forReason:(long long)arg2;
- (void)audioFileReaderDidStartRecording:(id)arg1 successfully:(BOOL)arg2 error:(id)arg3;
- (void)audioFileReaderBufferAvailable:(id)arg1 buffer:(id)arg2 atTime:(NSUInteger)arg3;
- (BOOL)_needResetAudioInjectionIndex:(id)arg1;
- (void)_createDeInterleaverIfNeeded;
- (id)_deinterleaveBufferIfNeeded:(id)arg1;
- (void)voiceControllerMediaServicesWereReset:(id)arg1;
- (void)voiceControllerMediaServicesWereLost:(id)arg1;
- (void)voiceControllerDidSetAudioSessionActive:(id)arg1 isActivated:(BOOL)arg2;
- (void)voiceControllerWillSetAudioSessionActive:(id)arg1 willActivate:(BOOL)arg2;
- (void)voiceControllerEndRecordInterruption:(id)arg1;
- (void)voiceControllerBeginRecordInterruption:(id)arg1 withContext:(id)arg2;
- (void)voiceControllerBeginRecordInterruption:(id)arg1;
- (void)voiceControllerEncoderErrorDidOccur:(id)arg1 error:(id)arg2;
- (void)voiceControllerDidFinishAlertPlayback:(id)arg1 ofType:(int)arg2 error:(id)arg3;
- (void)voiceControllerRecordHardwareConfigurationDidChange:(id)arg1 toConfiguration:(int)arg2;
- (void)voiceControllerStreamInvalidated:(id)arg1 forStream:(NSUInteger)arg2;
- (void)voiceControllerDidStopRecording:(id)arg1 forStream:(NSUInteger)arg2 forReason:(long long)arg3;
- (void)voiceControllerAudioCallback:(id)arg1 forStream:(NSUInteger)arg2 buffer:(id)arg3;
- (void)voiceControllerDidStartRecording:(id)arg1 forStream:(NSUInteger)arg2 successfully:(BOOL)arg3 error:(id)arg4;
- (void)_audioRecorderDidStopRecordingForReason:(long long)arg1 streamHandleID:(NSUInteger)arg2;
- (void)_audioRecorderDidStartRecordingSuccessfully:(BOOL)arg1 streamHandleID:(NSUInteger)arg2 error:(id)arg3;
- (id)metrics;
- (float)averagePowerForChannel:(NSUInteger)arg1;
- (float)peakPowerForChannel:(NSUInteger)arg1;
- (void)updateMeters;
- (void)setMeteringEnabled:(BOOL)arg1;
- (NSUInteger)alertStartTime;
- (BOOL)playAlertSoundForType:(long long)arg1;
- (BOOL)playRecordStartingAlertAndResetEndpointerFromStream:(NSUInteger)arg1;
- (BOOL)setAlertSoundFromURL:(id)arg1 forType:(long long)arg2;
- (void)audioDecoderDidDecodePackets:(id)arg1 audioStreamHandleId:(NSUInteger)arg2 buffer:(id)arg3 remoteVAD:(id)arg4 timestamp:(NSUInteger)arg5 receivedNumChannels:(unsigned int)arg6;
- (id)_compensateChannelDataIfNeeded:(id)arg1 receivedNumChannels:(unsigned int)arg2;
- (void)_processAudioBuffer:(id)arg1 audioStreamHandleId:(NSUInteger)arg2;
- (void)_processAudioChain:(id)arg1 audioStreamHandleId:(NSUInteger)arg2 remoteVAD:(id)arg3 atTime:(NSUInteger)arg4;
- (BOOL)_shouldUseRemoteBuiltInMic:(id)arg1;
- (BOOL)_shouldUseRemoteRecordForContext:(id)arg1;
- (id)voiceTriggerInfo;
- (id)playbackRoute;
- (void)configureAlertBehavior:(id)arg1 audioStreamHandleId:(NSUInteger)arg2;
- (void)enableMiniDucking:(BOOL)arg1;
@property(nonatomic) BOOL duckOthersOption;
- (BOOL)deactivateAudioSession:(NSUInteger)arg1 error:(id )arg2;
- (BOOL)activateAudioSessionWithReason:(NSUInteger)arg1 streamHandleId:(NSUInteger)arg2 error:(id )arg3;
- (BOOL)prewarmAudioSessionWithStreamHandleId:(NSUInteger)arg1 error:(id )arg2;
- (BOOL)isNarrowBandWithStreamHandleId:(NSUInteger)arg1;
- (id)recordSettingsWithStreamHandleId:(NSUInteger)arg1;
- (float)recordingSampleRateWithStreamHandleId:(NSUInteger)arg1;
- (id)recordDeviceInfoWithStreamHandleId:(NSUInteger)arg1;
- (id)recordRouteWithStreamHandleId:(NSUInteger)arg1;
- (BOOL)isRecordingWithStreamHandleId:(NSUInteger)arg1;
- (BOOL)isSessionCurrentlyActivated;
- (BOOL)stopAudioStreamWithStreamHandleId:(NSUInteger)arg1 error:(id )arg2;
- (BOOL)startAudioStreamWithOption:(id)arg1 streamHandleId:(NSUInteger)arg2 error:(id )arg3;
- (BOOL)_startAudioStreamForAudioInjection;
- (BOOL)_shouldInjectAudio;
- (BOOL)prepareAudioStreamRecord:(id)arg1 streamHandleId:(NSUInteger)arg2 error:(id )arg3;
- (BOOL)setCurrentContext:(id)arg1 streamHandleId:(NSUInteger)arg2 error:(id )arg3;
- (NSUInteger)setContext:(id)arg1 error:(id )arg2;
- (id)_voiceControllerWithError:(id )arg1;
- (void)_destroyVoiceController;
- (void)dealloc;
- (void)willDestroy;
- (void)unregisterObserver:(id)arg1;
- (void)registerObserver:(id)arg1;
- (id)initWithQueue:(id)arg1 error:(id )arg2;

@end

