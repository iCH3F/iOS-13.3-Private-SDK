//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CoreSpeech/CSEndpointAnalyzerImpl-Protocol.h>

@protocol CSEndpointAnalyzerDelegate, CSEndpointAnalyzerImplDelegate;

@interface CSNNVADEndpointAnalyzer : NSObject <CSEndpointAnalyzerImpl>
{
    BOOL canProcessCurrentRequest;
    NSUInteger activeChannel;
    double automaticEndpointingSuspensionEndTime;
    double delay;
    id <CSEndpointAnalyzerDelegate> delegate;
    long long endpointStyle;
    double lastEndOfVoiceActivityTime;
    double lastStartOfVoiceActivityTime;
    double minimumDurationForEndpointer;
    double startWaitTime;
    id <CSEndpointAnalyzerImplDelegate> implDelegate;
}

@property(nonatomic) __weak id <CSEndpointAnalyzerImplDelegate> implDelegate; // @synthesize implDelegate;
@property(nonatomic) double startWaitTime; // @synthesize startWaitTime;
@property(nonatomic) double minimumDurationForEndpointer; // @synthesize minimumDurationForEndpointer;
@property(readonly, nonatomic) double lastStartOfVoiceActivityTime; // @synthesize lastStartOfVoiceActivityTime;
@property(readonly, nonatomic) double lastEndOfVoiceActivityTime; // @synthesize lastEndOfVoiceActivityTime;
@property(nonatomic) long long endpointStyle; // @synthesize endpointStyle;
@property(nonatomic) __weak id <CSEndpointAnalyzerDelegate> delegate; // @synthesize delegate;
@property(nonatomic) double delay; // @synthesize delay;
@property(readonly, nonatomic) BOOL canProcessCurrentRequest; // @synthesize canProcessCurrentRequest;
@property(nonatomic) double automaticEndpointingSuspensionEndTime; // @synthesize automaticEndpointingSuspensionEndTime;
@property(nonatomic) NSUInteger activeChannel; // @synthesize activeChannel;
// - (void).cxx_destruct;
- (double)trailingSilenceDurationAtEndpoint;
- (void)resetForNewRequestWithSampleRate:(NSUInteger)arg1 recordContext:(id)arg2 recordSettings:(id)arg3;
- (void)stopEndpointer;
- (void)recordingStoppedForReason:(long long)arg1;
- (void)processAudioSamplesAsynchronously:(id)arg1;
- (void)reset;
- (void)preheat;
- (id)init;

@end

