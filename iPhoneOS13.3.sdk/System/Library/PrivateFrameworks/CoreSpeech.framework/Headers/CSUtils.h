//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@interface CSUtils : NSObject
{
}

+ (id)timeStampWithSaltGrain;
+ (id)deviceBuildVersion;
+ (id)deviceUserAssignedName;
+ (double)systemUpTime;
+ (id)deviceProductVersion;
+ (id)deviceProductType;
+ (id)getFixedHighPrioritySerialQueueWithLabel:(id)arg1;
+ (id)getFixedPrioritySerialQueueWithLabel:(id)arg1 fixedPriority:(int)arg2;
+ (id)rootQueueWithFixedPriority:(int)arg1;
+ (BOOL)supportZeroFilter;
+ (BOOL)supportBeepCanceller;
+ (BOOL)supportCircularBuffer;
+ (BOOL)shouldDeinterleaveAudioOnCS;
+ (BOOL)supportBluetoothDeviceVoiceTrigger;
+ (BOOL)supportJarvisVoiceTrigger;
+ (BOOL)supportHearstVoiceTrigger;
+ (BOOL)hasRemoteCoreSpeech;
+ (BOOL)shouldDownloadVTAssetsOnDaemon;
+ (BOOL)supportTdsrOnCS;
+ (BOOL)supportLanguageDetector;
+ (BOOL)supportSessionActivateDelay;
+ (BOOL)shouldDelayPhaticForMyriadDecision;
+ (BOOL)supportPhatic;
+ (BOOL)supportPremiumModel;
+ (BOOL)supportPremiumWatchAssets;
+ (BOOL)supportCompactPlus;
+ (BOOL)supportRaiseToSpeak;
+ (BOOL)supportTTS;
+ (BOOL)supportSAT;
+ (BOOL)supportSmartVolume;
+ (BOOL)supportHybridEndpointer;
+ (BOOL)supportCSTwoShotDecision;
+ (BOOL)supportSelfTriggerSuppression;
+ (BOOL)supportOpportunisticZLL;
+ (BOOL)supportPremiumAssets;
+ (BOOL)supportKeywordDetector;
+ (BOOL)supportContinuousVoiceTrigger;
+ (BOOL)shouldRunVTOnCS;
+ (id)_contentsOfDirectoryAtURL:(id)arg1 matchingPattern:(id)arg2 includingPropertiesForKeys:(id)arg3 error:(id )arg4;
+ (void)_sortedURLsInDirectory:(id)arg1 matchingPattern:(id)arg2 completion:(id /* CDUnknownBlockType */)arg3;
+ (void)URLsInDirectory:(id)arg1 matchingPattern:(id)arg2 completion:(id /* CDUnknownBlockType */)arg3;
+ (void)clearLogFilesInDirectory:(id)arg1 matchingPattern:(id)arg2 exceedNumber:(NSUInteger)arg3;
+ (void)removeLogFilesInDirectory:(id)arg1 matchingPattern:(id)arg2 beforeDays:(float)arg3;
+ (id)assetHashInResourcePath:(id)arg1;
+ (id)getSiriLanguageWithFallback:(id)arg1;
+ (void)apply12dBGain:(id)arg1;
+ (id)convertToShortLPCMBufFromFloatLPCMBuf:(id)arg1;
+ (id)convertToFloatLPCMBufFromShortLPCMBuf:(id)arg1;
+ (BOOL)deleteExistingSATModelForLanguageCode:(id)arg1;
+ (id)removeItemAtPath:(id)arg1;
+ (id)getImplicitEnrollmentUtterancesPriorTo:(id)arg1 forType:(NSUInteger)arg2 forLanguageCode:(id)arg3 forProfileID:(id)arg4;
+ (id)getSortedImplicitEnrollmentUtterancesForType:(NSUInteger)arg1 forLanguageCode:(id)arg2 forProfileID:(id)arg3;
+ (id)getImplicitEnrollmentUtterancesFromDirectory:(id)arg1;
+ (id)getExplicitEnrollmentUtterancesForType:(NSUInteger)arg1 forLanguageCode:(id)arg2 forProfileID:(id)arg3;
+ (void)getEnrollmentUtterancesCountFromDirectory:(id)arg1 withCountBlock:(id /* CDUnknownBlockType */)arg2;
+ (id)getBaseProfileOnlyEnrollmentUtterancesFromDirectory:(id)arg1;
+ (id)getExplicitOnlyEnrollmentUtterancesFromDirectory:(id)arg1;
+ (id)getExplicitEnrollmentUtterancesFromDirectory:(id)arg1;
+ (id)getEnrollmentUtterancesFromDirectory:(id)arg1;
+ (id)getEnrollmentUtterancesForModelType:(NSUInteger)arg1 forLanguageCode:(id)arg2;
+ (id)spIdComposeProfileVersionsFor:(id)arg1;
+ (id)spIdMapIdentifiersToSiriDebugID:(id)arg1;
+ (id)spIdMapScoresToSharedSiriID:(id)arg1;
+ (id)mapRawScores:(id)arg1 toScoresOfType:(NSUInteger)arg2 withRawScoreOffset:(float)arg3 withRawScoreScale:(float)arg4 withLogitCeil:(float)arg5 withLogitFloor:(float)arg6 withSATThreshold:(float)arg7;
+ (id)spIdSiriDebugVoiceProfileCacheDirectoryForProfile:(id)arg1 locale:(id)arg2;
+ (id)spIdSiriDebugVoiceProfileRootDirectoryForProfile:(id)arg1 locale:(id)arg2;
+ (id)spIdSiriDebugTrainedUsersFilePathForLocale:(id)arg1;
+ (id)spIdSiriDebugVoiceProfileStoreRootDirectoryForLocale:(id)arg1;
+ (id)spIdSiriDebugVoiceProfileStoreRootDirectory;
+ (id)spIdSiriDebugGradingDataRootDirectory;
+ (id)spIdSiriDebugVTDataDirectory;
+ (void)getHomeUserIdForVoiceProfile:(id)arg1 withCompletion:(id /* CDUnknownBlockType */)arg2;
+ (id)getContentsOfDirectory:(id)arg1;
+ (id)getVoiceProfilesMarkedForUpload;
+ (void)markVoiceProfileUploaded:(id)arg1;
+ (void)markUploadForVoiceProfile:(id)arg1;
+ (void)dumpFilesInDirectory:(id)arg1;
+ (long long)getNumberOfAudioFilesInDirectory:(id)arg1;
+ (id)getImplicitUtteranceCacheDirectory;
+ (BOOL)isCurrentDeviceCompatibleWithVoiceProfileAt:(id)arg1;
+ (BOOL)isCurrentDeviceCompatibleWithNewerVoiceProfileAt:(id)arg1;
+ (NSUInteger)deviceCategoryForDeviceProductType:(id)arg1;
+ (id)deviceCategoryStringRepresentationForCategoryType:(NSUInteger)arg1;
+ (void)updateVoiceProfileVersionFileForProfileId:(id)arg1 forLanguageCode:(id)arg2;
+ (BOOL)migrateVoiceProfileToVersion:(NSUInteger)arg1 forLanguageCode:(id)arg2;
+ (BOOL)checkIfMigrationNecessaryForCompatibilityVersion:(NSUInteger)arg1 forLanguageCode:(id)arg2;
+ (NSUInteger)getVoiceProfileProductCategoryFromVersionFilePath:(id)arg1;
+ (NSUInteger)getCurrentVoiceProfileProductCategoryForLanguageCode:(id)arg1;
+ (id)getVoiceProfileIdentityFromVersionFilePath:(id)arg1;
+ (id)getCurrentVoiceProfileIdentityForProfileId:(id)arg1 forLanguageCode:(id)arg2;
+ (NSUInteger)getVoiceProfileVersionFromVersionFilePath:(id)arg1;
+ (NSUInteger)getCurrentVoiceProfileVersionForProfileId:(id)arg1 forLanguageCode:(id)arg2;
+ (id)getProfileVersionFilePathForProfileId:(id)arg1 forLanguageCode:(id)arg2;
+ (BOOL)isSpidSupportedInCurrentLanguage;
+ (void)streamAudioFromFileUrl:(id)arg1 audioStreamBasicDescriptor:(struct AudioStreamBasicDescription)arg2 samplesPerStreamChunk:(NSUInteger)arg3 audioDataAvailableHandler:(id /* CDUnknownBlockType */)arg4;
+ (id)spidAudioTrainUtterancesDir;
+ (void)cleanupOrphanedVoiceIdGradingFiles;
+ (BOOL)spIdAudioLogsCountLimitReached;
+ (id)spIdAudioLogsGradingDir;
+ (id)spIdAudioLogsDir;
+ (void)createDirectoryIfDoesNotExist:(id)arg1;
+ (id)spIdVoiceProfileImportRootDir;
+ (id)spIdSATModelDirForLocale:(id)arg1 spidType:(NSUInteger)arg2 modelType:(NSUInteger)arg3;
+ (id)spIdSATModelDirForLocale:(id)arg1 profileId:(id)arg2 spidType:(NSUInteger)arg3 modelType:(NSUInteger)arg4;
+ (id)spIdSATAudioDirForLocale:(id)arg1 spidType:(NSUInteger)arg2;
+ (id)spIdSATAudioDirForLocale:(id)arg1 profileId:(id)arg2 spidType:(NSUInteger)arg3;
+ (id)spIdSATImplicitAudioCacheDirForLocale:(id)arg1 profileId:(id)arg2;
+ (id)spIdSATDirForLocale:(id)arg1 profileId:(id)arg2 spidType:(NSUInteger)arg3;
+ (id)spIdSATDirForLocale:(id)arg1 profileId:(id)arg2;
+ (id)spIdSATDirForLocale:(id)arg1;
+ (id)spIdTrainedUsersFilePathForLocale:(id)arg1;
+ (id)satConfigFileNameForCSSpIdType:(NSUInteger)arg1 forModelType:(NSUInteger)arg2;
+ (id)stringForCSSpIdModelType:(NSUInteger)arg1;
+ (id)stringForCSSATRunMode:(NSUInteger)arg1;
+ (NSUInteger)spIdTypeForString:(id)arg1;
+ (id)stringForCSSpIdType:(NSUInteger)arg1;
+ (id)stringForInvocationStyle:(NSUInteger)arg1;
+ (BOOL)hasRemoteBuiltInMic;
+ (BOOL)supportIOSBargeIn;
+ (id)alertMuteBehaviorDict;
+ (id)alertMuteSettings;
+ (id)speexRecordSettings;
+ (id)opusRecordSettings;
+ (id)lpcmRecordSettings;
+ (id)jarvisVoiceTriggerRecordContext:(id)arg1;
+ (id)hearstVoiceTriggerRecordContext:(id)arg1;
+ (id)voiceTriggerRecordContext;
+ (struct AudioStreamBasicDescription)aiffFileASBD;
+ (struct AudioStreamBasicDescription)utteranceFileASBD;
+ (struct AudioStreamBasicDescription)lpcmNarrowBandASBD;
+ (struct AudioStreamBasicDescription)lpcmASBD;
+ (struct AudioStreamBasicDescription)lpcmNonInterleavedASBDWithSampleRate:(float)arg1 numberOfChannels:(unsigned int)arg2;
+ (struct AudioStreamBasicDescription)lpcmNonInterleavedWithRemoteVADASBD;
+ (struct AudioStreamBasicDescription)lpcmNonInterleavedASBD;
+ (struct AudioStreamBasicDescription)lpcmInterleavedASBDWithSampleRate:(float)arg1 numberOfChannels:(unsigned int)arg2;
+ (struct AudioStreamBasicDescription)lpcmInterleavedWithRemoteVADASBD;
+ (struct AudioStreamBasicDescription)lpcmInterleavedASBD;
+ (struct AudioStreamBasicDescription)opusNarrowBandASBD;
+ (struct AudioStreamBasicDescription)opusASBD;
+ (struct AudioStreamBasicDescription)lpcmInt16NarrowBandASBD;
+ (struct AudioStreamBasicDescription)lpcmInt16ASBD;
+ (BOOL)readAudioChunksFrom:(id)arg1 block:(id /* CDUnknownBlockType */)arg2;
+ (void)iterateBitset:(NSUInteger)arg1 block:(id /* CDUnknownBlockType */)arg2;
+ (unsigned int)getNumElementInBitset:(NSUInteger)arg1;
+ (NSUInteger)macHostTimeFromBridgeHostTime:(NSUInteger)arg1;
+ (NSUInteger)sampleCountFromHostTime:(NSUInteger)arg1 anchorHostTime:(NSUInteger)arg2 anchorSampleCount:(NSUInteger)arg3;
+ (NSUInteger)hostTimeFromSampleCount:(NSUInteger)arg1 anchorHostTime:(NSUInteger)arg2 anchorSampleCount:(NSUInteger)arg3;
+ (double)getHostClockFrequency;
+ (double)hostTimeToTimeInterval:(NSUInteger)arg1;
+ (float)hostTimeToSeconds:(NSUInteger)arg1;
+ (NSUInteger)secondsToHostTime:(float)arg1;
+ (id)recordContextString:(id)arg1;
+ (BOOL)isRecordContextJarvisButtonPress:(id)arg1;
+ (BOOL)isRecordContextJarvisVoiceTrigger:(id)arg1;
+ (BOOL)isRecordContextRaiseToSpeak:(id)arg1;
+ (BOOL)isRecordContextHearstDoubleTap:(id)arg1;
+ (BOOL)isRecordContextHearstVoiceTrigger:(id)arg1;
+ (BOOL)isRecordContextSpeakerIdTrainingTrigger:(id)arg1;
+ (BOOL)isRecordContextAutoPrompt:(id)arg1;
+ (BOOL)isRecordContextHomeButtonPress:(id)arg1;
+ (BOOL)isRecordContextVoiceTrigger:(id)arg1;

@end

