//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSString;
@protocol OS_dispatch_queue;

@interface AXAccessQueue : NSObject
{
    NSString *_threadLocalStorageKey;
    NSObject<OS_dispatch_queue> *_concurrentQueue;
    NSUInteger _specialBehaviors;
}

+ (id)backgroundAccessQueue;
+ (id)mainAccessQueue;
@property(nonatomic) NSUInteger specialBehaviors; // @synthesize specialBehaviors=_specialBehaviors;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *concurrentQueue; // @synthesize concurrentQueue=_concurrentQueue;
@property(copy, nonatomic) NSString *threadLocalStorageKey; // @synthesize threadLocalStorageKey=_threadLocalStorageKey;
// - (void).cxx_destruct;
- (void)_performBlock:(id /* CDUnknownBlockType */)arg1 withDispatchFunction:(/* void * /* void * CDUnknownFunctionPointerType */ */)arg2 synchronously:(BOOL)arg3 accessQueueContext:(NSUInteger)arg4;
- (NSUInteger)_accessQueueContextInCurrentExecutionThread;
- (id)description;
- (BOOL)canOnlyReadInCurrentExecutionThread;
- (BOOL)canWriteInCurrentExecutionThread;
- (BOOL)canReadInCurrentExecutionThread;
- (void)afterDelay:(double)arg1 processWritingBlock:(id /* CDUnknownBlockType */)arg2;
- (void)afterDelay:(double)arg1 processReadingBlock:(id /* CDUnknownBlockType */)arg2;
- (void)performAsynchronousWritingBlock:(id /* CDUnknownBlockType */)arg1;
- (void)performAsynchronousReadingBlock:(id /* CDUnknownBlockType */)arg1;
- (void)performSynchronousWritingBlock:(id /* CDUnknownBlockType */)arg1;
- (void)performSynchronousReadingBlock:(id /* CDUnknownBlockType */)arg1;
@property(readonly, nonatomic) BOOL behavesWithoutErrorReporting;
@property(readonly, nonatomic) BOOL behavesAsMainQueue;
@property(readonly, copy, nonatomic) NSString *label;
- (id)initWithParentClass:(Class)arg1 description:(id)arg2 appendUUIDToLabel:(BOOL)arg3;
- (id)_initWithLabel:(id)arg1 appendUUIDToLabel:(BOOL)arg2 specialBehaviors:(NSUInteger)arg3;
- (id)initWithLabel:(id)arg1 appendUUIDToLabel:(BOOL)arg2;
- (id)init;

@end

