//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class AXDispatchTimer, NSDate, NSMutableArray, UNUserNotificationCenter;
@protocol OS_dispatch_queue;

@interface HUNoiseController : NSObject
{
    int _measurementSuspensionNotifyToken;
    BOOL _measurementEnabled;
    BOOL _notified;
    BOOL _muted;
    BOOL _notified80;
    BOOL _notified85;
    BOOL _notified90;
    float _slowLeq;
    float _fastLeq;
    float _sampleDuration;
    AXDispatchTimer *_edDummyDataTimer;
    AXDispatchTimer *_adamSuspendedTimer;
    NSMutableArray *_leqBuffer;
    NSUInteger _thresholdLevel;
    NSDate *_timeNotified;
    NSMutableArray *_leqBuffer80Threshold;
    NSMutableArray *_leqBuffer85Threshold;
    NSMutableArray *_leqBuffer90Threshold;
    NSDate *_timeNotified80;
    NSDate *_timeNotified85;
    NSDate *_timeNotified90;
    NSObject<OS_dispatch_queue> *_dataQueue;
    UNUserNotificationCenter *_userNotificationCenter;
}

+ (BOOL)deviceSupportsEnvironmentalDosimetry;
+ (id)sharedController;
@property(readonly, nonatomic) UNUserNotificationCenter *userNotificationCenter; // @synthesize userNotificationCenter=_userNotificationCenter;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dataQueue; // @synthesize dataQueue=_dataQueue;
@property(retain, nonatomic) NSDate *timeNotified90; // @synthesize timeNotified90=_timeNotified90;
@property(retain, nonatomic) NSDate *timeNotified85; // @synthesize timeNotified85=_timeNotified85;
@property(retain, nonatomic) NSDate *timeNotified80; // @synthesize timeNotified80=_timeNotified80;
@property(nonatomic, getter=isNotified90) BOOL notified90; // @synthesize notified90=_notified90;
@property(nonatomic, getter=isNotified85) BOOL notified85; // @synthesize notified85=_notified85;
@property(nonatomic, getter=isNotified80) BOOL notified80; // @synthesize notified80=_notified80;
@property(retain, nonatomic) NSMutableArray *leqBuffer90Threshold; // @synthesize leqBuffer90Threshold=_leqBuffer90Threshold;
@property(retain, nonatomic) NSMutableArray *leqBuffer85Threshold; // @synthesize leqBuffer85Threshold=_leqBuffer85Threshold;
@property(retain, nonatomic) NSMutableArray *leqBuffer80Threshold; // @synthesize leqBuffer80Threshold=_leqBuffer80Threshold;
@property(nonatomic, getter=isMuted) BOOL muted; // @synthesize muted=_muted;
@property(nonatomic, getter=isNotified) BOOL notified; // @synthesize notified=_notified;
@property(nonatomic) float sampleDuration; // @synthesize sampleDuration=_sampleDuration;
@property(retain, nonatomic) NSDate *timeNotified; // @synthesize timeNotified=_timeNotified;
@property(nonatomic) NSUInteger thresholdLevel; // @synthesize thresholdLevel=_thresholdLevel;
@property(nonatomic, getter=isMeasurementEnabled) BOOL measurementEnabled; // @synthesize measurementEnabled=_measurementEnabled;
@property(nonatomic) float fastLeq; // @synthesize fastLeq=_fastLeq;
@property(nonatomic) float slowLeq; // @synthesize slowLeq=_slowLeq;
@property(retain, nonatomic) NSMutableArray *leqBuffer; // @synthesize leqBuffer=_leqBuffer;
@property(retain, nonatomic) AXDispatchTimer *adamSuspendedTimer; // @synthesize adamSuspendedTimer=_adamSuspendedTimer;
@property(retain, nonatomic) AXDispatchTimer *edDummyDataTimer; // @synthesize edDummyDataTimer=_edDummyDataTimer;
// - (void).cxx_destruct;
- (id)registerForEnvironmentalDosimetryUpdates:(id)arg1;
- (float)calculateLeqForBuffer:(id)arg1;
- (void)maintainCircularBuffer:(id)arg1 forTime:(float)arg2;
- (void)checkToSurfaceAnalyticsNotificationForSPL:(float)arg1 withDuration:(float)arg2 andBuffer:(id)arg3 forTime:(float)arg4 andThreshold:(long long)arg5;
- (void)checkToResetAnalyticsNotificationsForSPL:(float)arg1 withDuration:(float)arg2 andBuffer:(id)arg3 forTime:(float)arg4 andThreshold:(long long)arg5;
- (void)applyAnalyticsNotificationLogicForSPL:(float)arg1 withDuration:(float)arg2;
- (void)checkToSurfaceNotificationForSPL:(float)arg1 withDuration:(float)arg2 andBuffer:(id)arg3 forTime:(float)arg4;
- (void)checkToResetNotificationsForSPL:(float)arg1 withDuration:(float)arg2 andBuffer:(id)arg3 forTime:(float)arg4;
- (void)applyNotificationLogicForSPL:(float)arg1 withDuration:(float)arg2;
- (void)_stopReceivingAudioDosageSamples;
- (void)_clearCachedValues;
- (void)_sendUpdateMessageForCurrentValues;
- (void)readEnvironmentalDosimetryLevels;
- (void)restartADAMTimer;
- (NSUInteger)alertTypeFromLevel:(float)arg1;
- (void)showNotificationForAlertType:(NSUInteger)arg1;
- (id)init;

@end

