//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSData, NSDictionary, NSMutableArray, NSMutableDictionary;
@protocol OS_dispatch_queue;

@interface NPKGizmoDatabase : NSObject
{
    struct sqlite3 _database;
    struct sqlite3_stmt _deleteStatement;
    struct sqlite3_stmt _insertStatement;
    struct sqlite3_stmt _insertDiffStatement;
    struct sqlite3_stmt _selectPassDataStatement;
    struct sqlite3_stmt _selectPassAndImageSetsDataStatement;
    struct sqlite3_stmt _selectPassDiffStatement;
    struct sqlite3_stmt _updateDeletePendingStatment;
    struct sqlite3_stmt _selectDeletePendingStatement;
    struct sqlite3_stmt _updatePreferredAIDStatement;
    struct sqlite3_stmt _selectPreferredAIDStatement;
    struct sqlite3_stmt _insertTransactionStatement;
    struct sqlite3_stmt _removeTransactionStatement;
    struct sqlite3_stmt _removeTransactionWithServiceIdentifier;
    struct sqlite3_stmt _selectTransactionsStatement;
    struct sqlite3_stmt _selectTransactionsStatementWithSource;
    struct sqlite3_stmt _selectTransactionsStatementWithoutSource;
    struct sqlite3_stmt _selectTransactionWithIdentifierStatement;
    struct sqlite3_stmt _selectTransactionWithServiceIdentifierStatement;
    struct sqlite3_stmt _selectPassUniqueIDAsssociateToTransactionWithIdentifierStatement;
    struct sqlite3_stmt _selectPassUniqueIDAsssociateToTransactionWithServiceIdentifierStatement;
    struct sqlite3_stmt _deleteTransactionsForPassStatement;
    struct sqlite3_stmt _trimTransactionsForPassStatement;
    struct sqlite3_stmt _selectTransitAppletStateForPassStatement;
    struct sqlite3_stmt _updateTransitAppletStateForPassStatement;
    struct sqlite3_stmt _insertEphemeralTransactionStatement;
    struct sqlite3_stmt _deleteEphemeralTransactionByPassUniqueIDStatement;
    struct sqlite3_stmt _currentEphemeralTransactionIdentifierStatement;
    struct sqlite3_stmt _selectLastAddValueAmountForPassStatement;
    struct sqlite3_stmt _updateLastAddValueAmountForPassStatement;
    struct sqlite3_stmt _selectPendingAddValueDateForPassStatement;
    struct sqlite3_stmt _updatePendingAddValueDateForPassStatement;
    struct sqlite3_stmt _selectCloudKitArchivedTransactionsStatement;
    struct sqlite3_stmt _selectBalancesForPassStatement;
    struct sqlite3_stmt _updateBalancesForPassStatement;
    NSObject<OS_dispatch_queue> *_dbQueue;
    BOOL _isInTransaction;
    NSMutableDictionary *_manifest;
    NSMutableArray *_passDescriptions;
    NSArray *_libraryHashes;
    int _externallyChangedBroadcasts;
    BOOL _sendingLocalNotifyDatabaseChanged;
    BOOL _needsMoreLocalNotifyDatabaseChanged;
    BOOL _passDBIsAvailable;
}

+ (NSUInteger)latestWatchOSMajorVersion;
+ (void)setMigrationDataSource:(id)arg1;
+ (id)_migrationDataSource;
+ (id)_migrationDelegateQueue;
+ (long long)maxDatabaseVersion;
+ (id)sharedDatabase;
@property(nonatomic) BOOL passDBIsAvailable; // @synthesize passDBIsAvailable=_passDBIsAvailable;
// - (void).cxx_destruct;
- (BOOL)_table:(id)arg1 containsColumn:(id)arg2;
- (void)_attemptDatabaseOpen;
- (void)_handleHasMigrationDataSource;
- (void)_handleFirstUnlock;
- (void)_handleDatabaseChangedExternally;
- (BOOL)_preconditionsMetForDatabaseOpen;
- (void)_updateDatabaseVersionRow:(long long)arg1;
- (void)_insertDatabaseVersionRow:(long long)arg1;
- (long long)_databaseVersionExists:(BOOL )arg1 valid:(BOOL )arg2;
- (BOOL)_migrateDatabase:(id /* CDUnknownBlockType */)arg1;
- (id)filteredPassesUsingPassDescriptionPredicate:(id)arg1 includeImageSets:(BOOL)arg2;
- (BOOL)hasPassesMatchingPassDescriptionPredicate:(id)arg1;
- (void)enumerateAllPassesAndDescriptionsWithBlock:(id /* CDUnknownBlockType */)arg1 includeImageSets:(BOOL)arg2;
- (void)enumerateAllPassesWithBlock:(id /* CDUnknownBlockType */)arg1 includeImageSets:(BOOL)arg2;
- (id)manifestHashesForWatchOSMajorVersion:(NSUInteger)arg1;
@property(readonly) NSDictionary *manifestHashes; // @dynamic manifestHashes;
- (id)_libraryHashLockedForWatchOSMajorVersion:(NSUInteger)arg1;
- (id)libraryHashForWatchOSMajorVersion:(NSUInteger)arg1;
@property(readonly) NSData *libraryHash; // @dynamic libraryHash;
@property(readonly) NSArray *passDescriptions;
- (id)_getPreferredPaymentApplicationForPaymentPass:(id)arg1 aid:(id )arg2;
- (id)preferredPaymentApplicationForPaymentPass:(id)arg1;
- (void)setPreferredPaymentApplication:(id)arg1 forPaymentPass:(id)arg2;
- (BOOL)_getDeletePendingForUniqueID:(id)arg1;
- (void)setDeletePending:(BOOL)arg1 forUniqueID:(id)arg2;
- (id)diffForUniqueID:(id)arg1;
- (id)passForUniqueID:(id)arg1 includeImageSets:(BOOL)arg2;
- (id)passForUniqueID:(id)arg1;
- (void)_saveDiffLocked:(id)arg1 forPassWithUniqueID:(id)arg2;
- (id)_diffForUniqueIDLocked:(id)arg1;
- (id)_passForUniqueIDLocked:(id)arg1 includeImageSets:(BOOL)arg2;
- (BOOL)_updateCompleteRemoteHashesDuringMigration;
- (BOOL)_updateSettingsDuringMigration:(id)arg1;
- (BOOL)_updateHasStoredValueDuringMigration:(id)arg1;
- (BOOL)_updateEncodedPaymentPassDuringMigration:(id)arg1;
- (BOOL)_updateHasUserSelectableContactlessPaymentApplications:(id)arg1;
- (BOOL)_updateEffectivePaymentApplicationStateDuringMigration:(id)arg1;
- (BOOL)_updateLocalizedDescriptionDuringMigration:(id)arg1;
- (BOOL)_updateOrganizationNamesDuringMigration:(id)arg1;
- (BOOL)_updateAvailableActionsDuringMigration:(id)arg1;
- (BOOL)_updateFrontAndBackFieldBucketsDuringMigration:(id)arg1;
- (BOOL)_updateCompleteLocalHashesDuringMigration:(id)arg1;
- (BOOL)_updateIngestedDatesDuringMigration:(id)arg1;
- (BOOL)_updateDevicePaymentApplicationsDuringMigration:(id)arg1;
- (BOOL)_updateExpressPassTypesMaskDuringMigration:(id)arg1;
- (BOOL)_updateIssuerCountryCodesDuringMigration:(id)arg1;
- (BOOL)_repairEncodedImagesDuringMigration:(id)arg1;
- (BOOL)_updateEncodedImageSetsDuringMigration:(id)arg1;
- (BOOL)_updatePrimaryContactlessAndInAppPaymentApplicationsDuringMigration:(id)arg1;
- (BOOL)_updateDeviceAndPreferredPaymentApplicationsDuringMigration:(id)arg1;
- (BOOL)_updatePrivateLabelAndCobrandDuringMigration:(id)arg1;
- (BOOL)_updateNFCPayloadDuringMigration:(id)arg1;
- (void)_enumerateAllPassesForMigration:(id /* CDUnknownBlockType */)arg1;
- (void)_setPaymentBalancesLocked:(id)arg1 forPassWithUniqueID:(id)arg2;
- (id)_paymentBalancesForPassWithUniqueIDLocked:(id)arg1;
- (void)_setPendingAddValueDateLocked:(id)arg1 forPassWithUniqueID:(id)arg2;
- (id)_pendingAddValueDateForPassWithUniqueIDLocked:(id)arg1;
- (void)_setLastAddValueAmountLocked:(id)arg1 forPassWithUniqueID:(id)arg2;
- (id)_lastAddValueAmountForPassWithUniqueIDLocked:(id)arg1;
- (id)_currentEphemeralTransactionIdentifierForPassWithUniqueID:(id)arg1;
- (void)_setCurrentEphemeralTransactionIdentifier:(id)arg1 forPassWithUniqueID:(id)arg2;
- (void)_setTransitAppletStateLocked:(id)arg1 forPassWithUniqueID:(id)arg2;
- (id)_transitAppletStateForPassWithUniqueIDLocked:(id)arg1;
- (id)_passUniqueIDForTransactionWithServiceIdentifier:(id)arg1;
- (id)_passUniqueIDForTransactionWithIdentifier:(id)arg1;
- (id)_transactionWithServiceIdentifierLocked:(id)arg1;
- (id)_transactionWithIdentifierLocked:(id)arg1;
- (id)_transactionsWithCloudKitArchivedState:(BOOL)arg1;
- (id)_transactionsForUniqueIDLocked:(id)arg1 withTransactionSource:(NSUInteger)arg2 withBackingData:(NSUInteger)arg3 startDate:(id)arg4 endDate:(id)arg5 orderByDate:(long long)arg6 limit:(NSUInteger)arg7;
- (void)_trimTransactionsForPassWithUniqueIDLocked:(id)arg1 withPaymentCredentialType:(long long)arg2;
- (void)_removeTransactionsForPassWithUniqueID:(id)arg1;
- (void)_removeTransactionWithIdentifier:(id)arg1 forPassWithUniqueID:(id)arg2;
- (void)_removeTransactionWithServiceIdentifierLocked:(id)arg1 forPassWithUniqueID:(id)arg2;
- (void)_saveTransactionLocked:(id)arg1 forPassWithUniqueID:(id)arg2;
- (BOOL)_removePassWithUniqueIDLocked:(id)arg1;
- (void)_savePassLocked:(id)arg1 locallyAdded:(BOOL)arg2 wasUpdate:(BOOL )arg3;
- (BOOL)_passDBIsAvailableLocked;
@property(readonly, nonatomic) NSUInteger numberOfPasses;
- (void)_notifyDatabaseChangedExternally;
- (void)_notifyDatabaseChangedWithNoop:(BOOL)arg1 firstUnlock:(BOOL)arg2;
- (void)_notifyForFirstUnlock;
- (void)_notifyDatabaseChangedWithNoop:(BOOL)arg1;
- (void)_notifyTransactionRemoved:(id)arg1 forPassWithUniqueID:(id)arg2;
- (void)_notifyTransactionAddedOrUpdated:(id)arg1 forPassWithUniqueID:(id)arg2;
- (id /* CDUnknownBlockType */)restoreBlockForVolatilePassData;
- (id)pendingAddValueDateForPassWithUniqueID:(id)arg1;
- (void)setPendingAddValueDate:(id)arg1 forPassWithUniqueID:(id)arg2;
- (id)lastAddValueAmountForPassWithUniqueID:(id)arg1;
- (void)setLastAddValueAmount:(id)arg1 forPassWithUniqueID:(id)arg2;
- (id)transactionsWithCloudKitArchivedState:(BOOL)arg1;
- (id)currentEphemeralTransactionIdentifierForPassWithUniqueID:(id)arg1;
- (void)setCurrentEphemeralTransactionIdentifier:(id)arg1 forPassWithUniqueID:(id)arg2;
- (void)setPaymentBalances:(id)arg1 forPassWithUniqueID:(id)arg2;
- (id)paymentBalancesForPassWithUniqueID:(id)arg1;
- (void)setTransitAppletState:(id)arg1 forPassWithUniqueID:(id)arg2;
- (id)transitAppletStateForPassWithUniqueID:(id)arg1;
- (id)passUniqueIDForTransactionWithServiceIdentifier:(id)arg1;
- (id)passUniqueIDForTransactionWithIdentifier:(id)arg1;
- (id)transactionWithServiceIdentifier:(id)arg1;
- (id)transactionWithIdentifier:(id)arg1;
- (id)transactionsForPassWithUniqueID:(id)arg1 withTransactionSource:(NSUInteger)arg2 withBackingData:(NSUInteger)arg3 startDate:(id)arg4 endDate:(id)arg5 orderedByDate:(long long)arg6 limit:(long long)arg7;
- (void)removeTransactionsForPassWithUniqueID:(id)arg1;
- (void)removeTransactionWithIdentifier:(id)arg1 forPassWithUniqueID:(id)arg2;
- (void)_saveTransaction:(id)arg1 forPassWithUniqueID:(id)arg2 withPaymentCredentialType:(long long)arg3 shouldTrim:(BOOL)arg4;
- (void)saveTransaction:(id)arg1 forPass:(id)arg2;
- (void)saveTransaction:(id)arg1 forPassWithUniqueID:(id)arg2 withPaymentCredentialType:(long long)arg3;
- (id)rebuildDatabaseWithPasses:(id)arg1;
- (id)removePassWithUniqueID:(id)arg1;
- (void)saveDiff:(id)arg1 forPassWithUniqueID:(id)arg2;
- (id)savePass:(id)arg1 isLocalPass:(BOOL)arg2;
- (id)_decodeObjectOfClass:(Class)arg1 fromStatement:(struct sqlite3_stmt )arg2 column:(int)arg3;
- (id)_decodeObjectOfClasses:(id)arg1 fromStatement:(struct sqlite3_stmt )arg2 column:(int)arg3;
- (void)_performTransactionWithBlock:(id /* CDUnknownBlockType */)arg1;
- (void)_loadInitialManifestLocked;
- (struct sqlite3_stmt )updateBalancesForPassStatement;
- (struct sqlite3_stmt )selectBalancesForPassStatement;
@property(readonly) struct sqlite3_stmt selectCloudKitArchivedTransactionsStatement;
@property(readonly) struct sqlite3_stmt updatePendingAddValueDateForPassStatement;
@property(readonly) struct sqlite3_stmt selectPendingAddValueDateForPassStatement;
@property(readonly) struct sqlite3_stmt updateLastAddValueAmountForPassStatement;
@property(readonly) struct sqlite3_stmt selectLastAddValueAmountForPassStatement;
@property(readonly) struct sqlite3_stmt currentEphemeralTransactionIdentifierStatement;
@property(readonly) struct sqlite3_stmt deleteEphemeralTransactionByPassUniqueIDStatement;
@property(readonly) struct sqlite3_stmt insertEphemeralTransactionStatement;
@property(readonly) struct sqlite3_stmt updateTransitAppletStateForPassStatement;
@property(readonly) struct sqlite3_stmt selectTransitAppletStateForPassStatement;
@property(readonly) struct sqlite3_stmt trimTransactionsForPassStatement;
@property(readonly) struct sqlite3_stmt deleteTransactionsForPassStatement;
- (struct sqlite3_stmt )selectPassUniqueIDAsssociateToTransactionWithServiceIdentifierStatement;
- (struct sqlite3_stmt )selectPassUniqueIDAsssociateToTransactionWithIdentifierStatement;
@property(readonly) struct sqlite3_stmt selectTransactionWithServiceIdentifierStatement;
@property(readonly) struct sqlite3_stmt selectTransactionWithIdentifierStatement;
- (struct sqlite3_stmt )selectTransactionsStatementWithTransactionSource:(NSUInteger)arg1 orderByDate:(long long)arg2;
- (struct sqlite3_stmt )removeTransactionWithServiceIdentifierStatement;
- (struct sqlite3_stmt )removeTransactionStatement;
- (struct sqlite3_stmt )insertTransactionStatement;
@property(readonly) struct sqlite3_stmt selectPassDiffStatement; // @dynamic selectPassDiffStatement;
@property(readonly) struct sqlite3_stmt selectPassAndImageSetsDataStatement; // @dynamic selectPassAndImageSetsDataStatement;
@property(readonly) struct sqlite3_stmt selectPassDataStatement; // @dynamic selectPassDataStatement;
@property(readonly) struct sqlite3_stmt selectPreferredAIDStatement;
@property(readonly) struct sqlite3_stmt updatePreferredAIDStatement;
- (struct sqlite3_stmt )selectDeletePendingStatement;
@property(readonly) struct sqlite3_stmt updateDeletePendingStatement;
@property(readonly) struct sqlite3_stmt insertDiffStatement;
@property(readonly) struct sqlite3_stmt insertStatement; // @dynamic insertStatement;
@property(readonly) struct sqlite3_stmt deleteStatement; // @dynamic deleteStatement;
@property(readonly) struct sqlite3 database; // @dynamic database;
- (void)_executeSQLQuery:(id)arg1 processResultsBlock:(id /* CDUnknownBlockType */)arg2;
- (BOOL)_executeSQL:(id)arg1;
- (void)dealloc;
- (id)init;

@end

