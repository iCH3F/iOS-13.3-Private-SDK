//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIControl.h>

#import <CameraUI/CAMZoomButtonDelegate-Protocol.h>

@class CAMFeedbackController, CAMZoomButton, CAMZoomButtonPlatter, CAMZoomControlButtonMaskView, CAMZoomDial, NSArray, NSDate, NSSet, NSString, NSTimer, UIView;
@protocol CAMZoomControlDelegate;

@interface CAMZoomControl : UIControl <CAMZoomButtonDelegate>
{
    struct {
        BOOL respondsToDidChangeZoomFactor;
        BOOL respondsToCanToggleBetweenZoomFactors;
        BOOL respondsToToggleBetweenZoomFactors;
        BOOL respondsToCanPlayHaptics;
    } _delegateFlags;
    BOOL __zoomDialEnabled;
    BOOL __shouldShowZoomDial;
    BOOL __eligibleForSwipeDownToDismiss;
    id <CAMZoomControlDelegate> _delegate;
    long long _layoutStyle;
    double _zoomFactor;
    double _minAvailableZoomFactor;
    double _maxAvailableZoomFactor;
    long long _orientation;
    NSString *_contentSizeCategory;
    CAMZoomButton *__zoomButton;
    CAMZoomDial *__zoomDial;
    UIView *__dialClippingView;
    CAMZoomControlButtonMaskView *__buttonMaskView;
    CAMZoomButtonPlatter *__buttonPlatter;
    long long __zoomControlMode;
    NSArray *__zoomFactors;
    NSArray *__displayZoomFactors;
    double __previousTouchTime;
    NSTimer *__zoomDialVisibilityTimer;
    NSDate *__startTimeForHideAnimationInProgress;
    double __hideAnimationInProgressDuration;
    CAMZoomButton *__highlightedZoomButton;
    CAMFeedbackController *__feedbackController;
    NSArray *__significantHapticDisplayValues;
    NSArray *__significantHapticDisplayValueEpsilons;
    NSSet *__significantHapticDisplayValueSwitchOverIndexes;
    long long __lastHapticZone;
    double __snappedZoomFactor;
    double __unsnappingProgress;
    double _leftMargin;
    double _zoomButtonMaxYWhenContracted;
    double _zoomDialRadius;
    CGPoint __startTouchLocation;
    CGPoint __previousTouchLocation;
    UIEdgeInsets _contentInsets;
}

@property(nonatomic) double zoomDialRadius; // @synthesize zoomDialRadius=_zoomDialRadius;
@property(nonatomic) double zoomButtonMaxYWhenContracted; // @synthesize zoomButtonMaxYWhenContracted=_zoomButtonMaxYWhenContracted;
@property(nonatomic) UIEdgeInsets contentInsets; // @synthesize contentInsets=_contentInsets;
@property(nonatomic) double leftMargin; // @synthesize leftMargin=_leftMargin;
@property(nonatomic, setter=_setUnsnappingProgress:) double _unsnappingProgress; // @synthesize _unsnappingProgress=__unsnappingProgress;
@property(nonatomic, setter=_setSnappedZoomFactor:) double _snappedZoomFactor; // @synthesize _snappedZoomFactor=__snappedZoomFactor;
@property(nonatomic) long long _lastHapticZone; // @synthesize _lastHapticZone=__lastHapticZone;
@property(retain, nonatomic, setter=_setSignificantHapticDisplayValueSwitchOverIndexes:) NSSet *_significantHapticDisplayValueSwitchOverIndexes; // @synthesize _significantHapticDisplayValueSwitchOverIndexes=__significantHapticDisplayValueSwitchOverIndexes;
@property(retain, nonatomic, setter=_setSignificantHapticDisplayValueEpsilons:) NSArray *_significantHapticDisplayValueEpsilons; // @synthesize _significantHapticDisplayValueEpsilons=__significantHapticDisplayValueEpsilons;
@property(retain, nonatomic, setter=_setSignificantHapticDisplayValues:) NSArray *_significantHapticDisplayValues; // @synthesize _significantHapticDisplayValues=__significantHapticDisplayValues;
@property(readonly, nonatomic) CAMFeedbackController *_feedbackController; // @synthesize _feedbackController=__feedbackController;
@property(retain, nonatomic, setter=_setHighlightedZoomButton:) CAMZoomButton *_highlightedZoomButton; // @synthesize _highlightedZoomButton=__highlightedZoomButton;
@property(nonatomic, setter=_setHideAnimationInProgressDuration:) double _hideAnimationInProgressDuration; // @synthesize _hideAnimationInProgressDuration=__hideAnimationInProgressDuration;
@property(retain, nonatomic, setter=_setStartTimeForHideAnimationInProgress:) NSDate *_startTimeForHideAnimationInProgress; // @synthesize _startTimeForHideAnimationInProgress=__startTimeForHideAnimationInProgress;
@property(retain, nonatomic, setter=_setZoomDialVisibilityTimer:) NSTimer *_zoomDialVisibilityTimer; // @synthesize _zoomDialVisibilityTimer=__zoomDialVisibilityTimer;
@property(nonatomic, getter=_isEligibleForSwipeDownToDismiss, setter=_setEligibleForSwipeDownToDismiss:) BOOL _eligibleForSwipeDownToDismiss; // @synthesize _eligibleForSwipeDownToDismiss=__eligibleForSwipeDownToDismiss;
@property(nonatomic, setter=_setPreviousTouchTime:) double _previousTouchTime; // @synthesize _previousTouchTime=__previousTouchTime;
@property(nonatomic, setter=_setPreviousTouchLocation:) CGPoint _previousTouchLocation; // @synthesize _previousTouchLocation=__previousTouchLocation;
@property(nonatomic, setter=_setStartTouchLocation:) CGPoint _startTouchLocation; // @synthesize _startTouchLocation=__startTouchLocation;
@property(nonatomic, setter=_setShouldShowZoomDial:) BOOL _shouldShowZoomDial; // @synthesize _shouldShowZoomDial=__shouldShowZoomDial;
@property(nonatomic, getter=_isZoomDialEnabled, setter=_setZoomDialEnabled:) BOOL _zoomDialEnabled; // @synthesize _zoomDialEnabled=__zoomDialEnabled;
@property(retain, nonatomic, setter=_setDisplayZoomFactors:) NSArray *_displayZoomFactors; // @synthesize _displayZoomFactors=__displayZoomFactors;
@property(retain, nonatomic, setter=_setZoomFactors:) NSArray *_zoomFactors; // @synthesize _zoomFactors=__zoomFactors;
@property(nonatomic, setter=_setZoomControlMode:) long long _zoomControlMode; // @synthesize _zoomControlMode=__zoomControlMode;
@property(readonly, nonatomic) CAMZoomButtonPlatter *_buttonPlatter; // @synthesize _buttonPlatter=__buttonPlatter;
@property(readonly, nonatomic) CAMZoomControlButtonMaskView *_buttonMaskView; // @synthesize _buttonMaskView=__buttonMaskView;
@property(readonly, nonatomic) UIView *_dialClippingView; // @synthesize _dialClippingView=__dialClippingView;
@property(readonly, nonatomic) CAMZoomDial *_zoomDial; // @synthesize _zoomDial=__zoomDial;
@property(readonly, nonatomic) CAMZoomButton *_zoomButton; // @synthesize _zoomButton=__zoomButton;
@property(nonatomic) NSString *contentSizeCategory; // @synthesize contentSizeCategory=_contentSizeCategory;
@property(nonatomic) long long orientation; // @synthesize orientation=_orientation;
@property(nonatomic) double maxAvailableZoomFactor; // @synthesize maxAvailableZoomFactor=_maxAvailableZoomFactor;
@property(nonatomic) double minAvailableZoomFactor; // @synthesize minAvailableZoomFactor=_minAvailableZoomFactor;
@property(nonatomic) double zoomFactor; // @synthesize zoomFactor=_zoomFactor;
@property(nonatomic) long long layoutStyle; // @synthesize layoutStyle=_layoutStyle;
@property(nonatomic) __weak id <CAMZoomControlDelegate> delegate; // @synthesize delegate=_delegate;
// - (void).cxx_destruct;
- (void)_updateHaptics:(BOOL)arg1;
- (long long)_hapticZoneForDisplayValue:(double)arg1;
- (void)_updateHapticEpsilons;
- (void)_updateSignificantValuesForHaptics;
- (void)zoomButtonDidLayout;
- (void)_handleButtonTappedForSingleCameraZoomPlusToggle;
- (void)_handleButtonTappedForSelection:(id)arg1;
- (void)_handleButtonTappedForTripleCameraMode:(id)arg1;
- (void)_handleButtonTappedForDualCameraMode;
- (void)_handleButtonTapped:(id)arg1;
- (BOOL)_isPointWithinButtonPlatter:(CGPoint)arg1;
- (BOOL)_isTouchWithinButtonPlatter:(id)arg1;
@property(readonly, nonatomic) BOOL _shouldShowButtonPlatter;
@property(readonly, nonatomic, getter=_isButtonPlatterSupportedForConfiguration) BOOL _buttonPlatterSupportedForConfiguration;
- (void)_cleanupForCancelTracking;
- (void)cancelTrackingWithEvent:(id)arg1;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (BOOL)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (BOOL)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)_resetSnapping;
- (BOOL)_isWithinZoomButtonBoundsWithTouch:(id)arg1;
- (id)hitTest:(CGPoint)arg1 withEvent:(id)arg2;
- (BOOL)_shouldInterceptTouchesForHidingZoomDial;
- (double)_normalizeValue:(double)arg1 betweenMinimumValue:(double)arg2 maximumValue:(double)arg3;
- (double)_additionalAccelerationForMovementFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2 deltaX:(double)arg3;
- (double)_accelerationForMovementFromPointFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2 elapsedTime:(double)arg3;
- (double)_dampingFactorForMovementFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2;
- (double)_dampingFactorForPerpendicularityFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2;
- (double)_dampingFactorForDistanceFromDialForPoint:(CGPoint)arg1;
- (double)_distanceFromDialClippingViewToPoint:(CGPoint)arg1;
- (void)setOrientation:(long long)arg1 animated:(BOOL)arg2;
- (void)_updateMaskViewForZoomButtonHighlightingTransform;
- (void)layoutSubviews;
- (UIEdgeInsets)alignmentRectInsets;
- (void)_cancelDelayedZoomDialVisibilityChange;
- (void)_handleZoomDialVisibilityTimerFiredWithUserInfo:(id)arg1;
- (void)_setShouldShowZoomDial:(BOOL)arg1 animationDuration:(long long)arg2 afterDelay:(double)arg3;
- (void)setShouldShowZoomDial:(BOOL)arg1 animationDuration:(long long)arg2;
@property(readonly, nonatomic) BOOL _shouldHideZoomButtonBackground;
- (void)_updateSubviewsAlphasWithDuration:(double)arg1 forConfigurationChange:(BOOL)arg2;
- (void)_setShouldShowZoomDial:(BOOL)arg1 animationDuration:(long long)arg2;
- (void)_setZoomDialEnabled:(BOOL)arg1 animationDuration:(long long)arg2;
@property(readonly, nonatomic) BOOL _shouldUpdateZoomDialContentSizeCategory;
@property(readonly, nonatomic) BOOL _shouldUseZoomDialMask;
- (void)_updateZoomButtonTappableEdgeInsets;
@property(readonly, nonatomic) double zoomDialBorderWidth;
@property(nonatomic) double zoomDialContentMaskingHeight;
- (void)setLeftMargin:(double)arg1 animated:(BOOL)arg2;
- (void)setZoomButtonSymbol:(long long)arg1 animated:(BOOL)arg2;
@property(readonly, nonatomic) long long zoomButtonSymbol;
@property(readonly, nonatomic) long long zoomButtonContentType;
- (void)_setZoomFactor:(double)arg1 interactionType:(long long)arg2 shouldNotifyDelegate:(BOOL)arg3;
- (double)_zoomFactorForDisplayZoomValue:(double)arg1;
- (double)_displayZoomValueForZoomFactor:(double)arg1;
@property(readonly, nonatomic) double _displayZoomValue;
- (void)_updateDisplayedValuesAnimated:(BOOL)arg1;
@property(readonly, nonatomic) BOOL _shouldSnapDialToSwitchOverZoomFactors;
@property(readonly, nonatomic) NSArray *_switchOverZoomFactors;
@property(readonly, nonatomic) double _displayMaximumZoomFactor;
@property(readonly, nonatomic) double _displayMinimumZoomFactor;
@property(readonly, nonatomic) double maximumZoomFactor;
@property(readonly, nonatomic) double minimumZoomFactor;
- (void)configureForZoomSymbolToggle;
- (void)configureForSelectionOnlyWithDisplayZoomFactors:(id)arg1 selectedIndex:(NSUInteger)arg2 animated:(BOOL)arg3;
- (void)configureForToggleOnlyWithZoomFactor:(double)arg1 displayZoomFactor:(double)arg2;
- (void)configureForToggleOnlyWithZoomFactor:(double)arg1 minimumZoomFactor:(double)arg2 displayMinimumZoomFactor:(double)arg3 maximumZoomFactor:(double)arg4 displayMaximumZoomFactor:(double)arg5;
- (void)configureForSingleCameraPlusToggleWithZoomFactor:(double)arg1 minimumZoomFactor:(double)arg2 displayMinimumZoomFactor:(double)arg3 maximumZoomFactor:(double)arg4 displayMaximumZoomFactor:(double)arg5;
- (void)configureForDualDeviceWithZoomFactor:(double)arg1 minimumZoomFactor:(double)arg2 displayMinimumZoomFactor:(double)arg3 maximumZoomFactor:(double)arg4 displayMaximumZoomFactor:(double)arg5 dualCameraSwitchOverZoomFactor:(double)arg6 displayDualCameraSwitchOverZoomFactor:(double)arg7;
- (void)configureForTripleDeviceWithZoomFactor:(double)arg1 minimumZoomFactor:(double)arg2 displayMinimumZoomFactor:(double)arg3 maximumZoomFactor:(double)arg4 displayMaximumZoomFactor:(double)arg5 switchOverZoomFactor1:(double)arg6 displaySwitchOverZoomFactor1:(double)arg7 switchOverZoomFactor2:(double)arg8 displaySwitchOverZoomFactor2:(double)arg9;
- (void)_configureForControlMode:(long long)arg1 zoomFactor:(double)arg2 zoomFactors:(id)arg3 displayZoomFactors:(id)arg4 zoomButtonContentType:(long long)arg5 animated:(BOOL)arg6;
- (id)initWithLayoutStyle:(long long)arg1;

@end

