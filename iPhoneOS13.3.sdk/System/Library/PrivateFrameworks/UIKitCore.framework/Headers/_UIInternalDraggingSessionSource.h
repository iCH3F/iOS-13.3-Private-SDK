//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKitCore/_UIDraggingImageSlotOwner.h>

#import <UIKitCore/_UIDraggingInfo-Protocol.h>

@class NSArray, NSTimer, PBItemCollection, UIDragEvent, UIDraggingBeginningSessionConfiguration, UIDraggingSystemTouchRoutingPolicy, UIView, UIWindow, _UIDragSetDownAnimation, _UIDruidSourceConnection;
@protocol _UIDraggingSessionDelegate;

__attribute__((visibility("hidden")))
@interface _UIInternalDraggingSessionSource : _UIDraggingImageSlotOwner <_UIDraggingInfo>
{
    CGPoint _lastNotifiedCentroid;
    BOOL _didHandOffDragImage;
    PBItemCollection *_pbItemCollection;
    UIDraggingSystemTouchRoutingPolicy *_touchRoutingPolicy;
    _UIDragSetDownAnimation *_setDownAnimation;
    long long _stateAfterSetDown;
    BOOL _sentWillEnd;
    BOOL _hostIsActive;
    BOOL _originatedInHostedWindow;
    NSTimer *_waitingToSendDidExitAppTimer;
    UIDraggingBeginningSessionConfiguration *_configuration;
    unsigned int _sessionIdentifier;
    id <_UIDraggingSessionDelegate> _delegate;
    UIDragEvent *_dragEvent;
    UIView *_sourceView;
    long long _state;
    NSUInteger _resultOperation;
    NSArray *_internalItems;
    long long _dataOwner;
    UIWindow *_centroidWindow;
    NSUInteger _withinAppSourceOperationMask;
    NSUInteger _outsideAppSourceOperationMask;
    _UIDruidSourceConnection *_druidConnection;
    CGPoint _centroid;
}

@property(retain, nonatomic) _UIDruidSourceConnection *druidConnection; // @synthesize druidConnection=_druidConnection;
@property(readonly, nonatomic) NSUInteger outsideAppSourceOperationMask; // @synthesize outsideAppSourceOperationMask=_outsideAppSourceOperationMask;
@property(readonly, nonatomic) NSUInteger withinAppSourceOperationMask; // @synthesize withinAppSourceOperationMask=_withinAppSourceOperationMask;
@property(readonly, nonatomic) unsigned int sessionIdentifier; // @synthesize sessionIdentifier=_sessionIdentifier;
@property(readonly, nonatomic) UIWindow *centroidWindow; // @synthesize centroidWindow=_centroidWindow;
@property(readonly, nonatomic) CGPoint centroid; // @synthesize centroid=_centroid;
@property(nonatomic) long long dataOwner; // @synthesize dataOwner=_dataOwner;
@property(copy, nonatomic) NSArray *internalItems; // @synthesize internalItems=_internalItems;
@property(nonatomic) NSUInteger resultOperation; // @synthesize resultOperation=_resultOperation;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(nonatomic) __weak UIView *sourceView; // @synthesize sourceView=_sourceView;
@property(nonatomic) __weak UIDragEvent *dragEvent; // @synthesize dragEvent=_dragEvent;
@property(nonatomic) __weak id <_UIDraggingSessionDelegate> delegate; // @synthesize delegate=_delegate;
// - (void).cxx_destruct;
- (void)_sendDataTransferFinished;
- (void)_sendDidMove;
- (void)_sendDidEndWithOperation:(NSUInteger)arg1;
- (void)_sendWillAddItems:(id)arg1;
- (void)_sendHandedOffDragImageForItem:(id)arg1;
- (void)_sendHandedOffDragImage;
- (void)_sendWillBegin;
- (void)_hostDidDeactivate;
- (void)_hostWillBecomeActive;
@property(readonly, nonatomic) BOOL didHandOffDragImage;
@property(readonly, nonatomic) BOOL isActive;
@property(readonly, nonatomic) BOOL canAddItems;
- (void)cancelDrag;
@property(readonly, nonatomic) BOOL shouldCancelOnAppDeactivation;
- (void)_sendWillEndWithOperation:(NSUInteger)arg1;
- (void)_handOffCancelledItems:(id)arg1;
- (void)addPublicItems:(id)arg1;
- (void)dragIsInsideApp;
- (void)dragDidExitApp;
- (void)updateCentroidFromDragEvent;
- (void)itemsBecameDirty:(id)arg1;
- (void)_getOperationMaskFromDelegate;
- (void)_didBeginDrag;
- (void)beginDrag:(id /* CDUnknownBlockType */)arg1;
@property(readonly, nonatomic) NSUInteger draggingSourceOperationMask;
- (CGPoint)draggingLocationInCoordinateSpace:(id)arg1;
- (void)enumerateItemsUsingBlock:(id /* CDUnknownBlockType */)arg1;
- (BOOL)dynamicallyUpdatesPrefersFullSizePreviews;
@property(readonly, nonatomic) BOOL prefersFullSizePreview;
- (BOOL)preventsSimultaneousDragFromView:(id)arg1;
- (id)initWithDragManager:(id)arg1 configuration:(id)arg2;
- (BOOL)touchRoutingPolicyContainsContextIDToAlwaysSend:(unsigned int)arg1;
- (id)touchRoutingPolicy;

@end

