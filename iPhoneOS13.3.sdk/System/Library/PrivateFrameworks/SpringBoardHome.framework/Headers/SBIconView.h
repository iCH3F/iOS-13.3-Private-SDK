//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

#import <SpringBoardHome/SBCloseBoxViewDelegate-Protocol.h>
#import <SpringBoardHome/SBIconAccessoryInfoProvider-Protocol.h>
#import <SpringBoardHome/SBIconObserver-Protocol.h>
#import <SpringBoardHome/SBReusableView-Protocol.h>
#import <SpringBoardHome/SBSHardwareButtonEventConsuming-Protocol.h>
#import <SpringBoardHome/_UISettingsKeyObserver-Protocol.h>

@class NSArray, NSCountedSet, NSDate, NSHashTable, NSMapTable, NSString, NSURL, SBCloseBoxView, SBFParallaxSettings, SBFolderIcon, SBFolderIconImageCache, SBHIconImageCache, SBHRecentsDocumentExtensionProvider, SBIcon, SBIconImageCrossfadeView, SBIconImageView, UIColor, UIContextMenuConfiguration, UIContextMenuInteraction, UIDragInteraction, UIFont, UIImage, UILongPressGestureRecognizer, UITapGestureRecognizer, UIViewPropertyAnimator, _UILegibilitySettings, _UIStatesFeedbackGenerator;
@protocol BSInvalidatable, SBIconAccessoryView, SBIconContinuityInfo, SBIconLabelAccessoryView, SBIconLabelView, SBIconListLayout, SBIconListLayoutProvider, SBIconViewDelegate;

@interface SBIconView : UIView <_UISettingsKeyObserver, UIGestureRecognizerDelegate, UIDragInteractionDelegate, SBCloseBoxViewDelegate, UIContextMenuInteractionDelegate, SBSHardwareButtonEventConsuming, SBIconObserver, SBReusableView, SBIconAccessoryInfoProvider>
{
    SBIcon *_icon;
    NSString *_iconLocation;
    SBIconImageView *_iconImageView;
    SBIconImageCrossfadeView *_crossfadeView;
    UIView<SBIconAccessoryView> *_accessoryView;
    SBCloseBoxView *_closeBox;
    UIView<SBIconLabelView> *_labelView;
    UIView<SBIconLabelAccessoryView> *_labelAccessoryView;
    SBFParallaxSettings *_badgeParallaxSettings;
    UIView *_dropGlow;
    unsigned int _drawsLabel:1;
    unsigned int _isEditing:1;
    unsigned int _pauseReasons:3;
    unsigned int _isGrabbed:1;
    unsigned int _isOverlapping:1;
    unsigned int _refusesRecipientStatus:1;
    unsigned int _highlighted:1;
    unsigned int _launchDisabled:1;
    unsigned int _suppressesDisabledPresentation:1;
    unsigned int _iconWasTappedWhenDisabled:1;
    unsigned int _isJittering:1;
    unsigned int _allowJitter:1;
    unsigned int _allowCloseBox:1;
    unsigned int _touchDownInIcon:1;
    unsigned int _hideLabel:1;
    unsigned int _hideLabelAccessoryView:1;
    unsigned int _iconContentScalingEnabled:1;
    unsigned int _startsDragMoreQuickly:1;
    unsigned int _isDragging:1;
    unsigned int _suppressesBlurryBackgroundChanges:1;
    unsigned int _showingCloseBox:1;
    unsigned int _showingAccessoryView:1;
    unsigned int _inDock:1;
    unsigned int _allowsLabelArea:1;
    unsigned int _allowsPassthroughHitTesting:1;
    unsigned int _showsDropGlow:1;
    unsigned int _hasSetIconImageInfo:1;
    unsigned int _showsSquareCorners:1;
    unsigned int _disableContextMenuInteraction:1;
    unsigned int _contextMenuInteractionPending:1;
    unsigned int _contextMenuInteractionActive:1;
    unsigned int _disallowsBlockedForScreenTimeExpiration:1;
    unsigned int _imageLoadingBehavior:2;
    double _iconContentScale;
    UIView *_scalingContainer;
    CGRect _visibleImageRect;
    NSHashTable *_observers;
    NSCountedSet *_forbidEditingModeReasons;
    struct SBIconImageInfo _iconImageInfo;
    UIFont *_labelFont;
    SBHRecentsDocumentExtensionProvider *_recentsDocumentExtensionProvider;
    _UIStatesFeedbackGenerator *_feedbackGenerator;
    BOOL _enabled;
    BOOL _paused;
    id <SBIconViewDelegate> _delegate;
    id /* CDUnknownBlockType */ _contextMenuInteractionPendingCompletion;
    _UILegibilitySettings *_legibilitySettings;
    double _iconImageAlpha;
    double _iconAccessoryAlpha;
    double _iconLabelAlpha;
    NSArray *_applicationShortcutItems;
    NSDate *_lastTouchDownDate;
    id <SBIconContinuityInfo> _continuityInfo;
    id <SBIconListLayoutProvider> _listLayoutProvider;
    SBHIconImageCache *_iconImageCache;
    SBFolderIconImageCache *_folderIconImageCache;
    SBFolderIcon *_folderIcon;
    UIView *_folderIconBackgroundView;
    UIColor *_accessibilityTintColor;
    UIDragInteraction *_dragInteraction;
    UITapGestureRecognizer *_tapGestureRecognizer;
    UIViewPropertyAnimator *_accessoryViewAnimator;
    long long _displayedLabelAccessoryType;
    UILongPressGestureRecognizer *_editingModeGestureRecognizer;
    UIContextMenuInteraction *_contextMenuInteraction;
    UIContextMenuConfiguration *_activeContextMenuConfiguration;
    NSString *_presentedWidgetBundleIdentifier;
    id <BSInvalidatable> _homeButtonPressConsumingAssertion;
    SBIconView *_activePreviewIcon;
    NSMapTable *_pendingAnimatorCompletionsTable;
}

+ (Class)_closeBoxClassForType:(long long)arg1;
+ (id)componentBackgroundView;
+ (double)_defaultDragInteractionLiftDelay;
+ (BOOL)supportsTapGesture;
+ (BOOL)supportsDragInteraction;
+ (id)dragContextForDragItem:(id)arg1;
+ (id)draggedItemBundleIdentifiersInDrag:(id)arg1;
+ (id)_jitterRotationAnimation;
+ (id)_jitterYTranslationAnimation;
+ (id)_jitterXTranslationAnimation;
+ (Class)defaultViewClassForAccessoryType:(long long)arg1;
+ (BOOL)_alwaysShowsAccessoryOfType:(long long)arg1;
+ (void)configureLabelImageParametersBuilder:(id)arg1 forIcon:(id)arg2 location:(id)arg3;
+ (CGSize)maxLabelSizeForListLayout:(id)arg1 contentSizeCategory:(id)arg2 options:(NSUInteger)arg3;
+ (id)labelConfigurationForListLayout:(id)arg1 contentSizeCategory:(id)arg2 options:(NSUInteger)arg3;
+ (CGSize)maxLabelSizeForIconImageSize:(CGSize)arg1;
+ (double)defaultMaxLabelHeight;
+ (double)defaultMaxLabelWidthDeltaForContentSizeCategory:(id)arg1;
+ (double)_labelHeight;
+ (CGPoint)defaultIconImageCenterForIconImageSize:(CGSize)arg1;
+ (CGSize)defaultIconViewSizeForIconImageSize:(CGSize)arg1 configurationOptions:(NSUInteger)arg2;
+ (Class)defaultViewClassForLabelAccessoryType:(long long)arg1;
+ (double)labelAccessoryViewAdditionalRightMarginForType:(long long)arg1;
+ (double)labelAccessoryViewBaseRightMargin;
+ (BOOL)allowsLabelAccessoryView;
+ (BOOL)supportsPreviewInteraction;
+ (double)iconLiftAlpha;
+ (long long)continuityBadgeTypeForContinuityInfo:(id)arg1;
+ (NSUInteger)defaultImageLoadingBehavior;
+ (BOOL)isIconTapGestureRecognizer:(id)arg1;
+ (void)activateShortcut:(id)arg1 withBundleIdentifier:(id)arg2 forIconView:(id)arg3;
+ (CGSize)defaultIconViewSize;
+ (double)defaultIconImageCornerRadius;
+ (double)defaultIconImageScale;
+ (CGSize)defaultIconImageSize;
+ (id)defaultIconLocation;
@property(retain, nonatomic) NSMapTable *pendingAnimatorCompletionsTable; // @synthesize pendingAnimatorCompletionsTable=_pendingAnimatorCompletionsTable;
@property(nonatomic) __weak SBIconView *activePreviewIcon; // @synthesize activePreviewIcon=_activePreviewIcon;
@property(retain, nonatomic) id <BSInvalidatable> homeButtonPressConsumingAssertion; // @synthesize homeButtonPressConsumingAssertion=_homeButtonPressConsumingAssertion;
@property(copy, nonatomic) NSString *presentedWidgetBundleIdentifier; // @synthesize presentedWidgetBundleIdentifier=_presentedWidgetBundleIdentifier;
@property(retain, nonatomic) UIContextMenuConfiguration *activeContextMenuConfiguration; // @synthesize activeContextMenuConfiguration=_activeContextMenuConfiguration;
@property(readonly, nonatomic) UIContextMenuInteraction *contextMenuInteraction; // @synthesize contextMenuInteraction=_contextMenuInteraction;
@property(readonly, nonatomic) UILongPressGestureRecognizer *editingModeGestureRecognizer; // @synthesize editingModeGestureRecognizer=_editingModeGestureRecognizer;
@property(readonly, nonatomic) long long displayedLabelAccessoryType; // @synthesize displayedLabelAccessoryType=_displayedLabelAccessoryType;
@property(retain, nonatomic) UIViewPropertyAnimator *accessoryViewAnimator; // @synthesize accessoryViewAnimator=_accessoryViewAnimator;
@property(readonly, nonatomic) UITapGestureRecognizer *tapGestureRecognizer; // @synthesize tapGestureRecognizer=_tapGestureRecognizer;
@property(readonly, nonatomic) UIDragInteraction *dragInteraction; // @synthesize dragInteraction=_dragInteraction;
@property(retain, nonatomic) UIColor *accessibilityTintColor; // @synthesize accessibilityTintColor=_accessibilityTintColor;
@property(retain, nonatomic) UIView *folderIconBackgroundView; // @synthesize folderIconBackgroundView=_folderIconBackgroundView;
@property(retain, nonatomic) SBFolderIcon *folderIcon; // @synthesize folderIcon=_folderIcon;
@property(retain, nonatomic) SBFolderIconImageCache *folderIconImageCache; // @synthesize folderIconImageCache=_folderIconImageCache;
@property(retain, nonatomic) SBHIconImageCache *iconImageCache; // @synthesize iconImageCache=_iconImageCache;
@property(retain, nonatomic) id <SBIconListLayoutProvider> listLayoutProvider; // @synthesize listLayoutProvider=_listLayoutProvider;
@property(retain, nonatomic) id <SBIconContinuityInfo> continuityInfo; // @synthesize continuityInfo=_continuityInfo;
@property(retain, nonatomic) UIFont *labelFont; // @synthesize labelFont=_labelFont;
@property(copy, nonatomic) NSDate *lastTouchDownDate; // @synthesize lastTouchDownDate=_lastTouchDownDate;
@property(nonatomic, getter=isPaused) BOOL paused; // @synthesize paused=_paused;
@property(nonatomic, getter=isEnabled) BOOL enabled; // @synthesize enabled=_enabled;
@property(copy, nonatomic) NSArray *applicationShortcutItems; // @synthesize applicationShortcutItems=_applicationShortcutItems;
@property(nonatomic) double iconLabelAlpha; // @synthesize iconLabelAlpha=_iconLabelAlpha;
@property(nonatomic) double iconAccessoryAlpha; // @synthesize iconAccessoryAlpha=_iconAccessoryAlpha;
@property(nonatomic) double iconImageAlpha; // @synthesize iconImageAlpha=_iconImageAlpha;
@property(retain, nonatomic) _UILegibilitySettings *legibilitySettings; // @synthesize legibilitySettings=_legibilitySettings;
@property(copy, nonatomic) id /* CDUnknownBlockType */ contextMenuInteractionPendingCompletion; // @synthesize contextMenuInteractionPendingCompletion=_contextMenuInteractionPendingCompletion;
@property(copy, nonatomic) NSString *location; // @synthesize location=_iconLocation;
@property(nonatomic) __weak id <SBIconViewDelegate> delegate; // @synthesize delegate=_delegate;
// - (void).cxx_destruct;
- (void)endForbiddingEditingModeWithReason:(id)arg1;
- (void)startForbiddingEditingModeWithReason:(id)arg1;
- (void)iconImageDidUpdate:(id)arg1;
- (void)iconLaunchEnabledDidChange:(id)arg1;
- (void)iconAccessoriesDidUpdate:(id)arg1;
- (id)succinctDescriptionBuilder;
- (id)succinctDescription;
- (id)pauseReasonsDescriptions;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
@property(readonly, copy) NSString *description;
- (BOOL)_shouldAnimatePropertyWithKey:(id)arg1;
- (void)cleanupAfterFloatyFolderCrossfade;
- (void)setFloatyFolderCrossfadeFraction:(double)arg1;
- (void)prepareToCrossfadeWithFloatyFolderView:(id)arg1 allowFolderInteraction:(BOOL)arg2;
- (id)prepareForIconDrop;
- (void)setBackgroundAndIconGridImageAlpha:(double)arg1;
- (void)setIconGridImageAlpha:(double)arg1;
@property(readonly, nonatomic, getter=isAnimatingScrolling) BOOL animatingScrolling;
- (void)scrollToGapOrTopIfFullOfPage:(NSUInteger)arg1 animated:(BOOL)arg2;
- (void)scrollToTopOfPage:(NSUInteger)arg1 animated:(BOOL)arg2;
- (void)scrollToFirstGapAnimated:(BOOL)arg1;
- (void)scrollToTopOfFirstPageAnimated:(BOOL)arg1;
- (CGRect)visibleImageRelativeFrameForMiniIconAtIndex:(NSUInteger)arg1;
- (CGRect)frameForMiniIconAtIndex:(NSUInteger)arg1;
@property(readonly, nonatomic) NSUInteger lastVisibleMiniIconIndex;
@property(readonly, nonatomic) NSUInteger centerVisibleMiniIconIndex;
@property(readonly, nonatomic) NSUInteger firstVisibleMiniIconIndex;
@property(readonly, nonatomic) NSUInteger visibleMiniIconListIndex;
@property(readonly, nonatomic) NSUInteger visibleMiniIconCount;
@property(nonatomic) NSUInteger folderBackgroundStyle;
- (id)_folderIconImageView;
@property(readonly, copy, nonatomic) NSString *representedFolderIconLocation;
- (id)folder;
- (BOOL)isFolderIcon;
- (CGSize)sizeThatFits:(CGSize)arg1;
- (CGSize)intrinsicContentSize;
- (void)_boldTextStatusDidChange:(id)arg1;
- (void)_contentSizeCategoryDidChange:(id)arg1;
- (void)_backgroundContrastDidChange:(id)arg1;
- (void)_updateProgressAnimated:(BOOL)arg1;
@property(readonly, nonatomic) long long progressState;
- (void)configureMatchingIconView:(id)arg1;
- (void)_removeUnknownSubviews;
- (void)prepareForReuse;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (BOOL)_delegateTapAllowed;
- (void)_delegateTouchEnded:(BOOL)arg1;
- (BOOL)pointInside:(CGPoint)arg1 withEvent:(id)arg2;
- (id)hitTest:(CGPoint)arg1 withEvent:(id)arg2;
@property(nonatomic) BOOL allowsBlockedForScreenTimeExpiration;
- (void)_closeBoxTapGestureChanged:(id)arg1;
- (void)_setShowingCloseBox:(BOOL)arg1;
- (BOOL)_isShowingCloseBox;
- (void)_updateCloseBoxAnimated:(BOOL)arg1;
- (void)_createCloseBoxIfNecessary;
- (long long)_closeBoxType;
@property(nonatomic) BOOL allowsCloseBox;
@property(readonly, nonatomic) BOOL canShowCloseBox;
@property(readonly, nonatomic) BOOL shouldShowCloseBox;
- (id)newComponentBackgroundView;
- (void)_updateDragInteractionLiftDelay;
@property(readonly, nonatomic) double dragInteractionLiftDelay;
- (void)_applyEditingStateAnimated:(BOOL)arg1;
@property(nonatomic, getter=isEditing) BOOL editing;
- (void)setEditing:(BOOL)arg1 animated:(BOOL)arg2;
- (void)pressesEnded:(id)arg1 withEvent:(id)arg2;
- (void)pressesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)pressesChanged:(id)arg1 withEvent:(id)arg2;
- (void)pressesBegan:(id)arg1 withEvent:(id)arg2;
- (BOOL)closeBoxShouldTrack:(id)arg1;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)consumeSinglePressUpForButtonKind:(long long)arg1;
- (void)editingModeGestureRecognizerDidFire:(id)arg1;
- (void)tapGestureDidChange:(id)arg1;
@property(readonly, nonatomic, getter=isTouchDownInIcon) BOOL touchDownInIcon;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)didMoveToWindow;
- (BOOL)_dragInteraction:(id)arg1 competingGestureRecognizerShouldDelayLift:(id)arg2;
- (BOOL)_dragInteraction:(id)arg1 shouldDelayCompetingGestureRecognizer:(id)arg2;
- (BOOL)_dragInteraction:(id)arg1 canExcludeCompetingGestureRecognizer:(id)arg2;
- (void)dragInteraction:(id)arg1 item:(id)arg2 willAnimateCancelWithAnimator:(id)arg3;
- (id)dragInteraction:(id)arg1 previewForCancellingItem:(id)arg2 withDefault:(id)arg3;
- (void)dragInteraction:(id)arg1 session:(id)arg2 didEndWithOperation:(NSUInteger)arg3;
- (void)dragInteraction:(id)arg1 session:(id)arg2 willEndWithOperation:(NSUInteger)arg3;
- (void)dragInteraction:(id)arg1 sessionWillBegin:(id)arg2;
- (void)dragInteraction:(id)arg1 session:(id)arg2 willAddItems:(id)arg3 forInteraction:(id)arg4;
- (id)dragInteraction:(id)arg1 itemsForAddingToSession:(id)arg2 withTouchAtPoint:(CGPoint)arg3;
- (id)dragInteraction:(id)arg1 sessionForAddingItems:(id)arg2 withTouchAtPoint:(CGPoint)arg3;
- (BOOL)dragInteraction:(id)arg1 sessionIsRestrictedToDraggingApplication:(id)arg2;
- (void)_dragInteraction:(id)arg1 liftAnimationDidChangeDirection:(long long)arg2;
- (void)dragInteraction:(id)arg1 willAnimateLiftWithAnimator:(id)arg2 session:(id)arg3;
- (id)dragInteraction:(id)arg1 previewForLiftingItem:(id)arg2 session:(id)arg3;
- (id)dragInteraction:(id)arg1 itemsForBeginningSession:(id)arg2;
- (id)matchingIconViewByAddingConfigurationOptions:(NSUInteger)arg1 removingConfigurationOptions:(NSUInteger)arg2;
- (id)matchingIconViewWithConfigurationOptions:(NSUInteger)arg1;
@property(readonly, nonatomic) BOOL canBeginDrags;
- (void)cancelDragLift;
- (void)cancelDrag;
- (void)cleanUpAfterDropAnimation;
- (id)dragItems;
- (id)dragPreviewForItem:(id)arg1 session:(id)arg2;
- (id)draggingLaunchURL;
- (id)draggingLaunchActions;
- (long long)draggingStartLocation;
@property(readonly, getter=isCrossfadingImageWithView) BOOL crossfadingImageWithView;
- (void)cleanupAfterCrossfade;
- (void)setMorphFraction:(double)arg1;
- (void)setCrossfadeCornerRadius:(double)arg1;
- (void)setCrossfadeFraction:(double)arg1;
- (void)prepareToCrossfadeImageWithView:(id)arg1 maskCorners:(BOOL)arg2 trueCrossfade:(BOOL)arg3 anchorPoint:(CGPoint)arg4;
- (void)prepareToCrossfadeImageWithView:(id)arg1 maskCorners:(BOOL)arg2 trueCrossfade:(BOOL)arg3;
- (void)_configureViewAsFolderIconImageView:(id)arg1;
- (void)setShowsDropGlow:(BOOL)arg1 animator:(id)arg2;
@property(readonly, nonatomic) BOOL showsDropGlow;
- (void)iconInteractedWhenDisabled;
@property(nonatomic, getter=isOverlapping) BOOL overlapping;
@property(nonatomic, getter=isGrabbed) BOOL grabbed;
- (BOOL)isTimedOut;
- (BOOL)canReceiveGrabbedIcon:(id)arg1;
@property(nonatomic) BOOL refusesRecipientStatus;
- (void)removeAllIconAnimations;
@property(nonatomic) BOOL allowsEditingAnimation;
- (void)_updateJitter;
- (void)_recursivelyUpdateBackdropMaskFrames;
- (void)_recursiveNotifyInteractionTintColorDidChangeForReasons:(NSUInteger)arg1;
- (id)tintColor;
- (void)setFrame:(CGRect)arg1;
- (void)setDragging:(BOOL)arg1 updateImmediately:(BOOL)arg2;
- (void)setDragging:(BOOL)arg1;
- (BOOL)isDragging;
@property(nonatomic, getter=isHighlighted) BOOL highlighted;
@property(readonly, nonatomic) BOOL allowsTapWhileEditing;
- (void)_updateBrightness;
- (double)effectiveBrightness;
- (BOOL)pointMostlyInside:(CGPoint)arg1 withEvent:(id)arg2;
- (id)_automationID;
- (CGPoint)accessoryOffset;
- (CGSize)accessorySize;
- (void)_applyParallaxSettingsToAccessoryViews;
- (void)_destroyAccessoryView:(id)arg1;
- (void)_destroyAccessoryView;
- (void)_createAccessoryViewIfNecessary;
- (void)_updateAccessoryViewWithAnimation:(BOOL)arg1;
- (void)_setShowingAccessoryView:(BOOL)arg1;
- (BOOL)_isShowingAccessoryView;
@property(readonly, nonatomic) long long currentAccessoryType;
- (void)_updateConfigurationForIconImageView:(id)arg1;
- (void)_configureIconImageView:(id)arg1;
- (id)_makeIconImageView;
- (void)_updateIconImageViewAnimated:(BOOL)arg1;
@property(readonly, nonatomic) Class expectedIconImageViewClass;
- (void)_updateLabelAccessoryView;
@property(readonly, nonatomic) long long currentLabelAccessoryType;
@property(readonly, nonatomic) BOOL shouldShowLabelAccessoryView;
- (void)_configureLabelAccessoryViewForType:(long long)arg1;
- (id)_legibilitySettingsWithStyle:(long long)arg1 primaryColor:(id)arg2;
- (id)_legibilitySettingsWithPrimaryColor:(id)arg1;
- (id)_legibilitySettingsWithParameters:(id)arg1;
@property(readonly, nonatomic) double baselineOffsetFromBottom;
@property(readonly, nonatomic) double lastLineBaseline;
@property(readonly, nonatomic) double firstLineBaseline;
- (void)_updateLabel;
- (id)_labelImageParameters;
- (void)configureLabelImageParametersBuilder:(id)arg1;
- (id)displayedLabelFont;
- (BOOL)isLabelTextBold;
@property(readonly, nonatomic) UIView<SBIconLabelView> *labelView;
@property(readonly, nonatomic) CGSize maxLabelSize;
- (id)labelConfiguration;
- (void)setAllIconElementsButLabelToHidden:(BOOL)arg1;
- (id)_labelImage;
- (id)_iconImageView;
- (CGPoint)_centerForCloseBox;
- (CGPoint)_centerForAccessoryView;
- (CGRect)_frameForLabelAccessoryViewWithLabelFrame:(CGRect)arg1 labelImage:(id)arg2 labelImageParameters:(id)arg3 imageFrame:(CGRect)arg4;
- (CGRect)_frameForLabel;
- (CGRect)_frameForVisibleImage;
- (double)_labelBaselineOffsetFromImage;
- (double)_labelVerticalOffset;
- (CGRect)_frameForImageView;
- (void)layoutSubviews;
@property(readonly, nonatomic) double labelAccessoryTotalWidth;
@property(readonly, nonatomic) BOOL allowsLabelAccessoryView;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)hideActivatingOrDismissingPreview;
@property(readonly, copy, nonatomic) NSArray *effectiveApplicationShortcutItems;
- (void)dismissContextMenuWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)earlyTerminateContextMenuDismissAnimation;
- (void)cleanupAnimatorCompletionForConfiguration:(id)arg1;
- (id /* CDUnknownBlockType */)pendingAnimatorCompletionForConfiguration:(id)arg1;
- (void)addPendingAnimatorCompletionForConfiguration:(id)arg1 block:(id /* CDUnknownBlockType */)arg2;
- (BOOL)shouldActivateApplicationShortcutItem:(id)arg1 atIndex:(NSUInteger)arg2;
- (id)applicationShortcutWidgetBundleIdentifier;
@property(readonly, copy, nonatomic) NSString *applicationBundleIdentifierForShortcuts;
@property(readonly, copy, nonatomic) NSURL *applicationBundleURLForShortcuts;
- (void)contextMenuInteraction:(id)arg1 willEndForConfiguration:(id)arg2 animator:(id)arg3;
- (void)contextMenuInteraction:(id)arg1 willDisplayMenuForConfiguration:(id)arg2 animator:(id)arg3;
- (id)_contextMenuInteraction:(id)arg1 previewForIconWithConfigurationOptions:(NSUInteger)arg2 highlighted:(BOOL)arg3;
- (id)contextMenuInteraction:(id)arg1 previewForDismissingMenuWithConfiguration:(id)arg2;
- (id)contextMenuInteraction:(id)arg1 previewForHighlightingMenuWithConfiguration:(id)arg2;
- (BOOL)_contextMenuInteractionShouldAllowDragAfterDismiss:(id)arg1;
- (id)_contextMenuInteraction:(id)arg1 styleForMenuWithConfiguration:(id)arg2;
- (id)_contextMenuInteraction:(id)arg1 overrideSuggestedActionsForConfiguration:(id)arg2;
- (id)contextMenuInteraction:(id)arg1 configurationForMenuAtLocation:(CGPoint)arg2;
- (void)_handleAddWidgetRequest:(id)arg1;
- (void)_unregisterForAddWidgetRequests;
- (void)_registerForAddWidgetRequestsIfNecessary;
- (void)_invalidateHomeButtonPressConsumingAssertion;
- (void)_acquireHomeButtonPressConsumingAssertionIfNecessary;
- (void)_applyAdditonalLiftScale:(BOOL)arg1;
- (double)_additionalLiftScale;
- (void)_applyIconContentScale:(double)arg1;
- (void)_disableContentContainerView;
- (void)_enableContentContainerView;
- (void)_toggleContentContainerViewIfNecessary;
- (BOOL)_shouldHaveContentContainerView;
@property(nonatomic, getter=isIconContentScalingEnabled) BOOL iconContentScalingEnabled;
@property(nonatomic) double iconContentScale;
@property(readonly, nonatomic) UIView *contentContainerView;
@property(nonatomic, getter=isLabelAccessoryHidden) BOOL labelAccessoryHidden;
@property(nonatomic, getter=isLabelHidden) BOOL labelHidden;
- (void)_updateLaunchDisabled;
- (void)_updateAllComponentAlphas;
- (void)_applyOverallAlpha:(double)arg1;
- (double)effectiveOverallAlpha;
- (void)_applyIconLabelAlpha:(double)arg1;
- (double)effectiveIconLabelAlpha;
- (void)_applyIconAccessoryAlpha:(double)arg1;
- (double)effectiveIconAccessoryAlpha;
- (void)_applyIconImageAlpha:(double)arg1;
@property(readonly, nonatomic) double effectiveIconImageAlpha;
- (void)setIconImageAndAccessoryAlpha:(double)arg1;
@property(readonly, nonatomic) CGSize iconImageVisibleSize;
@property(readonly, nonatomic) CGPoint iconImageCenter;
@property(readonly, nonatomic) CGRect iconImageFrame;
- (id)currentImageView;
@property(readonly, nonatomic) UIImage *iconImageSnapshot;
@property(readonly, nonatomic) long long continuityBadgeType;
@property(readonly, nonatomic, getter=isShowingContextMenu) BOOL showingContextMenu;
@property(nonatomic, getter=isContextMenuInteractionActive) BOOL contextMenuInteractionActive;
@property(nonatomic, getter=isContextMenuInteractionPending) BOOL contextMenuInteractionPending;
- (BOOL)isContextMenuInteractionActiveOrPending;
- (void)setContinuityInfo:(id)arg1 animated:(BOOL)arg2;
@property(nonatomic) NSUInteger imageLoadingBehavior;
@property(nonatomic, getter=isInDock) BOOL inDock;
@property(nonatomic) NSUInteger configurationOptions;
- (id)effectiveListLayoutProvider;
@property(retain, nonatomic) SBIcon *icon;
@property(nonatomic) BOOL showsSquareCorners;
- (void)setIcon:(id)arg1 animated:(BOOL)arg2;
- (void)setPaused:(BOOL)arg1 forReason:(NSUInteger)arg2;
@property(nonatomic) BOOL startsDragMoreQuickly;
- (void)setUserInteractionEnabled:(BOOL)arg1;
- (void)addGesturesAndInteractionsIfNecessary;
@property(nonatomic) BOOL allowsPassthroughHitTesting;
@property(nonatomic) BOOL allowsLabelArea;
- (void)configureForLabelAllowed:(BOOL)arg1;
- (void)_updateFrameToIconViewSize;
@property(readonly, nonatomic) CGSize iconViewSize;
- (double)iconImageCornerRadius;
@property(readonly, nonatomic) CGSize iconImageSize;
@property(nonatomic) struct SBIconImageInfo iconImageInfo;
@property(readonly, nonatomic) SBFParallaxSettings *badgeParallaxSettings;
- (id)contentSizeCategory;
@property(readonly, nonatomic) id <SBIconListLayout> listLayout;
- (void)dealloc;
- (id)initWithFrame:(CGRect)arg1;
- (id)initWithConfigurationOptions:(NSUInteger)arg1 listLayoutProvider:(id)arg2;
- (id)initWithConfigurationOptions:(NSUInteger)arg1;

@end

