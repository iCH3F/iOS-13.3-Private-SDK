//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <HealthDaemon/HDActivityCacheStatisticsBuilderSourceOrderDelegate-Protocol.h>
#import <HealthDaemon/HDDataObserver-Protocol.h>

@class HDActivityCacheHeartRateStatisticsBuilder, HDActivityCacheStatisticsBuilder, HDProfile, HKCategoryType, HKWorkoutType, NSDateInterval, NSSet, NSString, _HKDelayedOperation;
@protocol OS_dispatch_queue;

@interface HDActivityCacheDataSource : NSObject <HDActivityCacheStatisticsBuilderSourceOrderDelegate, HDDataObserver>
{
    vector_7eaa0458 _previousWatchActivationLogEntryVector;
    BOOL _previousWatchActivationLogEntryIsSet;
    long long _quantitySampleAnchor;
    long long _nonQuantitySampleAnchor;
    NSString *_nonQuantitySamplesQueryString;
    NSString *_quantitySamplesQueryString;
    HKCategoryType *_standHoursType;
    HKCategoryType *_deepBreathingSessionType;
    HKWorkoutType *_workoutType;
    HKCategoryType *_watchActivationType;
    NSSet *_allObservedTypes;
    NSSet *_observedQuantityTypes;
    _HKDelayedOperation *_updateOperation;
    _HKDelayedOperation *_rebuildOperation;
    struct unordered_map<long long, bool, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, bool>>> _isWatchSourceCache;
    struct unordered_map<long long, bool, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, bool>>> _isConnectedGymSourceCache;
    struct unordered_map<long long, bool, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, bool>>> _isConnectedGymDeviceCache;
    NSObject<OS_dispatch_queue> *_queue;
    HDProfile *_profile;
    HDActivityCacheStatisticsBuilder *_targetDayStatisticsBuilder;
    HDActivityCacheStatisticsBuilder *_previousDayStatisticsBuilder;
    HDActivityCacheHeartRateStatisticsBuilder *_targetDayHeartRateStatisticsBuilder;
    HDActivityCacheHeartRateStatisticsBuilder *_previousDayHeartRateStatisticsBuilder;
    NSDateInterval *_targetDayDateInterval;
    NSDateInterval *_previousDayDateInterval;
    long long _targetDayCacheIndex;
    long long _previousDayCacheIndex;
    NSString *_targetDayStatisticsBuilderTag;
    NSString *_previousDayStatisticsBuilderTag;
}

@property(retain, nonatomic) NSString *previousDayStatisticsBuilderTag; // @synthesize previousDayStatisticsBuilderTag=_previousDayStatisticsBuilderTag;
@property(retain, nonatomic) NSString *targetDayStatisticsBuilderTag; // @synthesize targetDayStatisticsBuilderTag=_targetDayStatisticsBuilderTag;
@property(nonatomic) long long previousDayCacheIndex; // @synthesize previousDayCacheIndex=_previousDayCacheIndex;
@property(nonatomic) long long targetDayCacheIndex; // @synthesize targetDayCacheIndex=_targetDayCacheIndex;
@property(retain, nonatomic) NSDateInterval *previousDayDateInterval; // @synthesize previousDayDateInterval=_previousDayDateInterval;
@property(retain, nonatomic) NSDateInterval *targetDayDateInterval; // @synthesize targetDayDateInterval=_targetDayDateInterval;
@property(readonly, nonatomic) NSSet *observedQuantityTypes; // @synthesize observedQuantityTypes=_observedQuantityTypes;
@property(readonly, nonatomic) HDActivityCacheHeartRateStatisticsBuilder *previousDayHeartRateStatisticsBuilder; // @synthesize previousDayHeartRateStatisticsBuilder=_previousDayHeartRateStatisticsBuilder;
@property(readonly, nonatomic) HDActivityCacheHeartRateStatisticsBuilder *targetDayHeartRateStatisticsBuilder; // @synthesize targetDayHeartRateStatisticsBuilder=_targetDayHeartRateStatisticsBuilder;
@property(readonly, nonatomic) HDActivityCacheStatisticsBuilder *previousDayStatisticsBuilder; // @synthesize previousDayStatisticsBuilder=_previousDayStatisticsBuilder;
@property(readonly, nonatomic) HDActivityCacheStatisticsBuilder *targetDayStatisticsBuilder; // @synthesize targetDayStatisticsBuilder=_targetDayStatisticsBuilder;
- (id).cxx_construct;
// - (void).cxx_destruct;
- (void)_samplesAddedToWorkoutNotification:(id)arg1;
- (id)activityCacheStatisticsBuilder:(id)arg1 sourceOrderForObjectType:(id)arg2;
- (long long)_isConnectedGymDeviceForDeviceIdentifier:(long long)arg1 error:(id )arg2;
- (long long)_isConnectedGymSourceForSourceIdentifier:(long long)arg1 error:(id )arg2;
- (long long)_isWatchSourceForSourceIdentifier:(long long)arg1 error:(id )arg2;
- (BOOL)_primeQuantitySamplesWithError:(id )arg1 count:(long long )arg2;
- (id)_quantitySamplesQueryStringWithQuantityTypes:(id)arg1;
- (id)_parameterStringWithCount:(long long)arg1;
- (BOOL)_primeNonQuantitySamplesWithError:(id )arg1 count:(long long )arg2;
- (id)_nonQuantitySamplesQueryStringWithSampleTypes:(id)arg1;
- (BOOL)_quantitySampleIsValidWithTypeCode:(long long)arg1 workoutSourceIdentifier:(long long)arg2 isWatchSource:(BOOL)arg3;
- (BOOL)_typeIsValidFromCompanionWithoutWorkout:(long long)arg1;
- (BOOL)_quantityTypeRequiresWatchSource:(long long)arg1;
- (BOOL)_nonQuantitySampleRequiresWatchSource:(long long)arg1;
- (void)_resetPreviousWatchActivationLogEntries;
- (void)_resetStatisticsBuilders;
- (void)_resetEverything;
- (void)resumeUpdates;
- (void)pauseUpdates;
- (void)_deregisterForSamplesAdded;
- (void)_registerForSamplesAdded;
- (void)samplesOfTypesWereRemoved:(id)arg1 anchor:(id)arg2;
- (void)samplesAdded:(id)arg1 anchor:(id)arg2;
- (BOOL)_primePreviousActivationLogEntryWithError:(id )arg1;
- (BOOL)_readyToPrimeActivationLogEntries;
- (BOOL)_updateStatisticsBuildersWithError:(id )arg1;
- (BOOL)_readyToPrimeStatisticsBuilders;
- (id)_overallDateInterval;
- (BOOL)_dateIntervalsAreSet;
- (BOOL)updateWithError:(id )arg1;
- (void)invalidate;
- (void)dealloc;
- (id)initWithProfile:(id)arg1 observedQuantityTypes:(id)arg2 updateOperation:(id)arg3 rebuildOperation:(id)arg4 queue:(id)arg5;

@end

