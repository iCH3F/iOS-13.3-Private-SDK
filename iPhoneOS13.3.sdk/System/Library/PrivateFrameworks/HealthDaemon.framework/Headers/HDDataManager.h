//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <HealthDaemon/HDDiagnosticObject-Protocol.h>

@class HDProfile, HDQuantitySeriesManager, NSMutableDictionary, NSNumber;
@protocol OS_dispatch_queue;

@interface HDDataManager : NSObject <HDDiagnosticObject>
{
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_queue> *_notificationQueue;
    NSMutableDictionary *_observersByDataType;
//     struct os_unfair_lock_s _synchronousObserverLock;
    NSMutableDictionary *_synchronousObserversBySampleType;
    BOOL _needsSynchronousNotification;
    NSUInteger _openTransactions;
    NSMutableDictionary *_pendingObjectsBySampleType;
    NSNumber *_lastAnchor;
    double _lastNotifyLogTime;
    long long _notifyCount;
    long long _samplesAddedCount;
    long long _samplesJournaledCount;
    HDQuantitySeriesManager *_quantitySeriesManager;
    HDProfile *_profile;
}

@property(nonatomic) __weak HDProfile *profile; // @synthesize profile=_profile;
@property(readonly, nonatomic) HDQuantitySeriesManager *quantitySeriesManager; // @synthesize quantitySeriesManager=_quantitySeriesManager;
// - (void).cxx_destruct;
- (id)diagnosticDescription;
- (void)setBackgroundObserverFrequency:(id)arg1 forDataType:(id)arg2 frequency:(long long)arg3 completion:(id /* CDUnknownBlockType */)arg4;
- (void)synchronouslyCloseObserverTransactionAndNotify;
- (void)closeObserverTransaction;
- (void)openObserverTransaction;
- (id)_queue_observersForDataType:(id)arg1 createIfNil:(BOOL)arg2;
- (id)_queue_observersForKey:(id)arg1 createIfNil:(BOOL)arg2;
- (void)_notifySynchronousObserversForDeletedObjectTypes:(id)arg1 anchor:(id)arg2;
- (void)_notifySynchronousObserversIfPossible;
- (void)removeSynchronousObserver:(id)arg1 forSampleType:(id)arg2;
- (void)addSynchronousObserver:(id)arg1 forSampleType:(id)arg2;
- (BOOL)_synchronousObserverLock_hasSynchronousObserverForSampleType:(id)arg1;
- (id)_synchronousObserverLock_synchronousObserverSetForSampleType:(id)arg1;
- (id)_observersForDataType:(id)arg1;
- (id)_queue_observersAllTypesCreateIfNil:(BOOL)arg1;
- (id)_observersForAllTypes;
- (void)removeObserver:(id)arg1 forDataType:(id)arg2;
- (void)addObserver:(id)arg1 forDataType:(id)arg2;
- (void)removeObserverForAllTypes:(id)arg1;
- (void)addObserverForAllTypes:(id)arg1;
- (long long)hasSampleWithBundleIdentifier:(id)arg1 error:(id )arg2;
- (BOOL)containsDataObject:(id)arg1;
- (void)_notificationQueue_notifyObserversSamplesWithTypesWereRemoved:(id)arg1 anchor:(id)arg2;
- (void)_notifyObserversSamplesWithTypesWereRemoved:(id)arg1 anchor:(id)arg2;
- (BOOL)_deleteObjectsWithTypes:(id)arg1 sourceEntities:(id)arg2 recursiveDeleteAuthorizationBlock:(id /* CDUnknownBlockType */)arg3 error:(id )arg4;
- (BOOL)deleteSamplesWithUUIDs:(id)arg1 generateDeletedObjects:(BOOL)arg2 database:(id)arg3 error:(id )arg4;
- (BOOL)deleteSamplesWithUUIDs:(id)arg1 recursiveDeleteAuthorizationBlock:(id /* CDUnknownBlockType */)arg2 error:(id )arg3;
- (BOOL)deleteSamplesWithSourceEntities:(id)arg1 error:(id )arg2;
- (BOOL)deleteSamplesWithTypes:(id)arg1 sourceEntities:(id)arg2 recursiveDeleteAuthorizationBlock:(id /* CDUnknownBlockType */)arg3 error:(id )arg4;
- (BOOL)deleteSamplesWithTypes:(id)arg1 sourceBundleIdentifier:(id)arg2 recursiveDeleteAuthorizationBlock:(id /* CDUnknownBlockType */)arg3 error:(id )arg4;
- (BOOL)deleteDataObjectsOfClass:(Class)arg1 predicate:(id)arg2 limit:(NSUInteger)arg3 deletedSampleCount:(NSUInteger )arg4 notifyObservers:(BOOL)arg5 generateDeletedObjects:(BOOL)arg6 recursiveDeleteAuthorizationBlock:(id /* CDUnknownBlockType */)arg7 error:(id )arg8;
- (BOOL)deleteDataObjects:(id)arg1 restrictedSourceEntities:(id)arg2 failIfNotFound:(BOOL)arg3 recursiveDeleteAuthorizationBlock:(id /* CDUnknownBlockType */)arg4 error:(id )arg5;
- (id)_deleteDataObjectsByUUIDSQLStringForConfiguration:(id)arg1 entityType:(long long)arg2 error:(id )arg3;
- (BOOL)deleteObjectsWithUUIDCollection:(id)arg1 configuration:(id)arg2 error:(id )arg3;
- (void)_callObservers:(id)arg1 samples:(id)arg2 type:(id)arg3 anchor:(id)arg4;
- (void)_notifyObserversWithAddedObjectsBySampleType:(id)arg1 lastAnchor:(id)arg2;
- (void)_callObserversIfPossible;
- (void)_shouldNotifyForDeletedSamplesOfTypes:(id)arg1 anchor:(id)arg2;
- (void)shouldNotifyForDeletedSamplesOfTypes:(id)arg1 transaction:(id)arg2 anchor:(id)arg3;
- (void)shouldNotifyForDataObjects:(id)arg1 provenance:(id)arg2 database:(id)arg3 anchor:(id)arg4;
- (BOOL)_insertDataObjects:(id)arg1 transaction:(id)arg2 insertionContext:(id)arg3 updateSourceOrder:(BOOL)arg4 error:(id )arg5;
- (BOOL)insertDataObjects:(id)arg1 withProvenance:(id)arg2 creationDate:(double)arg3 skipInsertionFilter:(BOOL)arg4 updateSourceOrder:(BOOL)arg5 error:(id )arg6;
- (BOOL)insertDataObjects:(id)arg1 withProvenance:(id)arg2 creationDate:(double)arg3 skipInsertionFilter:(BOOL)arg4 error:(id )arg5;
- (BOOL)insertDataObjects:(id)arg1 withProvenance:(id)arg2 creationDate:(double)arg3 error:(id )arg4;
- (BOOL)insertDataObjects:(id)arg1 error:(id )arg2;
- (BOOL)insertDataObjects:(id)arg1 sourceEntity:(id)arg2 deviceEntity:(id)arg3 sourceVersion:(id)arg4 creationDate:(double)arg5 error:(id )arg6;
- (id)initWithProfile:(id)arg1;

@end

