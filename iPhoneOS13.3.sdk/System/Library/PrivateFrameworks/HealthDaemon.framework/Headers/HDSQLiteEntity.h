//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <HealthDaemon/HDSQLiteEntity-Protocol.h>

@class NSString;

@interface HDSQLiteEntity : NSObject <HDSQLiteEntity, NSCopying>
{
    long long _persistentID;
}

+ (id)_copyDeleteSQLWithTableName:(id)arg1 columnName:(id)arg2;
+ (id)orderingTermForSortDescriptor:(id)arg1;
+ (id)deleteStatementWithProperty:(id)arg1 database:(id)arg2;
+ (id)checkConstraints;
+ (id)joinClausesForProperty:(id)arg1;
+ (id)disambiguatedSQLForProperty:(id)arg1;
+ (id)_generateDisambiguatedDatabaseTableName;
+ (Class)entityClassForEnumeration;
+ (Class)entityForProperty:(id)arg1;
+ (id)allDatabaseColumnNames;
+ (id)privateSubEntities;
+ (BOOL)isTemporary;
+ (id)indices;
+ (id)uniquedColumns;
+ (id)createTableSQL;
+ (void)enumerateColumnsWithBlock:(id /* CDUnknownBlockType */)arg1;
+ (void)_enumerateColumnNamesWithBlock:(id /* CDUnknownBlockType */)arg1;
+ (void)_enumerateColumnDefinitionsWithBlock:(id /* CDUnknownBlockType */)arg1;
+ (id)foreignKeys;
+ (const CDStruct_4c492439 )columnDefinitionsWithCount:(NSUInteger )arg1;
+ (id)disambiguatedDatabaseTable;
+ (id)tableAliases;
+ (id)databaseTable;
+ (id)databaseName;
+ (BOOL)updateProperties:(id)arg1 predicate:(id)arg2 database:(id)arg3 error:(id )arg4 bindingHandler:(id /* CDUnknownBlockType */)arg5;
+ (id)insertOrReplaceEntity:(BOOL)arg1 database:(id)arg2 properties:(id)arg3 error:(id )arg4 bindingHandler:(id /* CDUnknownBlockType */)arg5;
+ (id)updateSQLForPropertiesOnEntity:(id)arg1;
+ (id)additionalPredicateForEnumeration;
+ (id)updateSQLForProperties:(id)arg1 predicate:(id)arg2;
+ (id)insertSQLForProperties:(id)arg1 shouldReplace:(BOOL)arg2;
+ (id)entityWithPersistentID:(id)arg1;
+ (id)queryWithDatabase:(id)arg1 predicate:(id)arg2 limit:(NSUInteger)arg3 orderingTerms:(id)arg4 groupBy:(id)arg5;
+ (id)queryWithDatabase:(id)arg1 predicate:(id)arg2;
+ (id)distinctProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3 error:(id )arg4;
+ (id)countDistinctForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3 error:(id )arg4;
+ (id)maxPersistentIDWithPredicate:(id)arg1 database:(id)arg2 error:(id )arg3;
+ (id)countValueForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3 error:(id )arg4;
+ (id)maxValueForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3 error:(id )arg4;
+ (id)aggregateSingleValueForProperty:(id)arg1 function:(id)arg2 queryDescriptor:(id)arg3 database:(id)arg4 error:(id )arg5;
+ (id)aggregateSingleValueForProperty:(id)arg1 function:(id)arg2 predicate:(id)arg3 database:(id)arg4 error:(id )arg5;
+ (id)aggregateValuesForProperty:(id)arg1 functions:(id)arg2 queryDescriptor:(id)arg3 database:(id)arg4 error:(id )arg5;
+ (id)aggregateValuesForProperty:(id)arg1 functions:(id)arg2 predicate:(id)arg3 groupBy:(id)arg4 database:(id)arg5 error:(id )arg6;
+ (id)propertyValueForAnyInDatabase:(id)arg1 property:(id)arg2 predicate:(id)arg3 error:(id )arg4;
+ (BOOL)deleteEntitiesInDatabase:(id)arg1 predicate:(id)arg2 error:(id )arg3;
+ (BOOL)enumerateQueryResultsFromColumns:(id)arg1 properties:(id)arg2 predicate:(id)arg3 groupBy:(id)arg4 orderingTerms:(id)arg5 limit:(long long)arg6 database:(id)arg7 error:(id )arg8 enumerationHandler:(id /* CDUnknownBlockType */)arg9;
+ (BOOL)enumerateEntitiesInDatabase:(id)arg1 predicate:(id)arg2 error:(id )arg3 enumerationHandler:(id /* CDUnknownBlockType */)arg4;
+ (id)firstInDatabase:(id)arg1 predicate:(id)arg2 orderingTerms:(id)arg3 error:(id )arg4;
+ (id)anyInDatabase:(id)arg1 predicate:(id)arg2 error:(id )arg3;
@property(readonly, nonatomic) long long persistentID; // @synthesize persistentID=_persistentID;
@property(readonly, copy) NSString *description;
// - (id)copyWithZone:(_NSZone )arg1;
@property(readonly) NSUInteger hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)_deleteRowFromTable:(id)arg1 usingColumn:(id)arg2 database:(id)arg3;
- (id)UUIDForProperty:(id)arg1 database:(id)arg2;
- (id)stringForProperty:(id)arg1 database:(id)arg2;
- (id)numberForProperty:(id)arg1 database:(id)arg2;
- (id)dateForProperty:(id)arg1 database:(id)arg2;
- (BOOL)booleanForProperty:(id)arg1 database:(id)arg2;
- (id)valueForProperty:(id)arg1 database:(id)arg2;
- (BOOL)getValuesForProperties:(id)arg1 database:(id)arg2 error:(id )arg3 handler:(id /* CDUnknownBlockType */)arg4;
- (BOOL)getValuesForProperties:(id)arg1 database:(id)arg2 handler:(id /* CDUnknownBlockType */)arg3;
- (BOOL)existsInDatabase:(id)arg1;
- (void)willDeleteFromDatabase:(id)arg1;
- (BOOL)deleteFromDatabase:(id)arg1 error:(id )arg2;
- (BOOL)updateProperties:(id)arg1 database:(id)arg2 error:(id )arg3 bindingHandler:(id /* CDUnknownBlockType */)arg4;
- (id)initWithPersistentID:(long long)arg1;

@end

