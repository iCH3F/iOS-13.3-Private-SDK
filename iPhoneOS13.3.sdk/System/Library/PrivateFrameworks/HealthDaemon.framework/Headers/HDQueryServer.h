//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <HealthDaemon/HDDataObserver-Protocol.h>
#import <HealthDaemon/HDDatabaseProtectedDataObserver-Protocol.h>
#import <HealthDaemon/HDTaskServer-Protocol.h>
#import <HealthDaemon/HKQueryServerInterface-Protocol.h>

@class HDDaemonTransaction, HDDataCollectionAssertion, HDHealthStoreClient, HDProfile, HDQueryServerClientState, HKObjectType, HKQuantityType, HKQueryServerConfiguration, HKSampleType, NSArray, NSDictionary, NSSet, NSString, NSUUID, _HKFilter;
@protocol HDQueryServerDelegate, HKQueryClientInterface><NSXPCProxyCreating, OS_dispatch_queue;

@interface HDQueryServer : NSObject <HDDatabaseProtectedDataObserver, HKQueryServerInterface, HDDataObserver, HDTaskServer>
{
    NSDictionary *_baseDataEntityEncodingOptions;
    HKQueryServerConfiguration *_configuration;
    id /* CDUnknownBlockType */ _queryDidFinishHandler;
    NSArray *_dataObservationAssertions;
    HDDataCollectionAssertion *_dataCollectionAssertion;
    HDDaemonTransaction *_activationTransaction;
    HDQueryServerClientState *_clientState;
    _Atomic int _queryState;
    BOOL _shouldTakeObservationAssertions;
    BOOL _observingData;
    BOOL _isCollectingData;
    _Atomic BOOL _shouldFinish;
    _Atomic BOOL _shouldPause;
    NSObject<OS_dispatch_queue> *_unitTestQueryQueue;
    id <HDQueryServerDelegate> _delegate;
    NSUUID *_queryUUID;
    HDHealthStoreClient *_client;
    HDProfile *_profile;
    NSObject<OS_dispatch_queue> *_queryQueue;
    double _collectionInterval;
    _HKFilter *_filter;
    HKObjectType *_objectType;
    long long _dataCount;
    id /* CDUnknownBlockType */ _unitTest_queryServerSetShouldPauseHandler;
    id /* CDUnknownBlockType */ _unitTest_queryServerWillChangeStateHandler;
}

+ (BOOL)validateConfiguration:(id)arg1 client:(id)arg2 error:(id )arg3;
+ (Class)configurationClass;
+ (id)requiredEntitlements;
+ (id)taskIdentifier;
+ (BOOL)supportsAnchorBasedAuthorization;
+ (Class)queryClass;
+ (id)builtInQueryServerClasses;
@property(copy, nonatomic) id /* CDUnknownBlockType */ unitTest_queryServerWillChangeStateHandler; // @synthesize unitTest_queryServerWillChangeStateHandler=_unitTest_queryServerWillChangeStateHandler;
@property(copy, nonatomic) id /* CDUnknownBlockType */ unitTest_queryServerSetShouldPauseHandler; // @synthesize unitTest_queryServerSetShouldPauseHandler=_unitTest_queryServerSetShouldPauseHandler;
@property(nonatomic) long long dataCount; // @synthesize dataCount=_dataCount;
@property(copy, nonatomic) HDQueryServerClientState *clientState; // @synthesize clientState=_clientState;
@property(readonly, copy, nonatomic) HKObjectType *objectType; // @synthesize objectType=_objectType;
@property(readonly, nonatomic) _HKFilter *filter; // @synthesize filter=_filter;
@property(nonatomic) double collectionInterval; // @synthesize collectionInterval=_collectionInterval;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queryQueue; // @synthesize queryQueue=_queryQueue;
@property(readonly, nonatomic) __weak HDProfile *profile; // @synthesize profile=_profile;
@property(readonly, nonatomic) HDHealthStoreClient *client; // @synthesize client=_client;
@property(readonly, copy, nonatomic) HKQueryServerConfiguration *configuration; // @synthesize configuration=_configuration;
@property(readonly, copy, nonatomic) NSUUID *queryUUID; // @synthesize queryUUID=_queryUUID;
@property(nonatomic) __weak id <HDQueryServerDelegate> delegate; // @synthesize delegate=_delegate;
// - (void).cxx_destruct;
- (double)_queue_logThresholdHardwareFactor;
- (double)_queue_queryLogThreshold;
- (void)_queue_logQueryWithDuration:(double)arg1;
@property(readonly, copy) NSString *description;
- (id)_queryStateString;
- (id)diagnosticDescription;
- (id)_predicateString;
- (void)database:(id)arg1 protectedDataDidBecomeAvailable:(BOOL)arg2;
- (void)samplesOfTypesWereRemoved:(id)arg1 anchor:(id)arg2;
- (void)samplesAdded:(id)arg1 anchor:(id)arg2;
- (void)connectionInvalidated;
- (id)remoteInterface;
- (id)exportedInterface;
- (id)taskUUID;
- (BOOL)_shouldRegisterAsProtectedDataObserver;
- (BOOL)_shouldObserveDatabaseProtectedDataAvailability;
- (BOOL)_shouldExecuteWhenProtectedDataIsUnavailable;
- (BOOL)validateConfiguration:(id )arg1;
- (id)_queue_collectionObserverState;
- (void)_queue_endObservingDataTypes;
- (void)_queue_beginObservingDataTypes;
- (void)_queue_didChangeStateFromPreviousState:(long long)arg1 state:(long long)arg2;
- (void)_queue_didDeactivate;
- (void)_queue_stop;
- (void)_queue_start;
- (BOOL)_shouldObserveOnPause;
- (BOOL)_shouldObserveAllSampleTypes;
- (id)_sampleTypeToObserveForUpdates;
- (BOOL)_shouldListenForUpdates;
- (id)newDataEntityEnumerator;
- (id)readAuthorizationStatusForType:(id)arg1 error:(id )arg2;
- (id /* CDUnknownBlockType */)sampleAuthorizationFilter;
- (void)onQueue:(id /* CDUnknownBlockType */)arg1;
- (void)scheduleDatabaseAccessOnQueueWithBlock:(id /* CDUnknownBlockType */)arg1;
@property(readonly, nonatomic) double activationTime;
@property(readonly) BOOL clientHasActiveWorkout;
- (void)setShouldPause:(BOOL)arg1;
@property(readonly, nonatomic) HKQuantityType *quantityType;
@property(readonly, nonatomic) HKSampleType *sampleType;
@property(readonly, copy, nonatomic) NSSet *objectTypes;
@property(readonly) long long queryState;
@property(readonly, nonatomic) id <HKQueryClientInterface><NSXPCProxyCreating> clientProxy;
- (void)remote_deactivateServer;
- (void)remote_startQueryWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (BOOL)isQueryingForHealthRecordsTypes;
- (void)_queue_notifyIfQueryingForHealthRecords;
- (void)_queue_setSampleTypeObservationAssertions:(id)arg1;
- (void)_queue_updateSampleTypeObservationAssertions;
- (void)_queue_stopDataCollection;
- (void)_queue_startDataCollection;
- (void)_queue_startDataCollectionIfNecessary;
- (id)_queue_sampleTypesForObservation;
- (void)_queue_setQueryState:(long long)arg1;
- (void)_queue_transitionToSuspendedState:(long long)arg1;
- (void)_queue_transitionToPaused;
- (void)_queue_transitionToFinished;
- (void)_queue_transitionToRunning;
- (BOOL)_shouldSuspendQuery;
- (BOOL)_shouldStopProcessingQuery;
- (void)clientStateDidChange:(id)arg1;
- (void)clientStateWillChange:(id)arg1;
- (void)schedulePause;
- (void)deactivateServerWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)_queue_startQueryIfNecessary;
- (void)_scheduleStartQuery;
- (void)_queue_closeActivationTransactionIfNecessary;
- (void)setQueryDidFinishHandler:(id /* CDUnknownBlockType */)arg1;
- (void)_queue_activateServerWithClientState:(id)arg1 error:(id)arg2;
- (void)activateServerWithClientState:(id)arg1 error:(id)arg2;
- (BOOL)prepareToActivateServerWithError:(id )arg1;
- (id)createDatabaseTransactionContext;
- (id)filteredSamplesForClientWithSamples:(id)arg1;
- (id)sanitizedSampleForQueryClient:(id)arg1;
- (void)dealloc;
- (id)initWithUUID:(id)arg1 configuration:(id)arg2 client:(id)arg3 delegate:(id)arg4;

@end

