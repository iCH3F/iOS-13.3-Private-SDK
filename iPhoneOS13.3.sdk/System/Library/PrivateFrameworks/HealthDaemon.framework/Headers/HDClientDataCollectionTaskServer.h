//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HealthDaemon/HDStandardTaskServer.h>

#import <HealthDaemon/HDDataCollector-Protocol.h>

@class HDDataAggregator, HDDataCollectorState, HKDataCollectorCollectionConfiguration, HKDataCollectorTaskServerConfiguration, HKDevice, NSError, NSMutableDictionary, NSObject, NSString, NSUUID;
@protocol OS_dispatch_queue;

@interface HDClientDataCollectionTaskServer : HDStandardTaskServer <HDDataCollector>
{
    NSObject<OS_dispatch_queue> *_queue;
    HDDataCollectorState *_dataCollectorState;
    HKDevice *_device;
    NSError *_fatalError;
    HKDataCollectorTaskServerConfiguration *_configuration;
    NSUUID *_registrationUUID;
    HDDataAggregator *_aggregator;
    HKDataCollectorCollectionConfiguration *_collectionConfiguration;
    NSMutableDictionary *_lastDatumByDevice;
}

+ (BOOL)validateConfiguration:(id)arg1 client:(id)arg2 error:(id )arg3;
+ (Class)configurationClass;
+ (id)requiredEntitlements;
+ (id)taskIdentifier;
// - (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (BOOL)_validateMetadata:(id)arg1 error:(id )arg2;
- (void)dataAggregator:(id)arg1 requestsCollectionThroughDate:(id)arg2 completion:(id /* CDUnknownBlockType */)arg3;
- (void)dataAggregator:(id)arg1 didPersistDatums:(id)arg2 success:(BOOL)arg3 error:(id)arg4;
- (Class)sensorDatumClassForAggregator:(id)arg1;
- (id)sourceForDataAggregator:(id)arg1;
- (id)identifierForDataAggregator:(id)arg1;
- (void)dataAggregator:(id)arg1 wantsCollectionWithConfiguration:(id)arg2;
- (void)beginCollectionForDataAggregator:(id)arg1 lastPersistedSensorDatum:(id)arg2;
- (id)_loggingClientProxy;
- (void)_didFinishPersistenceForBatch:(id)arg1 error:(id)arg2;
- (void)_queue_insertDatums:(id)arg1 device:(id)arg2 metadata:(id)arg3 batchUUID:(id)arg4 registrationUUID:(id)arg5 completion:(id /* CDUnknownBlockType */)arg6;
- (void)connectionInvalidated;
- (id)remoteInterface;
- (id)exportedInterface;
- (void)remote_synchronizeWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)remote_registerWithCompletion:(id /* CDUnknownBlockType */)arg1;
- (void)remote_insertDatums:(id)arg1 device:(id)arg2 metadata:(id)arg3 batchUUID:(id)arg4 registrationUUID:(id)arg5 completion:(id /* CDUnknownBlockType */)arg6;
- (void)connectionConfigured;
- (id)initWithUUID:(id)arg1 configuration:(id)arg2 client:(id)arg3 delegate:(id)arg4;

@end

