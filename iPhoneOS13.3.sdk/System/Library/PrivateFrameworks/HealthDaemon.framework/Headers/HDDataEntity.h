//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HealthDaemon/HDHealthEntity.h>

#import <HealthDaemon/HDSQLiteEntity-Protocol.h>

@interface HDDataEntity : HDHealthEntity <HDSQLiteEntity>
{
}

+ (id)columnNamesForTimeOffset;
+ (long long)countOfObjectsWithPredicate:(id)arg1 healthDatabase:(id)arg2 error:(id )arg3;
+ (id)anyInDatabase:(id)arg1 predicate:(id)arg2 error:(id )arg3;
+ (BOOL)addCodableObject:(id)arg1 toCollection:(id)arg2;
+ (id)codableObjectsFromObjectCollection:(id)arg1;
+ (BOOL)enumerateAssociatedObjectsForIdentifier:(long long)arg1 inDatabase:(id)arg2 error:(id )arg3 associatedObjectHandler:(id /* CDUnknownBlockType */)arg4;
+ (id)deleteStatementsForRelatedEntitiesInDatabase:(id)arg1;
+ (BOOL)acceptsObject:(id)arg1;
+ (id)entityEncoderForProfile:(id)arg1 database:(id)arg2 purpose:(long long)arg3 encodingOptions:(id)arg4 authorizationFilter:(id /* CDUnknownBlockType */)arg5;
+ (id /* CDUnknownBlockType */)objectInsertionFilterForProfile:(id)arg1;
+ (BOOL)participatesInInsertion;
+ (BOOL)isConcreteEntity;
+ (BOOL)isBackedByTable;
+ (long long)preferredEntityType;
+ (long long)compareForReplacmentWithObject:(id)arg1 existingObject:(id)arg2;
+ (id)mergeDataObject:(id)arg1 provenance:(id)arg2 profile:(id)arg3 database:(id)arg4 error:(id )arg5 insertHandler:(id /* CDUnknownBlockType */)arg6;
+ (BOOL)supportsObjectMerging;
+ (struct _HDDeleteObjectDataDefn)_deleteInfoForObjectWithUUID:(id)arg1 database:(id)arg2 error:(id )arg3;
+ (BOOL)_removeObjectWithPersistentID:(long long)arg1 database:(id)arg2 error:(id )arg3;
+ (id)_insertBaseDataObject:(id)arg1 withProvenance:(id)arg2 inDatabase:(id)arg3 error:(id )arg4;
+ (id)insertDataObject:(id)arg1 withProvenance:(id)arg2 inDatabase:(id)arg3 persistentID:(id)arg4 error:(id )arg5;
+ (id)_insertDataObject:(id)arg1 withProvenanceID:(id)arg2 inDatabase:(id)arg3 error:(id )arg4;
+ (id)orderingTermForSortDescriptor:(id)arg1;
+ (BOOL)requiresSampleTypePredicate;
+ (id)predicateMatchingPreferredEntityTypeIfRequiredWithPredicate:(id)arg1;
+ (Class)_entityClassForDeletion;
+ (Class)_deletedEntityClass;
+ (Class)baseDataEntityClass;
+ (id)defaultForeignKey;
+ (id)foreignKeys;
+ (const CDStruct_4c492439 )columnDefinitionsWithCount:(NSUInteger )arg1;
+ (id)databaseTable;
+ (id)propertyForSyncProvenance;
+ (long long)protectionClass;
+ (id)disambiguatedSQLForProperty:(id)arg1;
+ (id)joinClausesForProperty:(id)arg1;
+ (BOOL)generateSyncObjectsForSession:(id)arg1 predicate:(id)arg2 syncAnchorRange:(struct HDSyncAnchorRange)arg3 maxEncodedBytesPerMessage:(long long)arg4 profile:(id)arg5 messageHandler:(id)arg6 error:(id )arg7;
+ (id)_objectWithPredicate:(id)arg1 encodingOptions:(id)arg2 profile:(id)arg3 error:(id )arg4;
+ (id)objectWithID:(id)arg1 encodingOptions:(id)arg2 profile:(id)arg3 error:(id )arg4;
+ (id)objectWithUUID:(id)arg1 encodingOptions:(id)arg2 profile:(id)arg3 error:(id )arg4;
+ (id)predicateForObjectsFromLocalSourceWithBundleIdentifier:(id)arg1 profile:(id)arg2 error:(id )arg3;
+ (id)predicateForObjectsFromAppleWatchSources:(BOOL)arg1 profile:(id)arg2 error:(id )arg3;
+ (id)sourceIDForObjectID:(id)arg1 type:(long long)arg2 profile:(id)arg3 errorOut:(id )arg4;
+ (id)sourceIDsForObjectsOfType:(long long)arg1 profile:(id)arg2 predicate:(id)arg3 error:(id )arg4;
+ (id)entityEnumeratorWithProfile:(id)arg1;
+ (id)dataEntityForObject:(id)arg1 profile:(id)arg2 error:(id )arg3;
+ (void)deleteDataObjects:(id)arg1 restrictedSourceEntities:(id)arg2 failIfNotFound:(BOOL)arg3 profile:(id)arg4 recursiveDeleteAuthorizationBlock:(id /* CDUnknownBlockType */)arg5 completionHandler:(id /* CDUnknownBlockType */)arg6;
+ (id)_sourceBundleIdentifierForSourceEntities:(id)arg1 profile:(id)arg2 error:(id )arg3;
+ (BOOL)journalObjects:(id)arg1 insertionContext:(id)arg2 profile:(id)arg3 error:(id )arg4;
+ (void)insertDataObjects:(id)arg1 insertionContext:(id)arg2 profile:(id)arg3 completionHandler:(id /* CDUnknownBlockType */)arg4;
+ (BOOL)_validateObjectsToInsert:(id)arg1 insertionContext:(id)arg2 profile:(id)arg3 error:(id )arg4;
+ (BOOL)replaceExistingObject:(id)arg1 existingObjectID:(id)arg2 replacementObject:(id)arg3 replacementObjectID:(id)arg4 profile:(id)arg5 database:(id)arg6 error:(id )arg7;
+ (BOOL)_insertDataObject:(id)arg1 insertionContext:(id)arg2 provenanceEntityID:(long long)arg3 profile:(id)arg4 database:(id)arg5 insertedEntityID:(id )arg6 error:(id )arg7;
+ (long long)shouldInsertObject:(id)arg1 sourceID:(id)arg2 profile:(id)arg3 database:(id)arg4 objectToReplace:(id )arg5 objectID:(id )arg6 error:(id )arg7;
+ (BOOL)_shouldReplaceExistingObject:(id)arg1 withObject:(id)arg2 dataEntityClass:(Class)arg3;
+ (id)_primitiveInsertDataObject:(id)arg1 insertionContext:(id)arg2 entityClass:(Class)arg3 provenanceEntityID:(long long)arg4 profile:(id)arg5 database:(id)arg6 error:(id )arg7;

@end

