//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HealthDaemon/HDSQLiteEntity.h>

#import <HealthDaemon/HDHealthEntityEncoding-Protocol.h>

@interface HDHealthEntity : HDSQLiteEntity <HDHealthEntityEncoding>
{
}

+ (BOOL)performPostJournalMergeCleanupWithTransaction:(id)arg1 profile:(id)arg2 error:(id )arg3;
+ (BOOL)updateProperties:(id)arg1 predicate:(id)arg2 healthDatabase:(id)arg3 error:(id )arg4 bindingHandler:(id /* CDUnknownBlockType */)arg5;
+ (id)insertOrReplaceEntity:(BOOL)arg1 healthDatabase:(id)arg2 properties:(id)arg3 error:(id )arg4 bindingHandler:(id /* CDUnknownBlockType */)arg5;
+ (id)entityEncoderForProfile:(id)arg1 database:(id)arg2 purpose:(long long)arg3 encodingOptions:(id)arg4 authorizationFilter:(id /* CDUnknownBlockType */)arg5;
+ (id)_transactionContextForWriting:(BOOL)arg1 baseContext:(id)arg2;
+ (BOOL)performWriteTransactionWithHealthDatabase:(id)arg1 context:(id)arg2 error:(id )arg3 block:(id /* CDUnknownBlockType */)arg4 inaccessibilityHandler:(id /* CDUnknownBlockType */)arg5;
+ (BOOL)performWriteTransactionWithHealthDatabase:(id)arg1 error:(id )arg2 block:(id /* CDUnknownBlockType */)arg3 inaccessibilityHandler:(id /* CDUnknownBlockType */)arg4;
+ (BOOL)performWriteTransactionWithHealthDatabase:(id)arg1 context:(id)arg2 error:(id )arg3 block:(id /* CDUnknownBlockType */)arg4;
+ (BOOL)performWriteTransactionWithHealthDatabase:(id)arg1 error:(id )arg2 block:(id /* CDUnknownBlockType */)arg3;
+ (BOOL)performReadTransactionWithHealthDatabase:(id)arg1 context:(id)arg2 error:(id )arg3 block:(id /* CDUnknownBlockType */)arg4;
+ (BOOL)performReadTransactionWithHealthDatabase:(id)arg1 error:(id )arg2 block:(id /* CDUnknownBlockType */)arg3;
+ (BOOL)_isNilDatabase:(id)arg1 error:(id )arg2;
+ (id)defaultForeignKey;
+ (id)databaseName;
+ (id)protectedDatabaseName;
+ (long long)protectionClass;
+ (id)predicateForSyncWithPredicate:(id)arg1 syncEntityClass:(Class)arg2 session:(id)arg3 syncAnchorRange:(struct HDSyncAnchorRange)arg4;
+ (id)propertyForSyncProvenance;
+ (id)propertyForSyncAnchor;
+ (id)_syncQueryWithDatabase:(id)arg1 predicate:(id)arg2 orderingTerms:(id)arg3 limit:(NSUInteger)arg4 anchorProperty:(id)arg5;
+ (id)_syncQueryDescriptorWithPredicate:(id)arg1 orderingTerms:(id)arg2 limit:(NSUInteger)arg3 anchorProperty:(id)arg4;
+ (long long)nextSyncAnchorWithStartAnchor:(long long)arg1 predicate:(id)arg2 syncEntityClass:(Class)arg3 session:(id)arg4 orderingTerms:(id)arg5 limit:(NSUInteger)arg6 healthDatabase:(id)arg7 error:(id )arg8;
+ (long long)nextSyncAnchorWithStartAnchor:(long long)arg1 predicate:(id)arg2 session:(id)arg3 healthDatabase:(id)arg4 error:(id )arg5;
+ (BOOL)enumerateEntitiesForSyncWithProperties:(id)arg1 predicate:(id)arg2 syncEntityClass:(Class)arg3 session:(id)arg4 syncAnchorRange:(struct HDSyncAnchorRange)arg5 orderingTerms:(id)arg6 limit:(NSUInteger)arg7 lastSyncAnchor:(long long )arg8 healthDatabase:(id)arg9 error:(id )arg10 block:(id /* CDUnknownBlockType */)arg11;
+ (BOOL)enumerateEntitiesForSyncWithProperties:(id)arg1 predicate:(id)arg2 session:(id)arg3 syncAnchorRange:(struct HDSyncAnchorRange)arg4 limit:(NSUInteger)arg5 lastSyncAnchor:(long long )arg6 healthDatabase:(id)arg7 error:(id )arg8 block:(id /* CDUnknownBlockType */)arg9;
+ (id)maxRowIDForPredicate:(id)arg1 healthDatabase:(id)arg2 error:(id )arg3;
+ (id)propertyValueForAnyWithProperty:(id)arg1 predicate:(id)arg2 healthDatabase:(id)arg3 error:(id )arg4;
+ (id)anyWithPredicate:(id)arg1 healthDatabase:(id)arg2 error:(id )arg3;
+ (BOOL)deleteEntitiesWithPredicate:(id)arg1 healthDatabase:(id)arg2 error:(id )arg3;
+ (BOOL)enumerateProperties:(id)arg1 withPredicate:(id)arg2 healthDatabase:(id)arg3 error:(id )arg4 enumerationHandler:(id /* CDUnknownBlockType */)arg5;
+ (long long)countOfObjectsWithPredicate:(id)arg1 healthDatabase:(id)arg2 error:(id )arg3;
+ (BOOL)performWriteTransactionWithHealthDatabase:(id)arg1 error:(id )arg2 usingBlock:(id /* CDUnknownBlockType */)arg3 inaccessibilityHandler:(id /* CDUnknownBlockType */)arg4;
+ (BOOL)performWriteTransactionWithHealthDatabase:(id)arg1 error:(id )arg2 usingBlock:(id /* CDUnknownBlockType */)arg3;
+ (BOOL)performReadTransactionWithHealthDatabase:(id)arg1 error:(id )arg2 usingBlock:(id /* CDUnknownBlockType */)arg3;
+ (id)columnNamesForTimeOffset;
+ (id)updateSQLForTimeOffsetWithBindingCount:(NSUInteger )arg1;
- (BOOL)updateProperties:(id)arg1 healthDatabase:(id)arg2 error:(id )arg3 bindingHandler:(id /* CDUnknownBlockType */)arg4;
- (BOOL)setForeignKeyEntity:(id)arg1 forProperty:(id)arg2 transaction:(id)arg3 error:(id )arg4;
- (id)foreignKeyEntity:(Class)arg1 forProperty:(id)arg2 transaction:(id)arg3 error:(id )arg4;
- (BOOL)setNumber:(id)arg1 forProperty:(id)arg2 transaction:(id)arg3 error:(id )arg4;
- (id)numberForProperty:(id)arg1 transaction:(id)arg2 error:(id )arg3;
- (BOOL)setString:(id)arg1 forProperty:(id)arg2 transaction:(id)arg3 error:(id )arg4;
- (id)stringForProperty:(id)arg1 transaction:(id)arg2 error:(id )arg3;
- (BOOL)setDate:(id)arg1 forProperty:(id)arg2 transaction:(id)arg3 error:(id )arg4;
- (id)dateForProperty:(id)arg1 transaction:(id)arg2 error:(id )arg3;
- (id)stringForProperty:(id)arg1 healthDatabase:(id)arg2 error:(id )arg3;
- (id)valueForProperty:(id)arg1 healthDatabase:(id)arg2 error:(id )arg3;
- (BOOL)getValuesForProperties:(id)arg1 healthDatabase:(id)arg2 error:(id )arg3 handler:(id /* CDUnknownBlockType */)arg4;

@end

