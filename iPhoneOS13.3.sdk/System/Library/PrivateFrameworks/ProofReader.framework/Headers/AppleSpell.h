//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSBundle, NSData, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSURL;
@protocol OS_dispatch_queue;

@interface AppleSpell : NSObject
{
    NSObject<OS_dispatch_queue> *_serialQueue;
    void _proofReaderConnection;
    struct __CFDictionary _databaseConnections;
    NSMutableDictionary *_languageModelDicts;
    NSMutableDictionary *_lexiconDict;
    NSMutableDictionary *_phraseLexiconDict;
    struct __CFDictionary _emojiPredictorDict;
    double _referenceResetTimer;
    double _lastWriteLanguageModels;
    double _lastDecayLanguageModels;
    double _lastResetLanguageModels;
    double _lastReleaseLanguageModels;
    double _lastMaintainLanguageModels;
    NSUInteger _languageModelWordCount;
    NSMutableDictionary *_localDictionaryArrays;
    NSMutableArray *_globalDictionaryArray;
    NSString *_lastLanguage;
    NSString *_lastCandidateLanguage;
    NSArray *_userPreferredLanguages;
    NSArray *_userPreferredLatinLanguages;
    NSArray *_userTopLanguages;
    NSArray *_userTransliterationLocalizations;
    NSArray *_userAdditionalEnglishLocalizations;
    NSMutableDictionary *_learnedResponses;
    NSMutableDictionary *_probationaryLearnedResponses;
    NSMutableDictionary *_probationaryLearnedResponseTimes;
    NSMutableArray *_diagnosticInfo;
    NSMutableSet *_foundNames;
    id _foundNamesLexicon;
    id _foundPhrasesLexicon;
    double _lastFindNames;
    NSMutableSet *_foundShortcuts;
    NSMutableDictionary *_foundShortcutsDictionary;
    NSMutableDictionary *_lastSampleCollected;
    NSUInteger _numberOfSamplesCollected;
    double _lastSampleCollection;
    NSMutableArray *_retainedSamples;
    NSMutableDictionary *_lastSampleRecorded;
    double _lastSampleRecording;
    NSBundle *_dataBundle;
    NSMutableArray *_altBundleURLs;
    NSObject<OS_dispatch_queue> *_assetDataBundleSerialQueue;
    NSMutableDictionary *_assetDataBundleURLDictionary;
    NSMutableSet *_updatedDataBundleLanguages;
    NSURL *_updateBundleURL;
    NSMutableDictionary *_languageCounts;
    double _lastLanguageCounts;
    NSMutableDictionary *_userAdaptationDictionary;
    NSData *_lastKeyEventArray;
    NSUInteger _keyboardHistogram;
    double _lastKeyboardHistogramRecording;
    NSMutableArray *_requestedAssets;
    NSMutableArray *_receivedAssets;
    double _lastAssetRequest;
    NSMutableArray *_recordedCorrections;
    NSMutableArray *_recordedTICorrections;
    double _probationaryInterval;
    BOOL _userPrefersUncheckedLatinLanguage;
    BOOL _userPrefersUncheckedCyrillicLanguage;
    BOOL _hasUpdatedDataBundleLanguages;
    BOOL _shouldClearFoundNames;
    BOOL _automaticTextCompletionCollapsed;
    BOOL _automaticTextCompletionEnabled;
}

- (BOOL)spellServer:(id)arg1 canChangeCaseOfFirstLetterInString:(id)arg2 toUpperCase:(BOOL)arg3 language:(id)arg4;
- (id)spellServer:(id)arg1 correctionsForPinyinInputString:(id)arg2 language:(id)arg3;
- (id)spellServer:(id)arg1 prefixesForPinyinInputString:(id)arg2 language:(id)arg3;
- (id)spellServer:(id)arg1 extendedAlternativesForPinyinInputString:(id)arg2 language:(id)arg3;
- (id)spellServer:(id)arg1 alternativesForPinyinInputString:(id)arg2 language:(id)arg3;
- (id)spellServer:(id)arg1 stringForInputString:(id)arg2 language:(id)arg3;
- (id)spellServer:(id)arg1 suggestWordWithLengthInRange:(_NSRange)arg2 language:(id)arg3;
- (id)spellServer:(id)arg1 suggestNextLetterDictionariesForPartialWordRange:(_NSRange)arg2 inString:(id)arg3 language:(id)arg4;
- (id)spellServer:(id)arg1 suggestNextLetterDictionariesForPartialWordRange:(_NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;
- (id)spellServer:(id)arg1 suggestCompletionDictionariesForPartialWordRange:(_NSRange)arg2 inString:(id)arg3 language:(id)arg4;
- (id)spellServer:(id)arg1 suggestCompletionDictionariesForPartialWordRange:(_NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;
- (id)spellServer:(id)arg1 suggestCompletionsForPartialWordRange:(_NSRange)arg2 inString:(id)arg3 language:(id)arg4;
- (id)spellServer:(id)arg1 suggestCompletionsForPartialWordRange:(_NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;
- (id)spellServer:(id)arg1 suggestGuessDictionariesForWordRange:(_NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5 errorModel:(id)arg6;
- (id)spellServer:(id)arg1 suggestGuessesForWord:(id)arg2 inLanguage:(id)arg3;
- (id)spellServer:(id)arg1 suggestGuessesForWordRange:(_NSRange)arg2 inString:(id)arg3 language:(id)arg4;
- (id)spellServer:(id)arg1 suggestGuessesForWordRange:(_NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;
- (id)spellServer:(id)arg1 generateCandidatesForSelectedRange:(_NSRange)arg2 inString:(id)arg3 offset:(NSUInteger)arg4 types:(NSUInteger)arg5 options:(id)arg6 orthography:(id)arg7;
- (id)spellServer:(id)arg1 checkString:(id)arg2 offset:(NSUInteger)arg3 types:(NSUInteger)arg4 options:(id)arg5 orthography:(id)arg6 wordCount:(long long )arg7;
- (_NSRange)spellServer:(id)arg1 findMisspelledWordInString:(id)arg2 languages:(id)arg3 wordCount:(long long )arg4 countOnly:(BOOL)arg5 correction:(id )arg6;
- (_NSRange)spellServer:(id)arg1 findMisspelledWordInString:(id)arg2 language:(id)arg3 wordCount:(long long )arg4 countOnly:(BOOL)arg5 correction:(id )arg6;
- (_NSRange)spellServer:(id)arg1 findMisspelledWordInString:(id)arg2 language:(id)arg3 wordCount:(long long )arg4 countOnly:(BOOL)arg5;
- (_NSRange)spellServer:(id)arg1 checkGrammarInString:(id)arg2 language:(id)arg3 details:(id )arg4;
- (_NSRange)spellServer:(id)arg1 checkGrammarInString:(id)arg2 range:(_NSRange)arg3 language:(id)arg4 orthography:(id)arg5 mutableResults:(id)arg6 offset:(NSUInteger)arg7 details:(id )arg8;
- (BOOL)_checkGrammarInString:(id)arg1 range:(_NSRange)arg2 language:(id)arg3 connection:(struct _PR_DB_IO )arg4 sender:(id)arg5 bufIO:(struct _PR_BUF_IO )arg6 errorRange:(_NSRange )arg7 details:(id )arg8;
- (id)linguisticTaggerForLanguage:(id)arg1 string:(id)arg2 range:(_NSRange)arg3 taggerIndex:(NSUInteger )arg4;
- (void)setUpdateBundleURL:(id)arg1;
- (void)addAlternateDataBundleURL:(id)arg1;
- (void)releaseDatabaseConnections;
- (void )databaseConnectionForLanguage:(id)arg1;
- (id)databasePathForLanguage:(id)arg1;
- (unsigned int)encodingForLanguage:(id)arg1;
- (id)fallbackLocalizationForLanguage:(id)arg1;
- (id)localizationForLanguage:(id)arg1;
- (id)localizationsForLanguage:(id)arg1;
- (void)resetDataBundlesForLanguage:(id)arg1;
- (id)dataBundlesForLanguage:(id)arg1;
- (id)dataBundle;
- (id)init;
- (void)resetTimer;
- (void)timeout:(id)arg1;
- (id)assetDataBundleURLsForLanguage:(id)arg1;
- (float)dynamicScoreForWord:(id)arg1 language:(id)arg2 appIdentifier:(id)arg3;
- (float)dynamicScoreForWord:(id)arg1 languageModel:(id)arg2 language:(id)arg3;
- (BOOL)_useAlternateLanguageForRange:(_NSRange)arg1 ofString:(id)arg2 language:(id)arg3 tagger:(id)arg4 taggerIndex:(NSUInteger)arg5 alternateLanguage:(id)arg6 alternateTagger:(id)arg7 alternateTaggerIndex:(NSUInteger)arg8 appIdentifier:(id)arg9;
- (id)_rankedCandidatesForCandidateList:(id)arg1 language:(id)arg2 tagger:(id)arg3 taggerIndex:(NSUInteger)arg4 appIdentifier:(id)arg5;
- (id)_rankedCandidatesForRange:(_NSRange)arg1 candidates:(id)arg2 language:(id)arg3 tagger:(id)arg4 taggerIndex:(NSUInteger)arg5 appIdentifier:(id)arg6 scoreDictionary:(id)arg7;
- (BOOL)_getUnigramProbabilityForString:(id)arg1 languageModel:(id)arg2 probability:(double )arg3;
- (BOOL)_addLanguageModelCompletionsForPartialWordRange:(_NSRange)arg1 language:(id)arg2 connection:(struct _PR_DB_IO )arg3 sender:(id)arg4 encoding:(unsigned int)arg5 tagger:(id)arg6 taggerIndex:(NSUInteger)arg7 appIdentifier:(id)arg8 waitForLanguageModel:(BOOL)arg9 candidates:(id)arg10;
- (id)languageModelCompletionsForPartialWord:(id)arg1 language:(id)arg2 sender:(id)arg3 appIdentifier:(id)arg4;
- (void)_addLanguageModelCompletionsForPrefix:(id)arg1 languageModel:(id)arg2 language:(id)arg3 connection:(struct _PR_DB_IO )arg4 sender:(id)arg5 encoding:(unsigned int)arg6 capitalized:(BOOL)arg7 candidates:(id)arg8;
- (BOOL)useUnigramProbabilityForLanguage:(id)arg1;
- (BOOL)useLanguageModelForLanguage:(id)arg1 tagger:(id)arg2 taggerIndex:(NSUInteger)arg3 appIdentifier:(id)arg4;
- (id)languageModelForLanguage:(id)arg1 appIdentifier:(id)arg2 waitForResult:(BOOL)arg3;
- (id)_loadLanguageModelForLanguage:(id)arg1 localization:(id)arg2 appIdentifier:(id)arg3 onQueue:(id)arg4;
- (void)_readLanguageModelParametersFromDictionary:(id)arg1;
- (void)_readLanguageModelParametersFromDefaults;
- (id)languageModelFallbackLocalizationForLanguage:(id)arg1;
- (id)languageModelLocalizationForLanguage:(id)arg1;
- (NSUInteger)_contextLengthForRange:(_NSRange)arg1 language:(id)arg2 tagger:(id)arg3 taggerIndex:(NSUInteger)arg4 languageModel:(id)arg5 maxContextLength:(NSUInteger)arg6 context:(unsigned int )arg7 cleanOffset:(NSUInteger )arg8;
- (id)backgroundMaintenanceQueue;
- (BOOL)shouldBlockWord:(id)arg1 language:(id)arg2 encoding:(unsigned int)arg3;
- (id)_stringForTokenIDs:(const unsigned int )arg1 tokenCount:(NSUInteger)arg2 languageModel:(id)arg3 language:(id)arg4 connection:(struct _PR_DB_IO )arg5 sender:(id)arg6 encoding:(unsigned int)arg7 prefix:(id)arg8 capitalized:(BOOL)arg9;
- (unsigned int)_tokenIDForString:(id)arg1 languageModel:(id)arg2 language:(id)arg3 terminatorTokenID:(unsigned int)arg4;
- (unsigned int)_tokenIDForString:(id)arg1 languageModel:(id)arg2 language:(id)arg3 createIfAbsent:(BOOL)arg4 terminatorTokenID:(unsigned int)arg5;
- (id)_standardizedLanguageModelStringForString:(id)arg1;
- (id)sentenceTerminatorCharacterSet;
- (void)clearCaches;
- (id)sentenceCorrectionsDictionaryForLanguage:(id)arg1;
- (id)phraseCorrectionsDictionaryForLanguage:(id)arg1;
- (id)capitalizationDictionaryArrayForLanguage:(id)arg1;
- (id)guessesDictionaryForLanguage:(id)arg1;
- (id)autocorrectionDictionaryForLanguage:(id)arg1;
- (id)dictionaryForLanguage:(id)arg1 index:(NSUInteger)arg2;
- (BOOL)checkNameWordBuffer:(char )arg1 length:(NSUInteger)arg2 language:(id)arg3 encoding:(unsigned int)arg4 globalOnly:(BOOL)arg5;
- (BOOL)checkWordBuffer:(char )arg1 length:(NSUInteger)arg2 language:(id)arg3 encoding:(unsigned int)arg4 index:(NSUInteger)arg5;
- (id)localDictionaryArrayForLanguage:(id)arg1;
- (id)globalDictionaryArray;
- (id)spellServer:(id)arg1 candidatesForSelectedRange:(_NSRange)arg2 inString:(id)arg3 offset:(NSUInteger)arg4 types:(NSUInteger)arg5 options:(id)arg6 orthography:(id)arg7;
- (BOOL)noSuggestForCompletion:(id)arg1 language:(id)arg2 appIdentifier:(id)arg3;
- (void)personalizeEmojiArray:(id)arg1;
- (id)spellServer:(id)arg1 suggestWordWithMinimumLength:(NSUInteger)arg2 maximumLength:(NSUInteger)arg3 language:(id)arg4;
- (id)spellServer:(id)arg1 suggestNextLetterDictionariesForPartialWordRange:(_NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;
- (id)spellServer:(id)arg1 suggestCompletionDictionariesForPartialWordRange:(_NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;
- (id)spellServer:(id)arg1 suggestCompletionsForPartialWordRange:(_NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;
- (id)_correctionResultForString:(id)arg1 range:(_NSRange)arg2 inString:(id)arg3 offset:(NSUInteger)arg4 tagger:(id)arg5 taggerIndex:(NSUInteger)arg6 appIdentifier:(id)arg7 dictionary:(id)arg8 languages:(id)arg9 connection:(struct _PR_DB_IO )arg10 onlyAtInsertionPoint:(BOOL)arg11 capitalize:(BOOL)arg12 autocapitalize:(BOOL)arg13 keyEventArray:(id)arg14 selectedRangeValue:(id)arg15 previousLetter:(unsigned short)arg16 nextLetter:(unsigned short)arg17 isAlternateLanguage:(BOOL)arg18 extraMisspellingCount:(NSUInteger)arg19 extraCorrectionCount:(NSUInteger )arg20;
- (id)_accentCorrectionResultForString:(id)arg1 range:(_NSRange)arg2 inString:(id)arg3 offset:(NSUInteger)arg4 language:(id)arg5 onlyAtInsertionPoint:(BOOL)arg6 keyEventArray:(id)arg7 selectedRangeValue:(id)arg8;
- (id)_phraseCapitalizationResultForString:(id)arg1 range:(_NSRange)arg2 currentWordRange:(_NSRange)arg3 inString:(id)arg4 offset:(NSUInteger)arg5 language:(id)arg6 onlyAtInsertionPoint:(BOOL)arg7 keyEventArray:(id)arg8 selectedRangeValue:(id)arg9;
- (id)_capitalizationResultForString:(id)arg1 range:(_NSRange)arg2 inString:(id)arg3 offset:(NSUInteger)arg4 language:(id)arg5 onlyAtInsertionPoint:(BOOL)arg6 keyEventArray:(id)arg7 selectedRangeValue:(id)arg8;
- (BOOL)findMatchingRangesForRange:(_NSRange)arg1 inString:(id)arg2 keyEventArray:(id)arg3 selectedRangeValue:(id)arg4 matchingStringRange:(_NSRange )arg5 correctableStringRange:(_NSRange )arg6 matchingKeyEventRange:(_NSRange )arg7 firstMisspelledKeyEventIndex:(NSUInteger )arg8 lastMisspelledKeyEventIndex:(NSUInteger )arg9 previousBackspaceCount:(NSUInteger )arg10;
- (BOOL)_findMatchingRangesForRange:(_NSRange)arg1 inString:(id)arg2 keyEventArray:(id)arg3 endingAtIndex:(NSUInteger)arg4 matchingStringRange:(_NSRange )arg5 correctableStringRange:(_NSRange )arg6 matchingKeyEventRange:(_NSRange )arg7 firstMisspelledKeyEventIndex:(NSUInteger )arg8 lastMisspelledKeyEventIndex:(NSUInteger )arg9 previousBackspaceCount:(NSUInteger )arg10;
- (void)_addGuessesForWordBuffer:(char )arg1 length:(NSUInteger)arg2 language:(id)arg3 connection:(struct _PR_DB_IO )arg4 sender:(id)arg5 minAutocorrectionLength:(NSUInteger)arg6 previousLetter:(unsigned short)arg7 nextLetter:(unsigned short)arg8 basicOnly:(BOOL)arg9 toGuesses:(id)arg10;
- (void)enumerateCorrectionEntriesForWord:(id)arg1 maxCorrections:(NSUInteger)arg2 inLexiconForLanguage:(id)arg3 withBlock:(id /* CDUnknownBlockType */)arg4;
- (void)enumerateEntriesForWord:(id)arg1 inLexiconForLanguage:(id)arg2 withBlock:(id /* CDUnknownBlockType */)arg3;
- (id)phraseMatching:(id)arg1 inLexiconForLanguage:(id)arg2;
- (unsigned int)metaFlagsForWord:(id)arg1 inLexiconForLanguage:(id)arg2;
- (BOOL)validateWord:(id)arg1 inLexicon:(id)arg2;
- (BOOL)validateNoSuggestUntilLearnedWord:(id)arg1 inLexiconForLanguage:(id)arg2;
- (BOOL)validateUntilLearnedWord:(id)arg1 inLexiconForLanguage:(id)arg2;
- (BOOL)validateNoCapAbbreviation:(id)arg1 inLexiconForLanguage:(id)arg2;
- (BOOL)validateVariantWord:(id)arg1 inLexiconForLanguage:(id)arg2;
- (BOOL)validateWord:(id)arg1 inLexiconForLanguage:(id)arg2;
- (BOOL)validateWord:(id)arg1 inLexicons:(id)arg2 forLanguage:(id)arg3 requiredMetaFlags:(unsigned int)arg4 alternativeRequiredMetaFlags:(unsigned int)arg5 prohibitedMetaFlags:(unsigned int)arg6 caseInsensitive:(BOOL)arg7;
- (void)updateAllLexicons;
- (void)updateLexiconsForLanguage:(id)arg1;
- (id)_phraseLexiconsForLanguage:(id)arg1;
- (id)lexiconForLanguage:(id)arg1;
- (id)_lexiconsForLanguage:(id)arg1;
- (id)_lexiconsForLanguage:(id)arg1 waitForResult:(BOOL)arg2;
- (id)_loadLexiconsForLanguage:(id)arg1 localization:(id)arg2 onQueue:(id)arg3;
- (id)backgroundLoadingQueue;
- (id)_phraseLexiconPathForLanguage:(id)arg1;
- (id)_lexiconPathForLanguage:(id)arg1 type:(id)arg2;
- (id)_lexiconPathForLocalization:(id)arg1 type:(id)arg2;
- (void)enumerateAssetDataItemsForLocale:(id)arg1 withBlock:(id /* CDUnknownBlockType */)arg2;
- (NSUInteger)numberOfTurkishSuffixPointsInBuffer:(char )arg1 length:(NSUInteger)arg2 maxSuffixPoints:(NSUInteger)arg3 suffixPoints:(CDStruct_b54abf8e )arg4;
- (BOOL)spellServer:(id)arg1 _canChangeCaseOfFirstLetterInString:(id)arg2 toUpperCase:(BOOL)arg3 language:(id)arg4;
- (_NSRange)spellServer:(id)arg1 findMisspelledWordInString:(id)arg2 range:(_NSRange)arg3 languages:(id)arg4 topLanguages:(id)arg5 orthography:(id)arg6 checkOrthography:(BOOL)arg7 mutableResults:(id)arg8 offset:(NSUInteger)arg9 autocorrect:(BOOL)arg10 onlyAtInsertionPoint:(BOOL)arg11 initialCapitalize:(BOOL)arg12 autocapitalize:(BOOL)arg13 keyEventArray:(id)arg14 appIdentifier:(id)arg15 selectedRangeValue:(id)arg16 wordCount:(long long )arg17 countOnly:(BOOL)arg18 correction:(id )arg19;
- (id)_orthographyByModifyingOrthography:(id)arg1 withLatinLanguage:(id)arg2;
- (BOOL)validateWordBuffer:(char )arg1 length:(NSUInteger)arg2 language:(id)arg3 connection:(struct _PR_DB_IO )arg4 sender:(id)arg5 checkBase:(BOOL)arg6 checkDict:(BOOL)arg7 checkNames:(BOOL)arg8 checkHyphens:(BOOL)arg9 checkIntercaps:(BOOL)arg10 checkOptions:(BOOL)arg11 depth:(NSUInteger)arg12;
- (BOOL)validateWordBuffer:(char )arg1 length:(NSUInteger)arg2 language:(id)arg3 connection:(struct _PR_DB_IO )arg4 sender:(id)arg5 checkBase:(BOOL)arg6 checkDict:(BOOL)arg7 checkTemp:(BOOL)arg8 checkNames:(BOOL)arg9 checkHyphens:(BOOL)arg10 checkIntercaps:(BOOL)arg11 checkOptions:(BOOL)arg12 depth:(NSUInteger)arg13;
- (BOOL)validateWordBuffer:(char )arg1 length:(NSUInteger)arg2 language:(id)arg3 connection:(struct _PR_DB_IO )arg4 sender:(id)arg5 checkBase:(BOOL)arg6 checkDict:(BOOL)arg7 checkTemp:(BOOL)arg8 checkUser:(BOOL)arg9 checkNames:(BOOL)arg10 checkHyphens:(BOOL)arg11 checkIntercaps:(BOOL)arg12 checkOptions:(BOOL)arg13 depth:(NSUInteger)arg14;
- (BOOL)validateWordBuffer:(char )arg1 length:(NSUInteger)arg2 language:(id)arg3 connection:(struct _PR_DB_IO )arg4 sender:(id)arg5 checkBase:(BOOL)arg6 checkDict:(BOOL)arg7 checkTemp:(BOOL)arg8 checkUser:(BOOL)arg9 checkNames:(BOOL)arg10 checkHyphens:(BOOL)arg11 checkIntercaps:(BOOL)arg12 checkOptions:(BOOL)arg13 forCorrection:(BOOL)arg14 depth:(NSUInteger)arg15;
- (BOOL)checkSpecialPrefixesForWordBuffer:(char )arg1 length:(NSUInteger)arg2;
- (BOOL)validateAbbreviationOrNumberWordBuffer:(char )arg1 length:(NSUInteger)arg2 language:(id)arg3 encoding:(unsigned int)arg4 connection:(struct _PR_DB_IO )arg5 sender:(id)arg6;
- (BOOL)validateWordPrefixBuffer:(char )arg1 length:(NSUInteger)arg2 connection:(struct _PR_DB_IO )arg3;
- (BOOL)validateWordBuffer:(char )arg1 length:(NSUInteger)arg2 connection:(struct _PR_DB_IO )arg3;
- (BOOL)checkNoCapAbbreviationWordBuffer:(char )arg1 length:(NSUInteger)arg2 language:(id)arg3 encoding:(unsigned int)arg4;
- (BOOL)checkNegativeWordBuffer:(char )arg1 length:(NSUInteger)arg2 language:(id)arg3 encoding:(unsigned int)arg4;
- (NSUInteger)acceptabilityOfWordBuffer:(char )arg1 length:(NSUInteger)arg2 language:(id)arg3 encoding:(unsigned int)arg4 forPrediction:(BOOL)arg5;
- (NSUInteger)acceptabilityOfWordBuffer:(char )arg1 length:(NSUInteger)arg2 language:(id)arg3 encoding:(unsigned int)arg4 forPrediction:(BOOL)arg5 depth:(NSUInteger)arg6;
- (BOOL)_checkEnglishGrammarInString:(id)arg1 range:(_NSRange)arg2 indexIntoBuffer:(NSUInteger)arg3 bufferLength:(NSUInteger)arg4 language:(id)arg5 connection:(struct _PR_DB_IO )arg6 sender:(id)arg7 bufIO:(struct _PR_BUF_IO )arg8 retval:(int )arg9 errorRange:(_NSRange )arg10 details:(id )arg11;
- (id)_detailWithRange:(_NSRange)arg1 description:(id)arg2 corrections:(id)arg3;
- (id)_correctionForSuggestedPhrase:(const char )arg1 originalBuffer:(const char )arg2 length:(NSUInteger)arg3;
- (id)_modifiedGrammarDescriptionForDescription:(id)arg1;
- (id)_crudePreviousWordInString:(id)arg1 inRange:(_NSRange)arg2;
- (id)_crudePreviousWordInString:(id)arg1 inRange:(_NSRange)arg2 precededBy:(id )arg3;
- (id)_crudeNextWordInString:(id)arg1 inRange:(_NSRange)arg2;
- (BOOL)onNoContractionList:(id)arg1 language:(id)arg2 connection:(struct _PR_DB_IO )arg3 sender:(id)arg4;
- (BOOL)onContractionList:(id)arg1 language:(id)arg2 connection:(struct _PR_DB_IO )arg3 sender:(id)arg4;
- (BOOL)looksLikeParticiple:(id)arg1 language:(id)arg2 connection:(struct _PR_DB_IO )arg3 sender:(id)arg4;
- (BOOL)looksLikeAdverb:(id)arg1 language:(id)arg2 connection:(struct _PR_DB_IO )arg3 sender:(id)arg4;
- (BOOL)looksLikeArticledNoun:(id)arg1 language:(id)arg2 connection:(struct _PR_DB_IO )arg3;
- (id)spellServer:(id)arg1 suggestGuessDictionariesForWordRange:(_NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5 errorModel:(id)arg6;
- (id)spellServer:(id)arg1 suggestGuessesForWordRange:(_NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;
- (id)_spellServer:(id)arg1 suggestGuessesForWordRange:(_NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5 tagger:(id)arg6 taggerIndex:(NSUInteger)arg7 errorModel:(id)arg8 guessesDictionaries:(id)arg9;
- (void)addLexiconGuessesForWord:(id)arg1 buffer:(char )arg2 length:(NSUInteger)arg3 language:(id)arg4 minCorrectionLength:(NSUInteger)arg5 minExtendedCorrectionLength:(NSUInteger)arg6 isCapitalized:(BOOL)arg7 stopAfterFreeInsertions:(BOOL)arg8 toGuesses:(id)arg9;
- (id)spellServer:(id)arg1 finalModificationsForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 modificationsForPinyinInputString:(id)arg2 geometryModelData:(id)arg3;
- (id)spellServer:(id)arg1 modificationsForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 _retainedFinalModificationsForPinyinInputString:(id)arg2 geometryModelData:(id)arg3;
- (id)spellServer:(id)arg1 _retainedModificationsForPinyinInputString:(id)arg2 geometryModelData:(id)arg3;
- (id)spellServer:(id)arg1 correctionsForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 _retainedCorrectionsForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 prefixesForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 _retainedPrefixesForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 extendedAlternativesForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 alternativesForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 _retainedAlternativesForPinyinInputString:(id)arg2 extended:(BOOL)arg3;
- (id)_recursiveRetainedAlternativesForPinyinInputString:(id)arg1 depth:(NSUInteger)arg2;
- (id)_retainedAlternativesByCombiningAlternatives:(id)arg1 withAlternatives:(id)arg2 andAddingAlternatives:(id)arg3;
- (id)_pinyinStringByCombiningPinyinString:(id)arg1 withPinyinString:(id)arg2;
- (NSUInteger)_getSplitIndexes:(NSUInteger )arg1 maxCount:(NSUInteger)arg2 forPinyinInputString:(id)arg3;
- (id)_primitiveRetainedAlternativesForPinyinInputString:(id)arg1;
- (void)addModifiedPartialPinyinToArray:(id)arg1 connection:(struct _PR_DB_IO )arg2 fromIndex:(NSUInteger)arg3 prevIndex:(NSUInteger)arg4 prevPrevIndex:(NSUInteger)arg5 prePrevPrevIndex:(NSUInteger)arg6 startingModificationsAt:(NSUInteger)arg7 inBuffer:(char )arg8 length:(NSUInteger)arg9 initialSyllableCount:(NSUInteger)arg10 initialScore:(NSUInteger)arg11 prevScore:(NSUInteger)arg12 prevPrevScore:(NSUInteger)arg13 lastSyllableScore:(NSUInteger)arg14;
- (void)addModifiedPinyinToArray:(id)arg1 connection:(struct _PR_DB_IO )arg2 fromIndex:(NSUInteger)arg3 prevIndex:(NSUInteger)arg4 prevPrevIndex:(NSUInteger)arg5 startingModificationsAt:(NSUInteger)arg6 inBuffer:(char )arg7 length:(NSUInteger)arg8 initialSyllableCount:(NSUInteger)arg9 initialScore:(NSUInteger)arg10 prevScore:(NSUInteger)arg11 prevPrevScore:(NSUInteger)arg12 lastSyllableScore:(NSUInteger)arg13 couldBeAbbreviatedPinyin:(BOOL)arg14;
- (void)addSpecialModifiedPinyinToArray:(id)arg1 inBuffer:(char )arg2 length:(NSUInteger)arg3 atEnd:(BOOL)arg4;
- (id)englishStringFromWordBuffer:(char )arg1 length:(NSUInteger)arg2 connection:(struct _PR_DB_IO )arg3;
- (id)englishStringsFromWordBuffer:(char )arg1 length:(NSUInteger)arg2 connection:(struct _PR_DB_IO )arg3;
- (id)spellServer:(id)arg1 suggestGuessesForKoreanWordRange:(_NSRange)arg2 inString:(id)arg3 options:(id)arg4;
- (id)_correctionResultForKoreanString:(id)arg1 range:(_NSRange)arg2 inString:(id)arg3 offset:(NSUInteger)arg4 tagger:(id)arg5 taggerIndex:(NSUInteger)arg6 appIdentifier:(id)arg7 dictionary:(id)arg8 keyEventArray:(id)arg9;
- (void)addGuessesForKoreanWord:(id)arg1 includeAdditionalGuesses:(BOOL)arg2 toGuesses:(id)arg3;
- (id)externalStringForKoreanInternalString:(id)arg1;
- (id)internalStringForKoreanExternalString:(id)arg1;

@end

