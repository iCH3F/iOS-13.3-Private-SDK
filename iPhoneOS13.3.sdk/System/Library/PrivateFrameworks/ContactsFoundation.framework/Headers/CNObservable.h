//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <ContactsFoundation/CNObservable-Protocol.h>

@class NSString;

@interface CNObservable : NSObject <CNObservable>
{
    NSString *_pipelineDescription;
}

+ (id)progressiveForkJoin:(id)arg1 scheduler:(id)arg2;
+ (id)merge:(id)arg1 schedulerProvider:(id)arg2;
+ (id)merge:(id)arg1;
+ (id)forkJoin:(id)arg1 scheduler:(id)arg2;
+ (id)concatenate:(id)arg1;
+ (id)combineLatest:(id)arg1 resultScheduler:(id)arg2 schedulerProvider:(id)arg3;
+ (id)combineLatest:(id)arg1 schedulerProvider:(id)arg2;
+ (id)combineLatest:(id)arg1;
+ (id)amb:(id)arg1;
+ (id)timerWithDelay:(double)arg1 scheduler:(id)arg2;
+ (id)timerWithDelay:(double)arg1;
+ (id)emptyObservable;
+ (id)neverObservable;
+ (id)observableWithTimeInterval:(double)arg1 scheduler:(id)arg2;
+ (id)observableWithError:(id)arg1;
+ (id)observableWithResults:(id)arg1 interval:(double)arg2 scheduler:(id)arg3;
+ (id)observableWithResults:(id)arg1 scheduler:(id)arg2;
+ (id)observableWithResults:(id)arg1;
+ (id)observableWithRange:(_NSRange)arg1 interval:(double)arg2 scheduler:(id)arg3;
+ (id)observableWithRange:(_NSRange)arg1 scheduler:(id)arg2;
+ (id)observableWithRange:(_NSRange)arg1;
+ (id)observableWithFutures:(id)arg1 schedulerProvider:(id)arg2;
+ (id)observableWithFutures:(id)arg1;
+ (id)observableWithFuture:(id)arg1 schedulerProvider:(id)arg2;
+ (id)observableWithFuture:(id)arg1;
+ (id)observableWithResult:(id)arg1;
+ (id)observableWithBlock:(id /* CDUnknownBlockType */)arg1;
+ (id)os_log_protocol;
+ (id)os_log;
+ (id)observableWithInitialState:(id)arg1 condition:(id /* CDUnknownBlockType */)arg2 nextState:(id /* CDUnknownBlockType */)arg3 resultSelector:(id /* CDUnknownBlockType */)arg4 delay:(id /* CDUnknownBlockType */)arg5 scheduler:(id)arg6;
+ (id)observableWithInitialState:(id)arg1 condition:(id /* CDUnknownBlockType */)arg2 nextState:(id /* CDUnknownBlockType */)arg3 resultSelector:(id /* CDUnknownBlockType */)arg4 scheduler:(id)arg5;
+ (id)observableWithInitialState:(id)arg1 condition:(id /* CDUnknownBlockType */)arg2 nextState:(id /* CDUnknownBlockType */)arg3 resultSelector:(id /* CDUnknownBlockType */)arg4;
+ (void)sendNextTimestampFromQueue:(id)arg1 toObserver:(id)arg2 untilCanceled:(id)arg3 scheduler:(id)arg4;
+ (id)observableWithRelativeTimestamps:(id)arg1 schedulerProvider:(id)arg2;
+ (id)observableWithAbsoluteTimestamps:(id)arg1 schedulerProvider:(id)arg2;
+ (id)observableWithEmailAddressesInString:(id)arg1;
+ (id)binderTypeForResultType:(NSUInteger)arg1;
+ (id)observableWithScannerResultsOfType:(NSUInteger)arg1 inString:(id)arg2;
+ (id)observableWithScannerResultsInString:(id)arg1;
+ (id)asyncScannerResultsInString:(id)arg1;
+ (id)scannerResultsInString:(id)arg1;
+ (id)observableOnNotificationCenter:(id)arg1 withName:(id)arg2 object:(id)arg3;
+ (id)observableOnDefaultNotificationCenterWithName:(id)arg1 object:(id)arg2;
+ (id)observableOnDarwinNotificationCenterWithName:(id)arg1;
+ (id)observableForKeyPath:(id)arg1 ofObject:(id)arg2 withOptions:(NSUInteger)arg3;
// - (void).cxx_destruct;
- (id)subscribe:(id)arg1;
- (id)using:(id /* CDUnknownBlockType */)arg1;
- (id)toArray;
- (id)timestampWithScheduler:(id)arg1;
- (id)timeoutAfterDelay:(double)arg1 alternateObservable:(id)arg2 schedule:(id)arg3;
- (id)timeIntervalWithScheduler:(id)arg1;
- (id)timeInterval;
- (id)throttleFirstAndLast:(double)arg1 schedulerProvider:(id)arg2;
- (id)throttleFirst:(double)arg1 scheduler:(id)arg2;
- (id)throttle:(double)arg1 options:(NSUInteger)arg2 schedulerProvider:(id)arg3;
- (id)throttle:(double)arg1 schedulerProvider:(id)arg2;
- (id)takeUntil:(id)arg1;
- (id)takeLast:(NSUInteger)arg1;
- (id)take:(NSUInteger)arg1;
- (id)switchMap:(id /* CDUnknownBlockType */)arg1 schedulerProvider:(id)arg2;
- (id)switchMap:(id /* CDUnknownBlockType */)arg1;
- (id)switchWithSchedulerProvider:(id)arg1;
- (id)switch;
- (id)startWith:(id)arg1 scheduler:(id)arg2;
- (id)startWith:(id)arg1;
- (id)skipUntil:(id)arg1;
- (id)skipLast:(NSUInteger)arg1;
- (id)skip:(NSUInteger)arg1;
- (id)scan:(id /* CDUnknownBlockType */)arg1 seed:(id)arg2;
- (id)scan:(id /* CDUnknownBlockType */)arg1;
- (id)sampleWithObservable:(id)arg1;
- (id)sample:(double)arg1 scheduler:(id)arg2;
- (id)sample:(double)arg1;
- (id)publish;
- (id)onErrorHandler:(id /* CDUnknownBlockType */)arg1;
- (id)onError:(id)arg1;
- (id)onEmpty:(id)arg1;
- (id)materialize;
- (id)map:(id /* CDUnknownBlockType */)arg1;
- (id)ignoreElements;
- (id)flatMap:(id /* CDUnknownBlockType */)arg1 schedulerProvider:(id)arg2;
- (id)flatMap:(id /* CDUnknownBlockType */)arg1;
- (id)filter:(id /* CDUnknownBlockType */)arg1;
- (void)enumerateObjectsUsingBlock:(id /* CDUnknownBlockType */)arg1;
- (id)doOnTerminate:(id /* CDUnknownBlockType */)arg1;
- (id)doOnSubscribe:(id /* CDUnknownBlockType */)arg1;
- (id)doOnNext:(id /* CDUnknownBlockType */)arg1;
- (id)doOnError:(id /* CDUnknownBlockType */)arg1;
- (id)doOnCompletion:(id /* CDUnknownBlockType */)arg1;
- (id)doOnCancel:(id /* CDUnknownBlockType */)arg1;
- (id)distinctUntilChanged;
- (id)distinct;
- (id)dematerialize;
- (id)delaySubscription:(double)arg1 scheduler:(id)arg2;
- (id)delay:(double)arg1 scheduler:(id)arg2;
- (id)concatMap:(id /* CDUnknownBlockType */)arg1 schedulerProvider:(id)arg2;
- (id)concatMap:(id /* CDUnknownBlockType */)arg1;
- (id)bufferWithInterval:(double)arg1 scheduler:(id)arg2;
- (id)bufferWithInterval:(double)arg1;
- (id)buffer:(NSUInteger)arg1 interval:(double)arg2 scheduler:(id)arg3;
- (id)buffer:(NSUInteger)arg1 interval:(double)arg2;
- (id)buffer:(NSUInteger)arg1;
- (id)any:(id /* CDUnknownBlockType */)arg1;
- (id)ambWith:(id)arg1;
- (id)allObjects:(id )arg1;
- (id)observeOn:(id)arg1;
- (id)subscribeOn:(id)arg1;
- (id)pipelineDescriptionWithOperation:(id /* CDUnknownBlockType */)arg1 onObservable:(id)arg2;
- (id)pipelineDescription:(id /* CDUnknownBlockType */)arg1;
@property(readonly, nonatomic) NSString *debugPipelineDescription;

@end

