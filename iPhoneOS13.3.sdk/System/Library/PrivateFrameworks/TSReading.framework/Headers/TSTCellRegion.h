//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>


@class NSIndexSet;

@interface TSTCellRegion : NSObject <NSCopying>
{
    NSUInteger mCellRangesCount;
    CDStruct_5f1f7aa9 mCellRanges;
    CDStruct_5f1f7aa9 mBoundingCellRange;
    NSUInteger mCellCount;
    NSIndexSet *mIntersectingColumnsIndexSet;
    NSIndexSet *mIntersectingRowsIndexSet;
    CDStruct_0441cfb5 mUpperLeftCellID;
    CDStruct_0441cfb5 mBottomRightCellID;
}

+ (id)regionFromColumnIndices:(id)arg1;
+ (id)regionFromRowIndices:(id)arg1;
+ (id)regionFillingRowsFromRegion:(id)arg1;
+ (id)regionFillingColumnsFromRegion:(id)arg1;
+ (id)invalidRegion;
+ (id)region:(id)arg1 subtractingRegion:(id)arg2;
+ (id)region:(id)arg1 addingRegion:(id)arg2;
+ (id)unionEveryRangeInRegion:(id)arg1 withRange:(CDStruct_5f1f7aa9)arg2;
+ (id)region:(id)arg1 intersectingRange:(CDStruct_5f1f7aa9)arg2;
+ (id)region:(id)arg1 subtractingRange:(CDStruct_5f1f7aa9)arg2;
+ (id)region:(id)arg1 addingRange:(CDStruct_5f1f7aa9)arg2;
+ (id)regionFromCellMap:(id)arg1;
+ (id)regionFromRange:(CDStruct_5f1f7aa9)arg1;
- (id)description;
- (void)p_calculateUpperLeftAndBottomRightCellID;
- (void)p_calculateIntersectingRows;
- (void)p_calculateIntersectingColumns;
- (void)p_calculateAncillaryInformation;
- (void)p_insertRangeIntoRegion:(CDStruct_5f1f7aa9)arg1;
- (void)enumerateColumnRangesUsingBlock:(id /* CDUnknownBlockType */)arg1;
- (void)enumerateRowRangesUsingBlock:(id /* CDUnknownBlockType */)arg1;
- (void)enumerateInDirection:(int)arg1 usingBlock:(id /* CDUnknownBlockType */)arg2;
- (void)enumerateRowsUsingBlock:(id /* CDUnknownBlockType */)arg1;
- (void)enumerateColumnsUsingBlock:(id /* CDUnknownBlockType */)arg1;
- (void)enumerateCellRangesUsingBlock:(id /* CDUnknownBlockType */)arg1;
- (void)enumerateCellIDsUsingBlock:(id /* CDUnknownBlockType */)arg1;
- (NSObject )topToBottomIterator;
- (NSObject )rightToLeftIterator;
- (NSObject )iterator;
- (CDStruct_0441cfb5)suitableCursor;
- (CDStruct_0441cfb5)suitableAnchor;
// - (id)copyWithZone:(_NSZone )arg1;
- (BOOL)isValid;
- (id)intersectingRowsIndexSet;
- (id)intersectingColumnsIndexSet;
@property(readonly, nonatomic) unsigned short numberOfIntersectingRows;
@property(readonly, nonatomic) unsigned short numberOfIntersectingColumns;
- (BOOL)intersectsRow:(unsigned short)arg1;
- (BOOL)intersectsColumn:(unsigned char)arg1;
- (BOOL)partiallyIntersectsCellRange:(CDStruct_5f1f7aa9)arg1;
- (BOOL)intersectsCellRange:(CDStruct_5f1f7aa9)arg1;
- (BOOL)equalsCellRange:(CDStruct_5f1f7aa9)arg1;
- (BOOL)equalsCellRegion:(id)arg1;
- (BOOL)containsCellRegion:(id)arg1;
- (BOOL)containsCellRange:(CDStruct_5f1f7aa9)arg1;
- (BOOL)containsCellID:(CDStruct_0441cfb5)arg1;
@property(readonly, nonatomic) BOOL isRectangle;
@property(readonly, nonatomic) BOOL isEmpty;
@property(readonly, nonatomic) NSUInteger cellCount;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 boundingCellRange;
@property(readonly, nonatomic) CDStruct_0441cfb5 bottomRightCellID;
@property(readonly, nonatomic) CDStruct_0441cfb5 upperLeftCellID;
- (id)regionByApplyingRowMapping:(id)arg1;
- (id)regionByAddingColumns:(id)arg1;
- (id)regionByAddingRows:(id)arg1;
- (id)regionByIntersectingColumnIndices:(id)arg1;
- (id)regionByIntersectingRowIndices:(id)arg1;
- (id)regionByRemovingColumns:(id)arg1;
- (id)regionByRemovingRows:(id)arg1;
- (id)regionOffsetBy:(CDStruct_79c71658)arg1;
- (id)regionBySubtractingRegion:(id)arg1;
- (id)regionByAddingRegion:(id)arg1;
- (id)regionByUnioningEveryRangeInRegionWithRange:(CDStruct_5f1f7aa9)arg1;
- (id)regionByIntersectingRange:(CDStruct_5f1f7aa9)arg1;
- (id)regionBySubtractingRange:(CDStruct_5f1f7aa9)arg1;
- (id)regionByAddingRange:(CDStruct_5f1f7aa9)arg1;
- (void)dealloc;
- (id)init;
- (void)fillCellRangeRowMajorSet:(set_1f50691b )arg1 leftToRight:(BOOL)arg2;
- (void)fillCellRangeColMajorSet:(set_3ba0425c )arg1 leftToRight:(BOOL)arg2;

@end

