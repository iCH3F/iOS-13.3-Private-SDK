//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <TSReading/TSDMagicMoveMatching-Protocol.h>

@class CALayer, NSArray, NSDictionary, TSDCanvas, TSDInteractiveCanvasController, TSDKnobTracker, TSDLayout, TSDLayoutGeometry, TSDTextureContext, TSDTextureSet, TSDTilingBackgroundQueue;
@protocol OS_dispatch_queue, TSDContainerRep;

@interface TSDRep : NSObject <TSDMagicMoveMatching>
{
    TSDCanvas *mCanvas;
    TSDRep<TSDContainerRep> *mParentRep;
    NSArray *mKnobs;
    BOOL mKnobPositionsInvalid;
    BOOL mShowKnobsWhenManipulated;
    BOOL mKnobsAreShowing;
    TSDKnobTracker *mKnobTracker;
    BOOL mSelectionHighlightLayerValid;
    CALayer *mSelectionHighlightLayer;
    NSUInteger mTextureDeliveryStyle;
    int mTextureByGlyphStyle;
    TSDTextureContext *mTextureContext;
    NSUInteger mTextureStage;
    BOOL mForceRasterization;
    NSDictionary *mTextureActionAttributes;
    NSDictionary *mTextureAnimationInfo;
    BOOL mShowTemporaryHighlight;
    CALayer *mTemporaryHighlightLayer;
    BOOL mShowDragAndDropHighlight;
    CALayer *mDragAndDropHighlightLayer;
    NSUInteger mLayerUpdatesPausedCount;
    TSDLayout *mTemporaryMixingLayout;
    TSDLayout *mLayout;
    TSDTextureSet *mTexture;
    CGColor mDefaultSelectionHighlightColor;
    TSDLayoutGeometry *mLastGeometryInRoot;
    CGRect mOriginalLayerFrameInScaledCanvas;
    TSDTilingBackgroundQueue *mTileQueue;
    long long mTileQueueOnce;
    long long mTileProviderQueueLock;
    NSObject<OS_dispatch_queue> *mTileProviderQueue;
    BOOL mHasBeenRemoved;
}

@property(retain, nonatomic) NSDictionary *textureAnimationInfo; // @synthesize textureAnimationInfo=mTextureAnimationInfo;
@property(retain, nonatomic) NSDictionary *textureActionAttributes; // @synthesize textureActionAttributes=mTextureActionAttributes;
@property(nonatomic) NSUInteger textureStage; // @synthesize textureStage=mTextureStage;
@property(copy, nonatomic) TSDTextureContext *textureContext; // @synthesize textureContext=mTextureContext;
@property(nonatomic) int textureByGlyphStyle; // @synthesize textureByGlyphStyle=mTextureByGlyphStyle;
@property(nonatomic) NSUInteger textureDeliveryStyle; // @synthesize textureDeliveryStyle=mTextureDeliveryStyle;
@property(retain, nonatomic) TSDTextureSet *texture; // @synthesize texture=mTexture;
@property(nonatomic) TSDKnobTracker *currentKnobTracker; // @synthesize currentKnobTracker=mKnobTracker;
@property(nonatomic) TSDRep<TSDContainerRep> *parentRep; // @synthesize parentRep=mParentRep;
@property(retain, nonatomic) TSDLayout *temporaryMixingLayout; // @synthesize temporaryMixingLayout=mTemporaryMixingLayout;
@property BOOL forceRasterization; // @synthesize forceRasterization=mForceRasterization;
@property(readonly, nonatomic) TSDCanvas *canvas; // @synthesize canvas=mCanvas;
- (id)delegateConformingToProtocol:(id)arg1 forRep:(id)arg2;
- (void)replaceContentsFromRep:(id)arg1;
- (void)willReplaceContentsFromRep:(id)arg1;
@property(readonly, nonatomic) NSArray *hyperlinkRegions;
- (BOOL)wantsToDistortWithImagerContext;
- (void)i_shutdownTileQueue;
- (id)i_tileQueue;
- (id)i_queueForTileProvider;
- (BOOL)mustDrawOnMainThreadForInteractiveCanvas;
- (BOOL)canDrawInParallel;
- (BOOL)canDrawInBackgroundDuringScroll;
- (int)tilingMode;
- (BOOL)directlyManagesLayerContent;
- (void)didCreateLayer:(id)arg1;
- (CGPoint)centerForRotation;
- (CGRect)boundsForResizeGuideUI;
- (BOOL)wantsGuidesWhileResizing;
- (id)infoForTransforming;
- (BOOL)resizeFromCenterOnly;
- (double)opacity;
- (NSUInteger)adjustedKnobForComputingResizeGeometry:(NSUInteger)arg1;
- (CGRect)targetRectForEditMenu;
- (id)itemsToAddToEditMenu;
- (BOOL)handlesEditMenu;
- (BOOL)isLocked;
- (BOOL)isPlaceholder;
- (BOOL)isSelectable;
- (int)dragHUDAndGuidesTypeAtCanvasPoint:(CGPoint)arg1;
- (int)dragTypeAtCanvasPoint:(CGPoint)arg1;
- (BOOL)shouldShowSizesInRulers;
- (BOOL)shouldShowDragHUD;
- (BOOL)isDraggable;
- (BOOL)isOpaque;
- (BOOL)masksToBounds;
- (id)allLayers;
- (void)invalidateAnnotationColor;
- (void)invalidateComments;
- (BOOL)shouldShowCommentHighlight;
- (id)additionalLayersOverLayer;
- (id)additionalLayersUnderLayer;
- (void)didUpdateLayer:(id)arg1;
- (void)willUpdateLayer:(id)arg1;
- (BOOL)canEditWithEditor:(id)arg1;
- (id)beginEditing;
- (void)willBeRemoved;
- (void)processChangedProperty:(int)arg1;
- (void)drawInContext:(CGContext )arg1;
- (BOOL)repDirectlyManagesContentsScaleOfLayer:(id)arg1;
- (void)didEndDrawingTilingLayerInBackground:(id)arg1 withToken:(id)arg2;
- (BOOL)shouldBeginDrawingTilingLayerInBackground:(id)arg1 returningToken:(id )arg2 andQueue:(id )arg3;
- (id)queueForDrawingTilingLayerInBackground:(id)arg1;
- (CGRect)visibleBoundsForTilingLayer:(id)arg1;
- (BOOL)mustDrawTilingLayerOnMainThread:(id)arg1;
- (BOOL)canDrawTilingLayerInBackground:(id)arg1;
- (BOOL)shouldLayoutTilingLayer:(id)arg1;
- (id)textureForContext:(id)arg1;
- (void)p_setMagicMoveTextureAttributes:(id)arg1;
- (CGAffineTransform)unRotatedTransform:(CGAffineTransform)arg1;
- (void)markTextureDirty;
@property(readonly, nonatomic) double textureAngle;
- (BOOL)wantsToHandleTapsWhenLocked;
- (BOOL)wantsToHandleTapsOnContainingGroup;
- (BOOL)canClipThemeContentToCanvas;
- (BOOL)handleDoubleTapAtPoint:(CGPoint)arg1;
- (BOOL)handleSingleTapAtPoint:(CGPoint)arg1;
- (BOOL)shouldIgnoreSingleTapAtPoint:(CGPoint)arg1 withRecognizer:(id)arg2;
- (BOOL)shouldIgnoreEditMenuTapAtPoint:(CGPoint)arg1 withRecognizer:(id)arg2;
- (BOOL)wantsEditMenuForTapAtPoint:(CGPoint)arg1 onKnob:(id)arg2;
- (BOOL)handleDoubleTapAtPoint:(CGPoint)arg1 onKnob:(id)arg2;
- (BOOL)handleSingleTapAtPoint:(CGPoint)arg1 onKnob:(id)arg2;
- (CGPoint)unscaledGuidePosition;
- (double)angleForRotation;
- (BOOL)isBeingRotated;
- (void)p_dynamicRotateDidBegin;
- (void)dynamicRotateDidBegin;
- (CGRect)i_originalLayerFrameInScaledCanvas;
- (CGPoint)i_dragOffset;
- (BOOL)isInDynamicOperation;
- (id)popoutLayers;
- (id)overlayLayers;
- (id)p_addLayersForKnobsToArray:(id)arg1 withDelegate:(id)arg2 isOverlay:(BOOL)arg3;
- (CGPoint)convertKnobPositionToUnscaledCanvas:(CGPoint)arg1;
- (void)i_invalidateSelectionHighlightLayer;
- (id)selectionHighlightLayer;
- (CGAffineTransform)transformForHighlightLayer;
- (CGRect)boundsForHighlightLayer;
@property(nonatomic) CGColor selectionHighlightColor;
- (double)selectionHighlightWidth;
- (BOOL)directlyManagesVisibilityOfKnob:(id)arg1;
- (void)fadeKnobsOut;
- (void)fadeKnobsIn;
- (void)turnKnobsOn;
- (void)showKnobsDuringManipulation:(BOOL)arg1;
- (BOOL)shouldShowKnobs;
- (BOOL)shouldDisplayHyperlinkUI;
@property(readonly, nonatomic) BOOL isEditingPath;
- (BOOL)shouldShowCommentUIDirectlyOverRep;
- (BOOL)shouldCreateCommentKnob;
- (BOOL)shouldCreateLockedKnobs;
- (BOOL)shouldCreateSelectionKnobs;
- (BOOL)shouldCreateKnobs;
- (BOOL)shouldShowSelectionHighlight;
- (double)additionalRotationForKnobOrientation;
- (id)knobForTag:(NSUInteger)arg1;
- (void)p_actionGhostKnobHit;
- (void)p_toggleHyperlinkUIVisibility;
- (id)newTrackerForKnob:(id)arg1;
- (void)invalidateKnobPositions;
- (CGPoint)positionOfStandardKnob:(id)arg1 forBounds:(CGRect)arg2;
- (CGPoint)p_positionOfActionGhostKnobForBounds:(CGRect)arg1;
- (CGPoint)positionOfActionGhostKnob;
- (CGPoint)positionOfHyperlinkKnob;
- (BOOL)forcesPlacementOnTop;
- (void)updatePositionsOfKnobs:(id)arg1;
- (CGRect)trackingBoundsForStandardKnobs;
- (CGRect)boundsForStandardKnobs;
- (BOOL)canUseSpecializedHitRegionForKnob:(id)arg1;
- (void)addActionGhostKnobToArrayIfNecessary:(id)arg1;
- (void)addHyperlinkKnobToArray:(id)arg1;
- (void)addCommentKnobToArray:(id)arg1;
- (void)addLockedKnobsToArray:(id)arg1;
- (void)addSelectionKnobsToArray:(id)arg1;
- (id)newSelectionKnobForType:(int)arg1 tag:(NSUInteger)arg2;
- (void)addKnobsToArray:(id)arg1;
- (NSUInteger)enabledKnobMask;
- (void)invalidateKnobs;
@property(readonly, nonatomic) NSArray *knobs;
- (void)becameNotSelected;
- (void)becameSelected;
- (BOOL)isSelected;
- (BOOL)isSelectedIgnoringLocking;
- (void)i_configureFontSmoothingForContext:(CGContext )arg1 layer:(id)arg2;
- (void)endDrawingOperation;
- (void)beginDrawingOperation;
- (void)recursivelyDrawChildrenInContext:(CGContext )arg1;
- (void)recursivelyDrawInContext:(CGContext )arg1;
- (void)addBitmapsToRenderingQualityInfo:(id)arg1 inContext:(CGContext )arg2;
- (CGRect)clipRect;
- (BOOL)isDrawingInFlippedContext;
- (void)didDrawInLayer:(id)arg1 context:(CGContext )arg2;
- (void)drawInLayerContext:(CGContext )arg1;
- (void)setupForDrawingInLayer:(id)arg1 context:(CGContext )arg2;
- (id)colorBehindLayer:(id)arg1;
- (Class)layerClass;
- (void)viewScrollingEnded;
- (void)viewScrollDidChange;
- (void)viewScrollWillChange;
- (void)viewScaleDidChange;
- (void)wideGamutValueDidChange;
- (void)screenScaleDidChange;
- (void)setNeedsDisplayInRect:(CGRect)arg1;
- (void)setNeedsDisplay;
- (void)processChanges:(id)arg1;
- (void)computeDirectLayerFrame:(CGRect )arg1 andTransform:(CGAffineTransform )arg2 basedOnLayoutGeometry:(id)arg3;
- (void)computeDirectLayerFrame:(CGRect )arg1 andTransform:(CGAffineTransform )arg2;
- (void)computeDirectLayerFrame:(CGRect )arg1 andTransform:(CGAffineTransform )arg2 basedOnTransform:(CGAffineTransform)arg3 andSize:(CGSize)arg4;
- (void)antiAliasDefeatLayerFrame:(CGRect )arg1 forTransform:(CGAffineTransform)arg2;
- (void)antiAliasDefeatLayerTransform:(CGAffineTransform )arg1 forFrame:(CGRect)arg2;
- (void)updateLayerGeometryFromLayout:(id)arg1;
- (CGAffineTransform)layerTransformInRootForZeroAnchor;
- (CGAffineTransform)parentLayerInverseTransformInRootForZeroAnchor;
- (CGAffineTransform)layerTransform;
- (void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(BOOL)arg3;
- (void)updateFromLayout;
- (void)updateChildrenFromLayout;
- (id)repForHandleSingleTap;
- (id)repForRotating;
- (id)repForSelecting;
- (id)additionalRepsForDragging;
- (id)repForDragging;
- (BOOL)intersectsUnscaledRect:(CGRect)arg1;
- (double)shortestDistanceToPoint:(CGPoint)arg1 countAsHit:(BOOL )arg2;
- (BOOL)shouldExpandHitRegionWhenSmall;
- (id)hitRepChrome:(CGPoint)arg1;
- (id)hitRepChrome:(CGPoint)arg1 passingTest:(id /* CDUnknownBlockType */)arg2;
- (id)hitReps:(CGPoint)arg1 withSlopBlock:(id /* CDUnknownBlockType */)arg2;
- (id)hitReps:(CGPoint)arg1 withSlop:(CGSize)arg2;
- (id)hitRep:(CGPoint)arg1;
- (id)hitRep:(CGPoint)arg1 withGesture:(id)arg2 passingTest:(id /* CDUnknownBlockType */)arg3;
- (BOOL)containsPoint:(CGPoint)arg1 withSlop:(CGSize)arg2;
- (BOOL)containsPoint:(CGPoint)arg1;
- (void)scrollRectToVisible:(CGRect)arg1 animated:(BOOL)arg2;
- (double)scaleToConvertNaturalToLayerRelative;
- (CGPoint)convertUnscaledPointFromLayerRelative:(CGPoint)arg1;
- (CGPoint)convertUnscaledPointToLayerRelative:(CGPoint)arg1;
- (CGRect)convertNaturalRectFromLayerRelative:(CGRect)arg1;
- (CGRect)convertNaturalRectToLayerRelative:(CGRect)arg1;
- (CGPoint)convertNaturalPointFromLayerRelative:(CGPoint)arg1;
- (CGPoint)convertNaturalPointToLayerRelative:(CGPoint)arg1;
- (CGAffineTransform)transformToConvertNaturalFromLayerRelative;
- (CGAffineTransform)transformToConvertNaturalToLayerRelative;
- (CGPoint)layerOffsetForDragging;
- (CGRect)layerFrameInScaledCanvasRelativeToParent;
- (CGRect)i_layerFrameInScaledCanvasIgnoringDragging;
- (CGRect)layerFrameInScaledCanvas;
- (CGRect)frameInScreenSpace;
- (CGRect)frameInUnscaledCanvasIncludingChrome;
- (CGRect)frameInUnscaledCanvas;
- (CGPoint)convertNaturalPointFromUnscaledCanvas:(CGPoint)arg1;
- (CGPoint)convertNaturalPointToUnscaledCanvas:(CGPoint)arg1;
- (CGPath )newPathInScaledCanvasFromNaturalRect:(CGRect)arg1;
- (CGRect)convertNaturalRectFromUnscaledCanvas:(CGRect)arg1;
- (CGRect)convertNaturalRectToUnscaledCanvas:(CGRect)arg1;
- (BOOL)isVisibleOnCanvas;
- (CGRect)naturalBounds;
- (double)angleInRoot;
- (void)addToSet:(id)arg1;
- (id)parentRepToPerformSelecting;
- (void)i_willEnterForeground;
- (BOOL)hasBeenRemoved;
- (void)i_willBeRemoved;
- (void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelector:(SEL)arg1;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1;
- (void)wasAddedToParent;
- (void)willBeRemovedFromParent;
- (id)connectedReps;
- (void)resumeLayerUpdatesAndLayoutImmediately;
- (void)resumeLayerUpdates;
- (void)pauseLayerUpdates;
- (BOOL)layerUpdatesPaused;
- (id)info;
@property(readonly, nonatomic) TSDLayout *layout; // @synthesize layout=mLayout;
@property(readonly, nonatomic) TSDInteractiveCanvasController *interactiveCanvasController;
- (BOOL)i_hasInteractiveCanvasController;
- (id)description;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;
- (id)subviewsController;
- (CGRect)i_partition_deepClipRect;
- (BOOL)allowTrackingContainedRep:(id)arg1;
- (void)addTrackingAboveChildren:(id)arg1;
- (void)addTracking:(id)arg1;

@end

