//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <FrontBoard/FBSProcess-Protocol.h>
#import <FrontBoard/FBSProcessInternal-Protocol.h>
#import <FrontBoard/RBSProcessMatching-Protocol.h>

@class BSMachPortTaskNameRight, BSProcessHandle, FBProcessCPUStatistics, FBProcessExecutionContext, FBProcessExitContext, FBProcessState, FBSApplicationInfo, FBWorkspace, NSError, NSHashTable, NSMutableArray, NSString, RBSAssertion, RBSProcessHandle, RBSProcessIdentity, RBSProcessState, RBSTarget;
@protocol FBProcessDelegate, OS_dispatch_queue;

@interface FBProcess : NSObject <FBSProcessInternal, RBSProcessMatching, FBSProcess>
{
    NSObject<OS_dispatch_queue> *_queue;
    FBProcessExecutionContext *_executionContext;
    id <FBProcessDelegate> _delegate;
    int _pid;
    RBSProcessIdentity *_identity;
    BSProcessHandle *_handle;
    RBSProcessHandle *_rbsHandle;
    FBProcessState *_state;
    NSString *_bundleIdentifier;
    NSString *_executablePath;
    FBSApplicationInfo *_applicationInfo;
    FBWorkspace *_workspace;
    FBProcessCPUStatistics *_cpuStatistics;
    long long _backgroundingPolicy;
    FBProcessExitContext *_exitContext;
    NSHashTable *_observers;
    NSMutableArray *_launchCompletionBlocks;
    RBSProcessState *_rbsState;
    NSError *_bootstrapError;
    RBSAssertion *_launchAssertion;
    RBSAssertion *_continuousAssertion;
    BOOL _waitForDebugger;
    BOOL _updatingState;
    BOOL _didExit;
    BOOL _invalidated;
    BOOL _attemptedBootstrap;
    BOOL _launchFinalized;
    BOOL _launchSuccess;
    BOOL _submittedLaunchRequest;
    long long _executableLivesOnSystemPartition;
    int _pendingExit;
    double _execTime;
    RBSTarget *_target;
}

+ (id)calloutQueue;
@property(readonly, nonatomic) FBWorkspace *workspace; // @synthesize workspace=_workspace;
@property(readonly, nonatomic) RBSProcessIdentity *identity; // @synthesize identity=_identity;
@property(readonly, nonatomic) BSProcessHandle *handle; // @synthesize handle=_handle;
@property(readonly, nonatomic) RBSTarget *target; // @synthesize target=_target;
@property(readonly, nonatomic) long long backgroundingPolicy; // @synthesize backgroundingPolicy=_backgroundingPolicy;
@property(readonly, nonatomic) double execTime; // @synthesize execTime=_execTime;
@property(readonly, nonatomic) BOOL finishedLaunching; // @synthesize finishedLaunching=_launchSuccess;
@property(readonly, nonatomic) int pid; // @synthesize pid=_pid;
@property(readonly, copy, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(readonly, copy, nonatomic) FBProcessExecutionContext *executionContext; // @synthesize executionContext=_executionContext;
// - (void).cxx_destruct;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (id)succinctDescriptionBuilder;
- (id)succinctDescription;
- (id)processPredicate;
- (BOOL)matchesProcess:(id)arg1;
- (BOOL)_watchdog:(id)arg1 shouldTerminateWithDeclineReason:(out id )arg2;
- (id)_watchdog:(id)arg1 terminationRequestForViolatedProvision:(id)arg2 error:(id)arg3;
- (void)_watchdogStopped:(id)arg1;
- (void)_watchdogStarted:(id)arg1;
- (void)_terminateWithRequest:(id)arg1 forWatchdog:(id)arg2;
@property(readonly, retain, nonatomic) BSMachPortTaskNameRight *taskNameRight;
- (id)_queue_newWatchdogForContext:(id)arg1 completion:(id /* CDUnknownBlockType */)arg2;
- (void)_queue_executeLaunchCompletionBlocks:(BOOL)arg1;
- (void)_queue_noteProcessDidExit:(id)arg1;
- (void)_queue_noteLaunchDidComplete:(BOOL)arg1;
- (void)_queue_noteLaunchWillComplete;
- (id)_queue_createBootstrapContext;
- (void)_queue_rebuildState:(id)arg1;
- (void)_queue_rebuildState;
- (void)_noteStateDidUpdate:(id)arg1;
- (BOOL)_wantsStateUpdates;
- (void)_queue_dropAssertions;
- (void)_queue_processDidExitWithContext:(id)arg1;
- (void)_queue_enumerateObserversWithBlock:(id /* CDUnknownBlockType */)arg1;
- (void)_updateCPUStatistics;
- (void)_queue_sceneLifecycleStateChanged:(id)arg1;
- (void)_queue_setVisibility:(long long)arg1;
- (void)_queue_launchComplete:(id)arg1;
- (void)_queue_bootstrapAndExec;
- (void)_queue_setDebugging:(BOOL)arg1;
- (void)_queue_setTaskState:(long long)arg1;
- (void)_queue_setPid:(int)arg1;
- (void)_queue_updateStateWithBlock:(id /* CDUnknownBlockType */)arg1;
- (void)_notePendingExitForReason:(id)arg1;
- (void)_executeBlockAfterLaunchCompletes:(id /* CDUnknownBlockType */)arg1;
@property(readonly, nonatomic) BOOL executableLivesOnSystemPartition;
@property(readonly, nonatomic) FBSApplicationInfo *applicationInfo; // @synthesize applicationInfo=_applicationInfo;
@property(readonly, nonatomic, getter=isPendingExit) BOOL pendingExit;
@property(readonly, nonatomic, getter=isBeingDebugged) BOOL beingDebugged;
@property(readonly, nonatomic, getter=isRunning) BOOL running;
@property(readonly, nonatomic, getter=isForeground) BOOL foreground;
- (id)valueForEntitlement:(id)arg1;
- (BOOL)hasEntitlement:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
@property(readonly, nonatomic) FBProcessExitContext *exitContext;
@property(readonly, copy, nonatomic) FBProcessState *state;
@property(readonly, copy, nonatomic) NSString *name;
- (void)invalidate;
- (void)launchWithDelegate:(id)arg1;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithHandle:(id)arg1 identity:(id)arg2 executionContext:(id)arg3;
- (id)init;
- (BOOL)isExtensionProcess;
- (BOOL)isSystemApplicationProcess;
- (BOOL)isApplicationProcess;

@end

