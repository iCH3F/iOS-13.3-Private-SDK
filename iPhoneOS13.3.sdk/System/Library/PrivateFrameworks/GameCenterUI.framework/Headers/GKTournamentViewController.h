//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <GameCenterUI/GKTournamentHostInterface-Protocol.h>

@class GKExtensionManager, GKScore, GKTournament, GKTournamentDefinition, GKTournamentViewRequest, NSString, UIAlertController;
@protocol GKTournamentViewControllerDelegate;

@interface GKTournamentViewController : UIViewController <GKTournamentHostInterface>
{
    BOOL _playerResigned;
    GKTournament *_tournament;
    GKTournamentDefinition *_tournamentDefinition;
    id <GKTournamentViewControllerDelegate> _delegate;
    GKExtensionManager *_extensionManager;
    UIAlertController *_alertController;
    NSString *_tournamentID;
    GKScore *_playerScore;
    GKTournamentViewRequest *_viewRequest;
}

@property(retain, nonatomic) GKTournamentViewRequest *viewRequest; // @synthesize viewRequest=_viewRequest;
@property(nonatomic) BOOL playerResigned; // @synthesize playerResigned=_playerResigned;
@property(retain, nonatomic) GKScore *playerScore; // @synthesize playerScore=_playerScore;
@property(retain, nonatomic) NSString *tournamentID; // @synthesize tournamentID=_tournamentID;
@property(retain, nonatomic) UIAlertController *alertController; // @synthesize alertController=_alertController;
@property(retain, nonatomic) GKExtensionManager *extensionManager; // @synthesize extensionManager=_extensionManager;
@property(nonatomic) __weak id <GKTournamentViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) GKTournamentDefinition *tournamentDefinition; // @synthesize tournamentDefinition=_tournamentDefinition;
@property(readonly, nonatomic) GKTournament *tournament; // @synthesize tournament=_tournament;
// - (void).cxx_destruct;
- (void)didReceiveMemoryWarning;
- (void)willFinishWithError:(id)arg1;
- (void)dismissViewControllerAnimated:(BOOL)arg1 completion:(id /* CDUnknownBlockType */)arg2;
- (oneway void)extensionDidTerminateWithError:(id)arg1;
- (oneway void)extensionWillFinish;
- (oneway void)playTournament:(id)arg1 withTryToken:(id)arg2;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewDidLoad;
- (void)loadRemoteView;
- (id)initWithViewRequest:(id)arg1;

@end

