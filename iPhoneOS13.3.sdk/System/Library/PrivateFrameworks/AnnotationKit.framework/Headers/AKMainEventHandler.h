//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIResponder.h>

#import <AnnotationKit/AKFormFeatureDetectorDelegate-Protocol.h>

@class AKAlignmentGuideController, AKAnnotation, AKAnnotationEventHandler, AKController, AKHighlightColorEditorController, AKPageController, UIEvent;

@interface AKMainEventHandler : UIResponder <AKFormFeatureDetectorDelegate>
{
    BOOL _mainEventHandlerIsInTrackingLoop;
    BOOL _mainEventHandlerIsInDoodleTrackingLoop;
    BOOL _mainEventHandlerIsInRotationLoop;
    BOOL _shouldEatNextLeftMouseUp;
    BOOL _shouldEatNextRightMouseUp;
    BOOL _dragDidCopySelectedAnnotations;
    BOOL _undoManagerWasGroupingByEvent;
    BOOL _wasSelectedByLongPressRecognizer;
    AKAnnotationEventHandler *_annotationEventHandler;
    NSUInteger _currentModifierFlags;
    AKPageController *_dragPageController;
    AKAlignmentGuideController *_dragAlignmentGuideController;
    double _draggedAnnotationsMaxLeftEdge;
    double _draggedAnnotationsMinRightEdge;
    double _draggedAnnotationsMaxBottomEdge;
    double _draggedAnnotationsMinTopEdge;
    UIEvent *_lastEventWithValidLocationForAutoscroll;
    UIEvent *_lastLeftMouseDownEvent;
    AKAnnotation *_annotationToBeginEditingOnDragEnd;
    AKHighlightColorEditorController *_highlightColorEditor;
    AKController *_controller;
    CGPoint _leftMouseDownPoint;
    CGPoint _lastDragPoint;
    CGPoint _lastDragActualLocation;
    CGPoint _lastDragActualLocationInWindow;
    CGPoint _firstDragPoint;
    CGPoint _panGestureStartPointInWindow;
}

+ (id)newMainEventHandlerForCurrentPlatformWithController:(id)arg1;
@property CGPoint panGestureStartPointInWindow; // @synthesize panGestureStartPointInWindow=_panGestureStartPointInWindow;
@property CGPoint firstDragPoint; // @synthesize firstDragPoint=_firstDragPoint;
@property __weak AKController *controller; // @synthesize controller=_controller;
@property(retain) AKHighlightColorEditorController *highlightColorEditor; // @synthesize highlightColorEditor=_highlightColorEditor;
@property __weak AKAnnotation *annotationToBeginEditingOnDragEnd; // @synthesize annotationToBeginEditingOnDragEnd=_annotationToBeginEditingOnDragEnd;
@property BOOL wasSelectedByLongPressRecognizer; // @synthesize wasSelectedByLongPressRecognizer=_wasSelectedByLongPressRecognizer;
@property(retain) UIEvent *lastLeftMouseDownEvent; // @synthesize lastLeftMouseDownEvent=_lastLeftMouseDownEvent;
@property(retain) UIEvent *lastEventWithValidLocationForAutoscroll; // @synthesize lastEventWithValidLocationForAutoscroll=_lastEventWithValidLocationForAutoscroll;
@property double draggedAnnotationsMinTopEdge; // @synthesize draggedAnnotationsMinTopEdge=_draggedAnnotationsMinTopEdge;
@property double draggedAnnotationsMaxBottomEdge; // @synthesize draggedAnnotationsMaxBottomEdge=_draggedAnnotationsMaxBottomEdge;
@property double draggedAnnotationsMinRightEdge; // @synthesize draggedAnnotationsMinRightEdge=_draggedAnnotationsMinRightEdge;
@property double draggedAnnotationsMaxLeftEdge; // @synthesize draggedAnnotationsMaxLeftEdge=_draggedAnnotationsMaxLeftEdge;
@property CGPoint lastDragActualLocationInWindow; // @synthesize lastDragActualLocationInWindow=_lastDragActualLocationInWindow;
@property CGPoint lastDragActualLocation; // @synthesize lastDragActualLocation=_lastDragActualLocation;
@property CGPoint lastDragPoint; // @synthesize lastDragPoint=_lastDragPoint;
@property(retain) AKAlignmentGuideController *dragAlignmentGuideController; // @synthesize dragAlignmentGuideController=_dragAlignmentGuideController;
@property(retain) AKPageController *dragPageController; // @synthesize dragPageController=_dragPageController;
@property CGPoint leftMouseDownPoint; // @synthesize leftMouseDownPoint=_leftMouseDownPoint;
@property BOOL undoManagerWasGroupingByEvent; // @synthesize undoManagerWasGroupingByEvent=_undoManagerWasGroupingByEvent;
@property BOOL dragDidCopySelectedAnnotations; // @synthesize dragDidCopySelectedAnnotations=_dragDidCopySelectedAnnotations;
@property BOOL shouldEatNextRightMouseUp; // @synthesize shouldEatNextRightMouseUp=_shouldEatNextRightMouseUp;
@property BOOL shouldEatNextLeftMouseUp; // @synthesize shouldEatNextLeftMouseUp=_shouldEatNextLeftMouseUp;
@property NSUInteger currentModifierFlags; // @synthesize currentModifierFlags=_currentModifierFlags;
@property(retain) AKAnnotationEventHandler *annotationEventHandler; // @synthesize annotationEventHandler=_annotationEventHandler;
@property BOOL mainEventHandlerIsInRotationLoop; // @synthesize mainEventHandlerIsInRotationLoop=_mainEventHandlerIsInRotationLoop;
@property BOOL mainEventHandlerIsInDoodleTrackingLoop; // @synthesize mainEventHandlerIsInDoodleTrackingLoop=_mainEventHandlerIsInDoodleTrackingLoop;
@property BOOL mainEventHandlerIsInTrackingLoop; // @synthesize mainEventHandlerIsInTrackingLoop=_mainEventHandlerIsInTrackingLoop;
// - (void).cxx_destruct;
- (BOOL)_detectFormElementInCurrentPageControllerUnderPointInWindow:(CGPoint)arg1;
- (BOOL)_detectFormElementInCurrentPageControllerUnderPointInWindow:(CGPoint)arg1 withStartingPoint:(CGPoint)arg2;
- (CGPoint)_alignedAnnotationDragPointForPoint:(CGPoint)arg1 withEvent:(id)arg2 orRecognizer:(id)arg3;
- (void)_updateSelectionWithAnnotation:(id)arg1 onPageController:(id)arg2;
- (BOOL)_didNotHandleEventSoDeselect;
- (void)_setCurrentPageBasedOnPageController:(id)arg1;
- (CGPoint)_modelPointFromPointInWindow:(CGPoint)arg1 usingPageController:(id)arg2;
- (void)applyToAllSelectedAnnotationsRotateEvent:(id)arg1 orRecognizer:(id)arg2;
- (void)finishTranslationOfAllSelectedAnnotations;
- (void)applyTranslationToAllSelectedAnnotations:(CGPoint)arg1;
- (BOOL)hitTestAnnotationsIncludingPOI:(BOOL)arg1 ignoreIfDeselected:(BOOL)arg2 atPointInWindow:(CGPoint)arg3 outAnnotation:(id )arg4;
- (BOOL)hitTestPointsOfInterestsAtPoint:(CGPoint)arg1 onPageController:(id)arg2 inAnnotations:(id)arg3 event:(id)arg4 recognizer:(id)arg5 cursorUpdateOnly:(BOOL)arg6;
- (id)topmostAnnotationForBorderAndInteriorHitTestAtPoint:(CGPoint)arg1 inAnnotations:(id)arg2 onPageController:(id)arg3 wasOnBorder:(BOOL )arg4 wasOnText:(BOOL )arg5;
- (id)annotationsPassingBoundingBoxHitTestsWithPoint:(CGPoint)arg1 onPageController:(id)arg2;
- (BOOL)continueRotateEventTrackingLoopWithEvent:(id)arg1 orRecognizer:(id)arg2;
- (BOOL)enterRotateEventTrackingLoopWithEvent:(id)arg1 orRecognizer:(id)arg2;
- (BOOL)continueDragEventTrackingLoopWithEvent:(id)arg1 orRecognizer:(id)arg2;
- (BOOL)enterDragEventTrackingLoopWithEvent:(id)arg1 orRecognizer:(id)arg2;
- (void)updateCursorForEvent:(id)arg1;
- (BOOL)handleRotateEvent:(id)arg1 orRecognizer:(id)arg2;
- (BOOL)handleKeyboardEvent:(id)arg1;
- (BOOL)handleRightDownEvent:(id)arg1;
- (BOOL)handleDoubleDownEvent:(id)arg1 orRecognizer:(id)arg2;
- (BOOL)handleDownEvent:(id)arg1 orRecognizer:(id)arg2;
- (CGPoint)modelPointFromWindowPoint:(CGPoint)arg1 foundOnPageController:(id )arg2;
- (CGPoint)windowPointFromEvent:(id)arg1 orRecognizer:(id)arg2;
- (CGPoint)modelPointFromEvent:(id)arg1 orRecognizer:(id)arg2 onPageController:(id )arg3;
- (BOOL)mainHandleEvent:(id)arg1 orRecognizer:(id)arg2;
- (void)teardown;
- (id)initWithController:(id)arg1;

@end

