//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Metal/_MTLDevice.h>

#import <MTLSimDriver/MTLDeviceSPI-Protocol.h>

@class MTLResourceListPool, MTLSerializer, NSObject;
@protocol MTLDeviceSPI, OS_dispatch_queue, OS_xpc_object;

__attribute__((visibility("hidden")))
@interface MTLSimDevice : _MTLDevice <MTLDeviceSPI>
{
    struct MTLSimConnection _mainConnection;
    struct MTLSimConnection _resourceConnection;
    struct MTLSimConnection _compilerConnection;
    MTLSerializer *_serializer;
    NSUInteger _processRef;
    unsigned int _deserializerVersion;
    NSObject<OS_dispatch_queue> *_commandBufferQueue;
    struct unordered_map<unsigned int, MTLSimCommandBuffer *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, MTLSimCommandBuffer *>>> _commandBuffers;
    MTLResourceListPool *_resourceListPool;
    id <MTLDeviceSPI> _deviceWrapper;
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } _notificationMutex;
    struct unordered_map<unsigned int, std::__1::unique_ptr<MTLSimSharedEventNotification, std::__1::default_delete<MTLSimSharedEventNotification>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::unique_ptr<MTLSimSharedEventNotification, std::__1::default_delete<MTLSimSharedEventNotification>>>>> _notifications;
    CDStruct_da2e99ad _maxThreadsPerThreadgroup;
    NSUInteger _maxThreadgroupMemoryLength;
    BOOL headless;
    BOOL lowPower;
    BOOL hasUnifiedMemory;
    BOOL removable;
    BOOL programmableSamplePositionsSupported;
    BOOL depth24Stencil8PixelFormatSupported;
    BOOL supportPriorityBand;
    BOOL metalAssertionsEnabled;
    NSUInteger currentAllocatedSize;
    NSUInteger singleFPConfig;
    NSUInteger sharedMemorySize;
    NSUInteger halfFPConfig;
    NSUInteger doubleFPConfig;
    NSUInteger dedicatedMemorySize;
    NSUInteger recommendedMaxWorkingSetSize;
    NSUInteger registryID;
}

+ (void)registerDevices;
@property(readonly) NSUInteger registryID; // @synthesize registryID;
@property(readonly) NSUInteger recommendedMaxWorkingSetSize; // @synthesize recommendedMaxWorkingSetSize;
@property(readonly) NSUInteger dedicatedMemorySize; // @synthesize dedicatedMemorySize;
@property(readonly) NSUInteger doubleFPConfig; // @synthesize doubleFPConfig;
@property(readonly) NSUInteger halfFPConfig; // @synthesize halfFPConfig;
@property(nonatomic) BOOL metalAssertionsEnabled; // @synthesize metalAssertionsEnabled;
@property(readonly) NSUInteger sharedMemorySize; // @synthesize sharedMemorySize;
@property(readonly) NSUInteger singleFPConfig; // @synthesize singleFPConfig;
@property(readonly) BOOL supportPriorityBand; // @synthesize supportPriorityBand;
@property(readonly, getter=isDepth24Stencil8PixelFormatSupported) BOOL depth24Stencil8PixelFormatSupported; // @synthesize depth24Stencil8PixelFormatSupported;
@property(readonly) NSUInteger currentAllocatedSize; // @synthesize currentAllocatedSize;
@property(readonly) MTLResourceListPool *resourceListPool; // @synthesize resourceListPool=_resourceListPool;
@property(readonly, getter=areProgrammableSamplePositionsSupported) BOOL programmableSamplePositionsSupported; // @synthesize programmableSamplePositionsSupported;
@property(readonly, getter=isRemovable) BOOL removable; // @synthesize removable;
@property(readonly) BOOL hasUnifiedMemory; // @synthesize hasUnifiedMemory;
@property(readonly, getter=isLowPower) BOOL lowPower; // @synthesize lowPower;
@property(readonly, getter=isHeadless) BOOL headless; // @synthesize headless;
@property(readonly) MTLSerializer *serializer; // @synthesize serializer=_serializer;
- (id).cxx_construct;
// - (void).cxx_destruct;
@property(readonly) NSUInteger maxBufferLength;
@property(readonly) NSUInteger featureProfile;
@property(readonly) NSUInteger maxThreadgroupMemoryLength;
@property(readonly) CDStruct_da2e99ad maxThreadsPerThreadgroup;
- (id)newSharedEvent;
- (id)newEvent;
@property(readonly) NSUInteger maxRasterizationRateLayerCount;
- (id)newRasterizationRateMapWithDescriptor:(id)arg1;
- (BOOL)supportsRasterizationRateMapWithLayerCount:(NSUInteger)arg1;
- (id)newRenderPipelineStateWithTileDescriptor:(id)arg1 options:(NSUInteger)arg2 reflection:(id )arg3 error:(id )arg4;
- (void)newRenderPipelineStateWithTileDescriptor:(id)arg1 options:(NSUInteger)arg2 completionHandler:(id /* CDUnknownBlockType */)arg3;
- (NSUInteger)minimumTextureBufferAlignmentForPixelFormat:(NSUInteger)arg1;
- (NSUInteger)minimumLinearTextureAlignmentForPixelFormat:(NSUInteger)arg1;
- (id)newBufferWithIOSurface:(struct __IOSurface )arg1;
- (BOOL)setResourcesPurgeableState:(id )arg1 newState:(NSUInteger)arg2 oldState:(NSUInteger )arg3 count:(int)arg4;
- (id)newCommandQueueWithDescriptor:(id)arg1;
- (id)vendorName;
- (BOOL)supportsSampleCount:(NSUInteger)arg1;
- (id)productName;
- (id)newTiledTextureWithBytesNoCopy:(void )arg1 length:(NSUInteger)arg2 descriptor:(id)arg3 offset:(NSUInteger)arg4 bytesPerRow:(NSUInteger)arg5;
- (id)newTiledTextureWithBytesNoCopy:(void )arg1 length:(NSUInteger)arg2 deallocator:(id /* CDUnknownBlockType */)arg3 descriptor:(id)arg4 offset:(NSUInteger)arg5 bytesPerRow:(NSUInteger)arg6;
- (id)newIndirectRenderCommandEncoderWithBuffer:(id)arg1;
- (id)newIndirectComputeCommandEncoderWithBuffer:(id)arg1;
- (id)newIndirectCommandBufferWithDescriptor:(id)arg1 maxCount:(NSUInteger)arg2 options:(NSUInteger)arg3;
- (id)newArgumentEncoderWithLayout:(id)arg1;
- (id)newIndirectArgumentBufferLayoutWithStructType:(id)arg1;
- (id)familyName;
- (id)newComputePipelineWithDescriptor:(id)arg1 variant:(NSObject )arg2 errorMessage:(id )arg3;
- (NSObject )newComputeVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2;
- (id)wrapComputeState:(id)arg1 descriptor:(id)arg2;
- (id)pipelinePerformanceStatisticsWithComputeVariant:(NSObject )arg1 compileTimeOutput:(id)arg2;
- (id)pipelinePerformanceStatisticsWithVertexVariant:(id)arg1 fragmentVariant:(id)arg2 vertexCompileTimeOutput:(id)arg3 fragmentCompileTimeOutput:(id)arg4;
- (CDStruct_04792461)pipelineFlagsWithVertexVariant:(id)arg1 fragmentVariant:(id)arg2;
- (id)newRenderPipelineWithDescriptor:(id)arg1 vertexVariant:(id)arg2 fragmentVariant:(id)arg3 errorMessage:(id )arg4;
- (id)newVertexVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2;
- (id)newFragmentVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2;
- (id)newFunctionVariantWithCompilerOutput:(id)arg1 functionType:(NSUInteger)arg2;
- (id)reportLeaks;
- (void)freeVertexFunctionKey:(void )arg1 vertexKeySize:(NSUInteger)arg2;
- (void)freeFragmentFunctionKey:(void )arg1 fragmentKeySize:(NSUInteger)arg2;
- (void )vertexFunctionKeyWithRenderPipelineDescriptor:(id)arg1 options:(NSUInteger)arg2 nextStageVariant:(id)arg3 vertexKeySize:(NSUInteger )arg4;
- (void )fragmentFunctionKeyWithRenderPipelineDescriptor:(id)arg1 options:(NSUInteger)arg2 previousStateVariant:(id)arg3 fragmentKeySize:(NSUInteger )arg4;
- (id)wrapRenderState:(id)arg1 descriptor:(id)arg2;
- (void)registerViewTexture:(id)arg1 baseTextureView:(id)arg2;
- (id)newTextureWithDescriptor:(id)arg1 iosurface:(struct __IOSurface )arg2 plane:(NSUInteger)arg3;
- (id)newTextureWithDescriptor:(id)arg1;
- (id)newSamplerStateWithDescriptor:(id)arg1;
- (void)dispatchNotificationWithReference:(unsigned int)arg1;
- (void)registerEventNotification:(unsigned int)arg1 listener:(id)arg2 event:(id)arg3 value:(NSUInteger)arg4 block:(id /* CDUnknownBlockType */)arg5;
- (id)newIndirectCommandBufferWithDescriptor:(id)arg1 maxCommandCount:(NSUInteger)arg2 options:(NSUInteger)arg3;
- (id)newHeapWithDescriptor:(id)arg1;
- (id)newFence;
- (id)newDepthStencilStateWithDescriptor:(id)arg1;
- (id)newBufferWithLength:(NSUInteger)arg1 options:(NSUInteger)arg2;
- (id)newBufferWithBytesNoCopy:(void )arg1 length:(NSUInteger)arg2 options:(NSUInteger)arg3 deallocator:(id /* CDUnknownBlockType */)arg4;
- (id)newBufferWithBytes:(const void )arg1 length:(NSUInteger)arg2 options:(NSUInteger)arg3;
- (id)newBufferWithLength:(NSUInteger)arg1 options:(NSUInteger)arg2 pointer:(void )arg3 copyBytes:(BOOL)arg4 deallocator:(id /* CDUnknownBlockType */)arg5;
- (void)releaseCommandBufferRef:(unsigned int)arg1;
- (unsigned int)registerCommandBuffer:(id)arg1;
- (id)commandBufferForReference:(unsigned int)arg1;
- (CDStruct_4bcfbbae)heapTextureSizeAndAlignWithDescriptor:(id)arg1;
- (CDStruct_da2e99ad)sparseTileSizeWithTextureType:(NSUInteger)arg1 pixelFormat:(NSUInteger)arg2 sampleCount:(NSUInteger)arg3;
- (CDStruct_4bcfbbae)heapBufferSizeAndAlignWithLength:(NSUInteger)arg1 options:(NSUInteger)arg2;
- (unsigned int)getNewResourceID;
- (id)compiler;
- (id)_deviceWrapper;
- (void)_setDeviceWrapper:(id)arg1;
- (void)dealloc;
- (id)init;
@property(readonly) NSObject<OS_xpc_object> *compilerConnection;
@property(readonly) NSObject<OS_xpc_object> *resourceConnection;
@property(readonly) NSObject<OS_xpc_object> *mainConnection;
- (BOOL)supportsVertexAmplificationCount:(NSUInteger)arg1;

@end

