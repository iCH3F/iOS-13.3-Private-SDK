//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <DoNotDisturb/DNDRemoteServiceConnectionEventListener-Protocol.h>

@class DNDModeAssertion, NSHashTable, NSString;
@protocol OS_dispatch_queue;

@interface DNDModeAssertionService : NSObject <DNDRemoteServiceConnectionEventListener>
{
    NSObject<OS_dispatch_queue> *_calloutQueue;
    NSString *_clientIdentifier;
    NSHashTable *_assertionUpdateListeners;
    struct atomic_flag _registeredForUpdates;
    DNDModeAssertion *_activeAssertion;
//     struct os_unfair_lock_s _activeAssertionLock;
}

+ (id)serviceForClientIdentifier:(id)arg1;
+ (void)initialize;
@property(readonly, copy, nonatomic) NSString *clientIdentifier; // @synthesize clientIdentifier=_clientIdentifier;
// - (void).cxx_destruct;
- (void)_handleXPCInterruption;
- (void)_registerForAssertionUpdatesIfRequiredWithCompletionHandler:(id /* CDUnknownBlockType */)arg1;
- (void)_handleChangeActiveModeAssertion:(id)arg1 invalidation:(id)arg2;
- (void)remoteService:(id)arg1 didChangeActiveModeAssertion:(id)arg2 invalidation:(id)arg3;
- (void)didReceiveConnectionInvalidatedEventForRemoteService:(id)arg1;
- (void)didReceiveConnectionInterruptedEventForRemoteService:(id)arg1;
- (void)removeAssertionUpdateListener:(id)arg1;
- (void)addAssertionUpdateListener:(id)arg1 withCompletionHandler:(id /* CDUnknownBlockType */)arg2;
- (BOOL)invalidateAllActiveModeAssertionsWithError:(id )arg1;
- (id)latestModeAssertionInvalidationWithError:(id )arg1;
- (id)activeModeAssertionWithError:(id )arg1;
- (id)invalidateActiveModeAssertionWithInvalidationDetails:(id)arg1 reasonOverride:(NSUInteger)arg2 error:(id )arg3;
- (id)invalidateActiveModeAssertionWithError:(id )arg1;
- (id)takeModeAssertionWithDetails:(id)arg1 error:(id )arg2;
- (id)_initWithClientIdentifier:(id)arg1;
- (BOOL)removeAssertionUpdateListener:(id)arg1 error:(id )arg2;
- (BOOL)addAssertionUpdateListener:(id)arg1 error:(id )arg2;

@end

