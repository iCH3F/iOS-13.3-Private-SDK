//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <ActivityAchievementsDaemon/ACHTemplateSource-Protocol.h>

@class ACHMonthlyChallengeDataSource, ACHMonthlyChallengeTemplateDataProvider, ACHSyncingMonthlyChallengeTemplateCache, NSCalendar, NSDate, NSString;

@interface ACHMonthlyChallengeTemplateSource : NSObject <ACHTemplateSource>
{
    NSDate *_currentDateOverride;
    NSCalendar *_currentCalendarOverride;
    BOOL _isAppleWatch;
    NSCalendar *_currentCalendar;
    NSDate *_currentDate;
    ACHMonthlyChallengeDataSource *_dataSource;
    ACHMonthlyChallengeTemplateDataProvider *_templateDataProvider;
    ACHSyncingMonthlyChallengeTemplateCache *_templateCache;
}

@property(nonatomic) BOOL isAppleWatch; // @synthesize isAppleWatch=_isAppleWatch;
@property(retain, nonatomic) ACHSyncingMonthlyChallengeTemplateCache *templateCache; // @synthesize templateCache=_templateCache;
@property(retain, nonatomic) ACHMonthlyChallengeTemplateDataProvider *templateDataProvider; // @synthesize templateDataProvider=_templateDataProvider;
@property(retain, nonatomic) ACHMonthlyChallengeDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) NSDate *currentDate; // @synthesize currentDate=_currentDate;
@property(retain, nonatomic) NSCalendar *currentCalendar; // @synthesize currentCalendar=_currentCalendar;
// - (void).cxx_destruct;
- (BOOL)subObjectsHaveDatabaseAssertions;
- (void)setCurrentCalendarOverride:(id)arg1;
- (void)setCurrentDateOverride:(id)arg1;
- (id)_maximumValueForMonthlyChallengeType:(NSUInteger)arg1;
- (double)_roundedGoalValue:(double)arg1 monthlyChallengeType:(NSUInteger)arg2;
- (id)_suffixForCurrentMonthForType:(NSUInteger)arg1 template:(id)arg2;
- (double)_goalValueForCurrentMonthForType:(NSUInteger)arg1;
- (double)_targetGoalValueForCurrentMonthForType:(NSUInteger)arg1;
- (void)_didOverrideMonthlyChallengeCadence;
- (BOOL)_shouldOverrideMonthlyChallengeCadence;
- (NSUInteger)_numberOfDaysInMonthForDate:(id)arg1;
- (id)_dateComponentIntervalForTwoMonthsAgo;
- (id)_dateComponentIntervalForLastMonth;
- (id)_dateComponentIntervalForCurrentMonth;
- (BOOL)_isInFirstWeekOfCurrentMonth:(id)arg1;
- (NSUInteger)_getRandomMonthlyChallengeType;
- (id)_availableMonthlyChallengeTypes;
- (BOOL)isMonthlyChallengeOfTypeAvailable:(NSUInteger)arg1;
- (BOOL)isGoalValueForMonthlyChallengeTypeValid:(NSUInteger)arg1;
- (id)customPlaceholderValuesForTemplate:(id)arg1;
- (id)_monthStringFromTemplateName:(id)arg1;
- (id)_modelsDirectoryBasePathForTemplate:(id)arg1;
- (id)_monthlyAchievementsAssetsDirectoryBasePath;
- (id)stickerBundleURLForTemplate:(id)arg1;
- (id)propertyListBundleURLForTemplate:(id)arg1;
- (id)resourceBundleURLForTemplate:(id)arg1;
- (id)localizationBundleURLForTemplate:(id)arg1;
- (id)_createMonthlyChallengeTemplateWithType:(NSUInteger)arg1 dateCompoonentInterval:(id)arg2 goalValue:(double)arg3;
- (id)possibleLocalizationSuffixesForTemplate:(id)arg1;
- (void)_removeMonthlyChallengeTemplate:(id)arg1 monthlyChallengeTemplates:(id )arg2 templatesToRemove:(id )arg3;
- (BOOL)_createMonthlyChallengeWithMonthDateInterval:(id)arg1 monthlyChallengeTemplates:(id )arg2 error:(id )arg3;
- (void)templatesForDate:(id)arg1 databaseContext:(id)arg2 completion:(id /* CDUnknownBlockType */)arg3;
- (void)templatesForDate:(id)arg1 completion:(id /* CDUnknownBlockType */)arg2;
- (BOOL)sourceShouldRunForDate:(id)arg1;
@property(readonly, nonatomic) long long runCadence;
@property(readonly, nonatomic) NSString *identifier;
- (id)initWithDataSource:(id)arg1 dataProvider:(id)arg2 templateCache:(id)arg3;

@end

