//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <FTServices/FTMessageQueueDelegate-Protocol.h>

@class FTMessageQueue, IDSBaseMessage, IMTimer, NSArray, NSNumber, NSString;

@interface FTMessageDelivery : NSObject <FTMessageQueueDelegate>
{
    unsigned int _retries;
    FTMessageQueue *_queue;
    NSString *_userAgent;
    NSUInteger _maxConcurrentMessages;
    BOOL _retryInAirplaneMode;
    BOOL _logToRegistration;
    IMTimer *_timer;
}

+ (id)_errorForTDMessageDeliveryStatus:(long long)arg1 userInfo:(id)arg2;
+ (id)alloc;
+ (Class)APNSMessageDeliveryClass;
+ (Class)HTTPMessageDeliveryClass;
@property BOOL retryInAirplaneMode; // @synthesize retryInAirplaneMode=_retryInAirplaneMode;
@property NSUInteger maxConcurrentMessages; // @synthesize maxConcurrentMessages=_maxConcurrentMessages;
@property BOOL logToRegistration; // @synthesize logToRegistration=_logToRegistration;
@property(copy) NSString *userAgent; // @synthesize userAgent=_userAgent;
// - (void).cxx_destruct;
- (void)_signMessage:(id)arg1 useDataSignatures:(BOOL)arg2 body:(id)arg3 queryString:(id)arg4 intoDictionary:(id)arg5;
- (void)networkStateChanged;
@property(readonly) long long maxLargeMessageSize;
@property(readonly) long long maxMessageSize;
- (void)_setRetryTimer:(double)arg1;
- (void)_clearRetryTimer;
- (void)_retryTimerHit:(id)arg1;
- (BOOL)sendMessage:(id)arg1;
- (void)cancelMessage:(id)arg1;
- (void)queue:(id)arg1 hitTimeoutForMessage:(id)arg2;
- (id)_queue;
@property(readonly) BOOL hasQueuedItems;
@property(readonly) BOOL busy;
@property(readonly) NSArray *allMessages;
@property(readonly) IDSBaseMessage *currentMessage;
@property(readonly) NSArray *queuedMessages;
- (BOOL)_sendMessageAsynchronously:(id)arg1 error:(id )arg2;
- (void)_informDelegateAboutMessage:(id)arg1 error:(id)arg2 result:(id)arg3 resultCode:(long long)arg4;
- (void)invalidate;
@property(copy) NSNumber *protocolVersion;
- (void)dealloc;
- (id)init;

@end

