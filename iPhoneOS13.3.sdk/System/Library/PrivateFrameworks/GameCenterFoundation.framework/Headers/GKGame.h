//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>


@class GKGameDescriptor, GKGameInternal, NSDictionary, NSString;

@interface GKGame : NSObject <NSCoding, NSSecureCoding>
{
    GKGameInternal *_internal;
    long long _environment;
}

+ (BOOL)instancesRespondToSelector:(SEL)arg1;
+ (id)instanceMethodSignatureForSelector:(SEL)arg1;
+ (void)updateGames:(id)arg1 withCompletionHandler:(id /* CDUnknownBlockType */)arg2;
+ (void)loadTopGamesWithCompletionHandler:(id /* CDUnknownBlockType */)arg1;
+ (void)loadGamesWithBundleIDs:(id)arg1 withCompletionHandler:(id /* CDUnknownBlockType */)arg2;
+ (BOOL)supportsSecureCoding;
+ (void)setCurrentGameFromInternal:(id)arg1 serverEnvironment:(long long)arg2;
+ (id)currentGameIncludingGameCenter:(BOOL)arg1;
+ (id)currentGame;
+ (BOOL)isGameCenter;
+ (BOOL)isPreferences;
@property long long environment; // @synthesize environment=_environment;
@property(retain) GKGameInternal *internal; // @synthesize internal=_internal;
@property(readonly, nonatomic, getter=isInstalled) BOOL installedGame;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (BOOL)isStoreItemUnexpired;
@property(readonly, nonatomic) struct GKGameInfo gameInfo;
@property(readonly, nonatomic) NSString *cacheKey;
@property(readonly, nonatomic) NSDictionary *gameDescriptorDictionary;
@property(readonly, nonatomic) GKGameDescriptor *gameDescriptor;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (NSUInteger)hash;
- (void)dealloc;
// - (id)copyWithZone:(_NSZone )arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (id)initWithInternalRepresentation:(id)arg1;
- (BOOL)isGameCenter;
- (void)loadTellAFriendMessageWithCompletionHandler:(id /* CDUnknownBlockType */)arg1;
- (void)getFriendPlayersForAchievement:(id)arg1 handler:(id /* CDUnknownBlockType */)arg2;
- (void)getFriendPlayersForLeaderboard:(id)arg1 handler:(id /* CDUnknownBlockType */)arg2;
- (void)getFriendPlayersIncludingCompatibleGames:(BOOL)arg1 handler:(id /* CDUnknownBlockType */)arg2;
- (void)submitRating:(float)arg1 withCompletionHandler:(id /* CDUnknownBlockType */)arg2;
- (void)loadGameRatingWithCompletionHandler:(id /* CDUnknownBlockType */)arg1;

@end

