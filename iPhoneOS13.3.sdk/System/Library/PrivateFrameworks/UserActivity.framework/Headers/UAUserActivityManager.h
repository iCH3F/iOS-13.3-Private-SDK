//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 22 2020 01:47:48).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <UserActivity/UAUserActivityClientResponseProtocol-Protocol.h>

@class NSMapTable, NSMutableSet, NSSet, NSUUID, NSXPCConnection;
@protocol OS_dispatch_queue;

@interface UAUserActivityManager : NSObject <UAUserActivityClientResponseProtocol>
{
    NSXPCConnection *_connection;
    NSObject<OS_dispatch_queue> *_serverQ;
    BOOL _connectionInitializationSucceeded;
    NSMapTable *_userActivitiesByUUID;
    BOOL _supportsActivityContinuation;
    BOOL _activityContinuationIsEnabled;
    NSMutableSet *_userActivityUUIDsSendToServer;
    BOOL _registeredForAppResignationMessages;
    BOOL _needToSendInitialMessage;
    NSUUID *_activeUserActivityUUID;
    NSMapTable *_activeUserActivitiesByUUID;
}

+ (id)_determineMatchingApplicationBundleIdentfierWithOptionsForActivityType:(id)arg1 dynamicType:(id)arg2 kind:(NSUInteger)arg3 teamIdentifier:(id)arg4;
+ (BOOL)dontConnectToServer;
+ (id)defaultManager;
+ (BOOL)userActivityContinuationSupported;
+ (BOOL)shouldSupportActivityContinuation;
@property BOOL needToSendInitialMessage; // @synthesize needToSendInitialMessage=_needToSendInitialMessage;
@property(retain) NSMapTable *activeUserActivitiesByUUID; // @synthesize activeUserActivitiesByUUID=_activeUserActivitiesByUUID;
@property(retain) NSMapTable *userActivitiesByUUID; // @synthesize userActivitiesByUUID=_userActivitiesByUUID;
@property(readonly) NSObject<OS_dispatch_queue> *serverQ; // @synthesize serverQ=_serverQ;
@property(copy) NSUUID *activeUserActivityUUID; // @synthesize activeUserActivityUUID=_activeUserActivityUUID;
@property(readonly) BOOL supportsActivityContinuation; // @synthesize supportsActivityContinuation=_supportsActivityContinuation;
@property BOOL registeredForAppResignationMessages; // @synthesize registeredForAppResignationMessages=_registeredForAppResignationMessages;
// - (void).cxx_destruct;
- (BOOL)registerAsProxyForApplication:(int)arg1 options:(id)arg2 completionBlock:(id /* CDUnknownBlockType */)arg3;
- (void)registerForApplicationDeactivateIfNecessary;
- (void)sendCurrentActivityToIndexer:(id)arg1;
- (void)sendToIndexerIfAppropriate:(id)arg1 force:(BOOL)arg2;
- (id)activities;
- (BOOL)hasUserActivityWithUUID:(id)arg1;
- (void)pinUserActivity:(id)arg1 withCompletionHandler:(id /* CDUnknownBlockType */)arg2;
- (BOOL)determineIfUserActivityIsCurrent:(id)arg1 completionHandler:(id /* CDUnknownBlockType */)arg2;
- (BOOL)currentUserActivityUUIDWithOptions:(id)arg1 completionHandler:(id /* CDUnknownBlockType */)arg2;
- (void)markUserActivityAsDirty:(id)arg1 forceImmediate:(BOOL)arg2;
- (void)sendUserActivityInfoToLSUserActivityd:(id)arg1 makeCurrent:(BOOL)arg2;
- (void)tellDaemonAboutNewLSUserActivity:(id)arg1;
- (id)createByDecodingUserActivity:(id)arg1;
- (id)encodeUserActivity:(id)arg1;
- (void)didReceiveInputStreamWithUUID:(id)arg1 inputStream:(id)arg2 outputStream:(id)arg3;
- (void)tellClientDebuggingEnabled:(BOOL)arg1 logFileHandle:(id)arg2;
- (void)tellClientUserActivityItWasResumed:(id)arg1;
- (void)askClientUserActivityToSave:(id)arg1 completionHandler:(id /* CDUnknownBlockType */)arg2;
- (void)askClientUserActivityToSave:(id)arg1;
- (id)activeActivitiesByPriority;
- (id)userActivityForUUID:(id)arg1;
- (BOOL)userActivityIsActive:(id)arg1;
- (void)makeInactive:(id)arg1;
- (void)makeActive:(id)arg1;
- (void)removeDynamicUserActivity:(id)arg1 matching:(id)arg2;
- (void)addDynamicUserActivity:(id)arg1 matching:(id)arg2;
- (void)removeUserActivity:(id)arg1;
- (void)addUserActivity:(id)arg1;
@property(readonly, copy) NSSet *userActivityUUIDsSendToServer;
- (id)fetchUUID:(id)arg1 intervalToWaitForDocumentSynchonization:(double)arg2 withCompletionHandler:(id /* CDUnknownBlockType */)arg3;
@property(readonly) BOOL activityContinuationIsEnabled;
- (void)connectionInterrupted;
@property(readonly) NSXPCConnection *connection;
- (void)dealloc;
- (id)initWithConnection:(id)arg1;
- (id)init;
- (void)sendInitialMessage:(BOOL)arg1;

@end

